{
	"info": {
		"_postman_id": "c01fc256-3cd4-422a-8a88-2f1ea04e7c73",
		"name": "IdentityNow V3 API",
		"description": "Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.\n\nContact Support:\n Name: Developer Relations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23226990-c01fc256-3cd4-422a-8a88-2f1ea04e7c73"
	},
	"item": [
		{
			"name": "access-requests",
			"item": [
				{
					"name": "Submit an Access Request",
					"id": "f65a8e44-9f6b-4146-a8aa-410409732040",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestedFor\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requestedItems\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"sunt_044\": \"<string>\",\n        \"eiusmod4\": \"<string>\",\n        \"esse_9\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"irure3c\": \"<string>\",\n        \"anim_0\": \"<string>\",\n        \"sed_6\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    }\n  ],\n  \"requestType\": \"<string>\",\n  \"clientMetadata\": {\n    \"velitc7\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/access-requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-requests"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This submits the access request into IdentityNow, where it will follow any IdentityNow approval processes.\n\nAccess requests are processed asynchronously by IdentityNow.  A success response from this endpoint means the request\nhas been submitted to IDN and is queued for processing.  Because this endpoint is asynchronous, it will not return an error\nif you submit duplicate access requests in quick succession, or you submit an access request for access that is already in progress, approved, or rejected.\nIt is best practice to check for any existing access requests that reference the same access items before submitting a new access request.  This can\nbe accomplished by using the [access request status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status) or the [pending access request approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals) endpoints.  You can also\nuse the [search API](https://developer.sailpoint.com/idn/api/v3/search) to check the existing access items that an identity has before submitting\nan access request to ensure you are not requesting access that is already granted.\n\nThere are two types of access request:\n\n__GRANT_ACCESS__\n* Can be requested for multiple identities in a single request.\n* Supports self request and request on behalf of other users, see '/beta/access-request-config' endpoint for request configuration options.  \n* Allows any authenticated token (except API) to call this endpoint to request to grant access to themselves. Depending on the configuration, a user can request access for others.\n* Roles, Access Profiles and Entitlements can be requested.\n* While requesting entitlements, maximum of 25 entitlements and 10 recipients are allowed in a request.\n \n__REVOKE_ACCESS__\n* Can only be requested for a single identity at a time.\n* Does not support self request. Only manager can request to revoke access for their directly managed employees.\n* If removeDate is specified, then the access will be removed on that date and time.\n* Allows a manager to request to revoke access for direct employees. A token with ORG_ADMIN authority can also request to revoke access from anyone.\n* Roles and Access Profiles can be requested for revocation. Revoke request for entitlements are not supported currently.\n\nNOTE: There is no indication to the approver in the IdentityNow UI that the approval request is for a revoke action. Take this into consideration when calling this API.\n\nA token with API authority cannot be used to call this endpoint. \n"
					},
					"response": [
						{
							"id": "87340111-5495-49e0-85b0-a177658a1817",
							"name": "Accepted - Returned if the request was successfully accepted into the system.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestedFor\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requestedItems\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"sunt_044\": \"<string>\",\n        \"eiusmod4\": \"<string>\",\n        \"esse_9\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"irure3c\": \"<string>\",\n        \"anim_0\": \"<string>\",\n        \"sed_6\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    }\n  ],\n  \"requestType\": \"<string>\",\n  \"clientMetadata\": {\n    \"velitc7\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This submits the access request into IdentityNow, where it will follow any IdentityNow approval processes.\n\nAccess requests are processed asynchronously by IdentityNow.  A success response from this endpoint means the request\nhas been submitted to IDN and is queued for processing.  Because this endpoint is asynchronous, it will not return an error\nif you submit duplicate access requests in quick succession, or you submit an access request for access that is already in progress, approved, or rejected.\nIt is best practice to check for any existing access requests that reference the same access items before submitting a new access request.  This can\nbe accomplished by using the [access request status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status) or the [pending access request approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals) endpoints.  You can also\nuse the [search API](https://developer.sailpoint.com/idn/api/v3/search) to check the existing access items that an identity has before submitting\nan access request to ensure you are not requesting access that is already granted.\n\nThere are two types of access request:\n\n__GRANT_ACCESS__\n* Can be requested for multiple identities in a single request.\n* Supports self request and request on behalf of other users, see '/beta/access-request-config' endpoint for request configuration options.  \n* Allows any authenticated token (except API) to call this endpoint to request to grant access to themselves. Depending on the configuration, a user can request access for others.\n* Roles, Access Profiles and Entitlements can be requested.\n* While requesting entitlements, maximum of 25 entitlements and 10 recipients are allowed in a request.\n \n__REVOKE_ACCESS__\n* Can only be requested for a single identity at a time.\n* Does not support self request. Only manager can request to revoke access for their directly managed employees.\n* If removeDate is specified, then the access will be removed on that date and time.\n* Allows a manager to request to revoke access for direct employees. A token with ORG_ADMIN authority can also request to revoke access from anyone.\n* Roles and Access Profiles can be requested for revocation. Revoke request for entitlements are not supported currently.\n\nNOTE: There is no indication to the approver in the IdentityNow UI that the approval request is for a revoke action. Take this into consideration when calling this API.\n\nA token with API authority cannot be used to call this endpoint. \n"
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "de4e2ad4-7def-47e3-84dd-28ba6e0f0efa",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestedFor\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requestedItems\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"sunt_044\": \"<string>\",\n        \"eiusmod4\": \"<string>\",\n        \"esse_9\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"irure3c\": \"<string>\",\n        \"anim_0\": \"<string>\",\n        \"sed_6\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    }\n  ],\n  \"requestType\": \"<string>\",\n  \"clientMetadata\": {\n    \"velitc7\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This submits the access request into IdentityNow, where it will follow any IdentityNow approval processes.\n\nAccess requests are processed asynchronously by IdentityNow.  A success response from this endpoint means the request\nhas been submitted to IDN and is queued for processing.  Because this endpoint is asynchronous, it will not return an error\nif you submit duplicate access requests in quick succession, or you submit an access request for access that is already in progress, approved, or rejected.\nIt is best practice to check for any existing access requests that reference the same access items before submitting a new access request.  This can\nbe accomplished by using the [access request status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status) or the [pending access request approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals) endpoints.  You can also\nuse the [search API](https://developer.sailpoint.com/idn/api/v3/search) to check the existing access items that an identity has before submitting\nan access request to ensure you are not requesting access that is already granted.\n\nThere are two types of access request:\n\n__GRANT_ACCESS__\n* Can be requested for multiple identities in a single request.\n* Supports self request and request on behalf of other users, see '/beta/access-request-config' endpoint for request configuration options.  \n* Allows any authenticated token (except API) to call this endpoint to request to grant access to themselves. Depending on the configuration, a user can request access for others.\n* Roles, Access Profiles and Entitlements can be requested.\n* While requesting entitlements, maximum of 25 entitlements and 10 recipients are allowed in a request.\n \n__REVOKE_ACCESS__\n* Can only be requested for a single identity at a time.\n* Does not support self request. Only manager can request to revoke access for their directly managed employees.\n* If removeDate is specified, then the access will be removed on that date and time.\n* Allows a manager to request to revoke access for direct employees. A token with ORG_ADMIN authority can also request to revoke access from anyone.\n* Roles and Access Profiles can be requested for revocation. Revoke request for entitlements are not supported currently.\n\nNOTE: There is no indication to the approver in the IdentityNow UI that the approval request is for a revoke action. Take this into consideration when calling this API.\n\nA token with API authority cannot be used to call this endpoint. \n"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "4cdc49a0-c818-45cc-9ea6-2108b34e1556",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestedFor\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requestedItems\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"sunt_044\": \"<string>\",\n        \"eiusmod4\": \"<string>\",\n        \"esse_9\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"irure3c\": \"<string>\",\n        \"anim_0\": \"<string>\",\n        \"sed_6\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    }\n  ],\n  \"requestType\": \"<string>\",\n  \"clientMetadata\": {\n    \"velitc7\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This submits the access request into IdentityNow, where it will follow any IdentityNow approval processes.\n\nAccess requests are processed asynchronously by IdentityNow.  A success response from this endpoint means the request\nhas been submitted to IDN and is queued for processing.  Because this endpoint is asynchronous, it will not return an error\nif you submit duplicate access requests in quick succession, or you submit an access request for access that is already in progress, approved, or rejected.\nIt is best practice to check for any existing access requests that reference the same access items before submitting a new access request.  This can\nbe accomplished by using the [access request status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status) or the [pending access request approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals) endpoints.  You can also\nuse the [search API](https://developer.sailpoint.com/idn/api/v3/search) to check the existing access items that an identity has before submitting\nan access request to ensure you are not requesting access that is already granted.\n\nThere are two types of access request:\n\n__GRANT_ACCESS__\n* Can be requested for multiple identities in a single request.\n* Supports self request and request on behalf of other users, see '/beta/access-request-config' endpoint for request configuration options.  \n* Allows any authenticated token (except API) to call this endpoint to request to grant access to themselves. Depending on the configuration, a user can request access for others.\n* Roles, Access Profiles and Entitlements can be requested.\n* While requesting entitlements, maximum of 25 entitlements and 10 recipients are allowed in a request.\n \n__REVOKE_ACCESS__\n* Can only be requested for a single identity at a time.\n* Does not support self request. Only manager can request to revoke access for their directly managed employees.\n* If removeDate is specified, then the access will be removed on that date and time.\n* Allows a manager to request to revoke access for direct employees. A token with ORG_ADMIN authority can also request to revoke access from anyone.\n* Roles and Access Profiles can be requested for revocation. Revoke request for entitlements are not supported currently.\n\nNOTE: There is no indication to the approver in the IdentityNow UI that the approval request is for a revoke action. Take this into consideration when calling this API.\n\nA token with API authority cannot be used to call this endpoint. \n"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "4a685390-09f6-466e-93c7-2b9c3d59cedf",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestedFor\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requestedItems\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"sunt_044\": \"<string>\",\n        \"eiusmod4\": \"<string>\",\n        \"esse_9\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"irure3c\": \"<string>\",\n        \"anim_0\": \"<string>\",\n        \"sed_6\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    }\n  ],\n  \"requestType\": \"<string>\",\n  \"clientMetadata\": {\n    \"velitc7\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This submits the access request into IdentityNow, where it will follow any IdentityNow approval processes.\n\nAccess requests are processed asynchronously by IdentityNow.  A success response from this endpoint means the request\nhas been submitted to IDN and is queued for processing.  Because this endpoint is asynchronous, it will not return an error\nif you submit duplicate access requests in quick succession, or you submit an access request for access that is already in progress, approved, or rejected.\nIt is best practice to check for any existing access requests that reference the same access items before submitting a new access request.  This can\nbe accomplished by using the [access request status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status) or the [pending access request approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals) endpoints.  You can also\nuse the [search API](https://developer.sailpoint.com/idn/api/v3/search) to check the existing access items that an identity has before submitting\nan access request to ensure you are not requesting access that is already granted.\n\nThere are two types of access request:\n\n__GRANT_ACCESS__\n* Can be requested for multiple identities in a single request.\n* Supports self request and request on behalf of other users, see '/beta/access-request-config' endpoint for request configuration options.  \n* Allows any authenticated token (except API) to call this endpoint to request to grant access to themselves. Depending on the configuration, a user can request access for others.\n* Roles, Access Profiles and Entitlements can be requested.\n* While requesting entitlements, maximum of 25 entitlements and 10 recipients are allowed in a request.\n \n__REVOKE_ACCESS__\n* Can only be requested for a single identity at a time.\n* Does not support self request. Only manager can request to revoke access for their directly managed employees.\n* If removeDate is specified, then the access will be removed on that date and time.\n* Allows a manager to request to revoke access for direct employees. A token with ORG_ADMIN authority can also request to revoke access from anyone.\n* Roles and Access Profiles can be requested for revocation. Revoke request for entitlements are not supported currently.\n\nNOTE: There is no indication to the approver in the IdentityNow UI that the approval request is for a revoke action. Take this into consideration when calling this API.\n\nA token with API authority cannot be used to call this endpoint. \n"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "a2f72f48-f3f6-414e-b59d-15400f1a9765",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestedFor\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requestedItems\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"sunt_044\": \"<string>\",\n        \"eiusmod4\": \"<string>\",\n        \"esse_9\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"irure3c\": \"<string>\",\n        \"anim_0\": \"<string>\",\n        \"sed_6\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    }\n  ],\n  \"requestType\": \"<string>\",\n  \"clientMetadata\": {\n    \"velitc7\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This submits the access request into IdentityNow, where it will follow any IdentityNow approval processes.\n\nAccess requests are processed asynchronously by IdentityNow.  A success response from this endpoint means the request\nhas been submitted to IDN and is queued for processing.  Because this endpoint is asynchronous, it will not return an error\nif you submit duplicate access requests in quick succession, or you submit an access request for access that is already in progress, approved, or rejected.\nIt is best practice to check for any existing access requests that reference the same access items before submitting a new access request.  This can\nbe accomplished by using the [access request status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status) or the [pending access request approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals) endpoints.  You can also\nuse the [search API](https://developer.sailpoint.com/idn/api/v3/search) to check the existing access items that an identity has before submitting\nan access request to ensure you are not requesting access that is already granted.\n\nThere are two types of access request:\n\n__GRANT_ACCESS__\n* Can be requested for multiple identities in a single request.\n* Supports self request and request on behalf of other users, see '/beta/access-request-config' endpoint for request configuration options.  \n* Allows any authenticated token (except API) to call this endpoint to request to grant access to themselves. Depending on the configuration, a user can request access for others.\n* Roles, Access Profiles and Entitlements can be requested.\n* While requesting entitlements, maximum of 25 entitlements and 10 recipients are allowed in a request.\n \n__REVOKE_ACCESS__\n* Can only be requested for a single identity at a time.\n* Does not support self request. Only manager can request to revoke access for their directly managed employees.\n* If removeDate is specified, then the access will be removed on that date and time.\n* Allows a manager to request to revoke access for direct employees. A token with ORG_ADMIN authority can also request to revoke access from anyone.\n* Roles and Access Profiles can be requested for revocation. Revoke request for entitlements are not supported currently.\n\nNOTE: There is no indication to the approver in the IdentityNow UI that the approval request is for a revoke action. Take this into consideration when calling this API.\n\nA token with API authority cannot be used to call this endpoint. \n"
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "080c5ed0-c8de-4b06-b13e-556220579846",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestedFor\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"requestedItems\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"sunt_044\": \"<string>\",\n        \"eiusmod4\": \"<string>\",\n        \"esse_9\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"clientMetadata\": {\n        \"irure3c\": \"<string>\",\n        \"anim_0\": \"<string>\",\n        \"sed_6\": \"<string>\"\n      },\n      \"removeDate\": \"<dateTime>\"\n    }\n  ],\n  \"requestType\": \"<string>\",\n  \"clientMetadata\": {\n    \"velitc7\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This submits the access request into IdentityNow, where it will follow any IdentityNow approval processes.\n\nAccess requests are processed asynchronously by IdentityNow.  A success response from this endpoint means the request\nhas been submitted to IDN and is queued for processing.  Because this endpoint is asynchronous, it will not return an error\nif you submit duplicate access requests in quick succession, or you submit an access request for access that is already in progress, approved, or rejected.\nIt is best practice to check for any existing access requests that reference the same access items before submitting a new access request.  This can\nbe accomplished by using the [access request status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status) or the [pending access request approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals) endpoints.  You can also\nuse the [search API](https://developer.sailpoint.com/idn/api/v3/search) to check the existing access items that an identity has before submitting\nan access request to ensure you are not requesting access that is already granted.\n\nThere are two types of access request:\n\n__GRANT_ACCESS__\n* Can be requested for multiple identities in a single request.\n* Supports self request and request on behalf of other users, see '/beta/access-request-config' endpoint for request configuration options.  \n* Allows any authenticated token (except API) to call this endpoint to request to grant access to themselves. Depending on the configuration, a user can request access for others.\n* Roles, Access Profiles and Entitlements can be requested.\n* While requesting entitlements, maximum of 25 entitlements and 10 recipients are allowed in a request.\n \n__REVOKE_ACCESS__\n* Can only be requested for a single identity at a time.\n* Does not support self request. Only manager can request to revoke access for their directly managed employees.\n* If removeDate is specified, then the access will be removed on that date and time.\n* Allows a manager to request to revoke access for direct employees. A token with ORG_ADMIN authority can also request to revoke access from anyone.\n* Roles and Access Profiles can be requested for revocation. Revoke request for entitlements are not supported currently.\n\nNOTE: There is no indication to the approver in the IdentityNow UI that the approval request is for a revoke action. Take this into consideration when calling this API.\n\nA token with API authority cannot be used to call this endpoint. \n"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Cancel Access Request",
					"id": "3ee50fe7-57bd-4cbd-8448-5a71fa97a676",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountActivityId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/access-requests/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-requests",
								"cancel"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.\nAny token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it."
					},
					"response": [
						{
							"id": "72175508-76a9-4518-ac92-3a670cfb82e0",
							"name": "Accepted - Returned if the request was successfully accepted into the system.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountActivityId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests",
										"cancel"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.\nAny token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it."
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "59e7bd7a-604c-4ab5-b0ce-f067a4da030b",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountActivityId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests",
										"cancel"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.\nAny token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "5213b680-e027-4c29-b401-5e07ccb44b66",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountActivityId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests",
										"cancel"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.\nAny token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "de90693b-a492-42be-acb8-7b92bdda4536",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountActivityId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests",
										"cancel"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.\nAny token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "5a645a70-3e4e-4c0c-865c-b4f273e36429",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountActivityId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests",
										"cancel"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.\nAny token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "bef8727d-bef3-415e-a270-534b383836d7",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountActivityId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests",
										"cancel"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.\nAny token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "76d9c0f0-c46d-4ce9-ade5-0084d7737d8f",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountActivityId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-requests/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-requests",
										"cancel"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.\nAny token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "197f4732-a36e-4d14-b211-345112bbf0c8"
		},
		{
			"name": "access-request-config",
			"item": [
				{
					"name": "Get Access Request Configuration",
					"id": "140cc4d2-e275-45c4-81cd-3d767db2aa50",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-config"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns the current access-request configuration."
					},
					"response": [
						{
							"id": "24f7f431-2e85-4efd-9b21-a3e2e84ea6db",
							"name": "Access Request Configuration Details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the current access-request configuration."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"approvalsMustBeExternal\": true,\n  \"autoApprovalEnabled\": true,\n  \"requestOnBehalfOfConfig\": {\n    \"allowRequestOnBehalfOfAnyoneByAnyone\": true,\n    \"allowRequestOnBehalfOfEmployeeByManager\": true\n  },\n  \"approvalReminderAndEscalationConfig\": {\n    \"daysUntilEscalation\": 0,\n    \"daysBetweenReminders\": 0,\n    \"maxReminders\": 0,\n    \"fallbackApproverRef\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\",\n      \"name\": \"Alison Ferguso\",\n      \"email\": \"alison.ferguso@identitysoon.com\"\n    }\n  },\n  \"entitlementRequestConfig\": {\n    \"allowEntitlementRequest\": true,\n    \"requestCommentsRequired\": false,\n    \"deniedCommentsRequired\": false,\n    \"grantRequestApprovalSchemes\": \"sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584\"\n  }\n}"
						},
						{
							"id": "934cd919-6621-466a-990e-596dbe5163ab",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the current access-request configuration."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "ca31094b-9ab4-4376-8ff0-bcc94e80b6a8",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the current access-request configuration."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "c009877a-7b46-4331-b71c-8fbfd57dcfa3",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the current access-request configuration."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "93a7e60e-b449-48fb-b3e3-0b0ec02bd060",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the current access-request configuration."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "9a5f812b-479f-41c3-85d3-cb26e5569c34",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the current access-request configuration."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Access Request Configuration",
					"id": "0a6fddcd-1c59-49e5-804b-48341cfabcdd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"approvalsMustBeExternal\": \"<boolean>\",\n  \"autoApprovalEnabled\": \"<boolean>\",\n  \"requestOnBehalfOfConfig\": {\n    \"allowRequestOnBehalfOfAnyoneByAnyone\": \"<boolean>\",\n    \"allowRequestOnBehalfOfEmployeeByManager\": \"<boolean>\"\n  },\n  \"approvalReminderAndEscalationConfig\": {\n    \"daysUntilEscalation\": \"<integer>\",\n    \"daysBetweenReminders\": \"<integer>\",\n    \"maxReminders\": \"<integer>\",\n    \"fallbackApproverRef\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    }\n  },\n  \"entitlementRequestConfig\": {\n    \"allowEntitlementRequest\": \"<boolean>\",\n    \"requestCommentsRequired\": false,\n    \"deniedCommentsRequired\": false,\n    \"grantRequestApprovalSchemes\": \"sourceOwner\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/access-request-config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-config"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint replaces the current access-request configuration.\nA token with ORG_ADMIN authority is required to call this API."
					},
					"response": [
						{
							"id": "38175496-22ae-44a7-b902-4ac5a15938ea",
							"name": "Access Request Configuration Details.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approvalsMustBeExternal\": \"<boolean>\",\n  \"autoApprovalEnabled\": \"<boolean>\",\n  \"requestOnBehalfOfConfig\": {\n    \"allowRequestOnBehalfOfAnyoneByAnyone\": \"<boolean>\",\n    \"allowRequestOnBehalfOfEmployeeByManager\": \"<boolean>\"\n  },\n  \"approvalReminderAndEscalationConfig\": {\n    \"daysUntilEscalation\": \"<integer>\",\n    \"daysBetweenReminders\": \"<integer>\",\n    \"maxReminders\": \"<integer>\",\n    \"fallbackApproverRef\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    }\n  },\n  \"entitlementRequestConfig\": {\n    \"allowEntitlementRequest\": \"<boolean>\",\n    \"requestCommentsRequired\": false,\n    \"deniedCommentsRequired\": false,\n    \"grantRequestApprovalSchemes\": \"sourceOwner\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint replaces the current access-request configuration.\nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"approvalsMustBeExternal\": true,\n  \"autoApprovalEnabled\": true,\n  \"requestOnBehalfOfConfig\": {\n    \"allowRequestOnBehalfOfAnyoneByAnyone\": true,\n    \"allowRequestOnBehalfOfEmployeeByManager\": true\n  },\n  \"approvalReminderAndEscalationConfig\": {\n    \"daysUntilEscalation\": 0,\n    \"daysBetweenReminders\": 0,\n    \"maxReminders\": 0,\n    \"fallbackApproverRef\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\",\n      \"name\": \"Alison Ferguso\",\n      \"email\": \"alison.ferguso@identitysoon.com\"\n    }\n  },\n  \"entitlementRequestConfig\": {\n    \"allowEntitlementRequest\": true,\n    \"requestCommentsRequired\": false,\n    \"deniedCommentsRequired\": false,\n    \"grantRequestApprovalSchemes\": \"sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584\"\n  }\n}"
						},
						{
							"id": "de28edda-2a9d-4a41-aa60-9f72621e7089",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approvalsMustBeExternal\": \"<boolean>\",\n  \"autoApprovalEnabled\": \"<boolean>\",\n  \"requestOnBehalfOfConfig\": {\n    \"allowRequestOnBehalfOfAnyoneByAnyone\": \"<boolean>\",\n    \"allowRequestOnBehalfOfEmployeeByManager\": \"<boolean>\"\n  },\n  \"approvalReminderAndEscalationConfig\": {\n    \"daysUntilEscalation\": \"<integer>\",\n    \"daysBetweenReminders\": \"<integer>\",\n    \"maxReminders\": \"<integer>\",\n    \"fallbackApproverRef\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    }\n  },\n  \"entitlementRequestConfig\": {\n    \"allowEntitlementRequest\": \"<boolean>\",\n    \"requestCommentsRequired\": false,\n    \"deniedCommentsRequired\": false,\n    \"grantRequestApprovalSchemes\": \"sourceOwner\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint replaces the current access-request configuration.\nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "343545b8-e8cb-4f86-848d-c6c18ceeb1af",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approvalsMustBeExternal\": \"<boolean>\",\n  \"autoApprovalEnabled\": \"<boolean>\",\n  \"requestOnBehalfOfConfig\": {\n    \"allowRequestOnBehalfOfAnyoneByAnyone\": \"<boolean>\",\n    \"allowRequestOnBehalfOfEmployeeByManager\": \"<boolean>\"\n  },\n  \"approvalReminderAndEscalationConfig\": {\n    \"daysUntilEscalation\": \"<integer>\",\n    \"daysBetweenReminders\": \"<integer>\",\n    \"maxReminders\": \"<integer>\",\n    \"fallbackApproverRef\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    }\n  },\n  \"entitlementRequestConfig\": {\n    \"allowEntitlementRequest\": \"<boolean>\",\n    \"requestCommentsRequired\": false,\n    \"deniedCommentsRequired\": false,\n    \"grantRequestApprovalSchemes\": \"sourceOwner\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint replaces the current access-request configuration.\nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "a203fd7c-1ee1-4d28-b739-806dcd2ec629",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approvalsMustBeExternal\": \"<boolean>\",\n  \"autoApprovalEnabled\": \"<boolean>\",\n  \"requestOnBehalfOfConfig\": {\n    \"allowRequestOnBehalfOfAnyoneByAnyone\": \"<boolean>\",\n    \"allowRequestOnBehalfOfEmployeeByManager\": \"<boolean>\"\n  },\n  \"approvalReminderAndEscalationConfig\": {\n    \"daysUntilEscalation\": \"<integer>\",\n    \"daysBetweenReminders\": \"<integer>\",\n    \"maxReminders\": \"<integer>\",\n    \"fallbackApproverRef\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    }\n  },\n  \"entitlementRequestConfig\": {\n    \"allowEntitlementRequest\": \"<boolean>\",\n    \"requestCommentsRequired\": false,\n    \"deniedCommentsRequired\": false,\n    \"grantRequestApprovalSchemes\": \"sourceOwner\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint replaces the current access-request configuration.\nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "663d7ef4-09e9-40d0-9a8e-44354570d4b6",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approvalsMustBeExternal\": \"<boolean>\",\n  \"autoApprovalEnabled\": \"<boolean>\",\n  \"requestOnBehalfOfConfig\": {\n    \"allowRequestOnBehalfOfAnyoneByAnyone\": \"<boolean>\",\n    \"allowRequestOnBehalfOfEmployeeByManager\": \"<boolean>\"\n  },\n  \"approvalReminderAndEscalationConfig\": {\n    \"daysUntilEscalation\": \"<integer>\",\n    \"daysBetweenReminders\": \"<integer>\",\n    \"maxReminders\": \"<integer>\",\n    \"fallbackApproverRef\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    }\n  },\n  \"entitlementRequestConfig\": {\n    \"allowEntitlementRequest\": \"<boolean>\",\n    \"requestCommentsRequired\": false,\n    \"deniedCommentsRequired\": false,\n    \"grantRequestApprovalSchemes\": \"sourceOwner\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint replaces the current access-request configuration.\nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "4eadf2ab-11b7-4cb9-8083-53b18ae680f7",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approvalsMustBeExternal\": \"<boolean>\",\n  \"autoApprovalEnabled\": \"<boolean>\",\n  \"requestOnBehalfOfConfig\": {\n    \"allowRequestOnBehalfOfAnyoneByAnyone\": \"<boolean>\",\n    \"allowRequestOnBehalfOfEmployeeByManager\": \"<boolean>\"\n  },\n  \"approvalReminderAndEscalationConfig\": {\n    \"daysUntilEscalation\": \"<integer>\",\n    \"daysBetweenReminders\": \"<integer>\",\n    \"maxReminders\": \"<integer>\",\n    \"fallbackApproverRef\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    }\n  },\n  \"entitlementRequestConfig\": {\n    \"allowEntitlementRequest\": \"<boolean>\",\n    \"requestCommentsRequired\": false,\n    \"deniedCommentsRequired\": false,\n    \"grantRequestApprovalSchemes\": \"sourceOwner\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-request-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint replaces the current access-request configuration.\nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "84e72412-c33f-4f8d-9bc5-f38f4a0fd969"
		},
		{
			"name": "access-request-approvals",
			"item": [
				{
					"name": "{approval Id}",
					"item": [
						{
							"name": "Approves an access request approval.",
							"id": "44c59010-6536-4693-bc7e-cda658487801",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/:approvalId/approve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										":approvalId",
										"approve"
									],
									"variable": [
										{
											"key": "approvalId",
											"value": "<string>",
											"description": "(Required) The id of the approval."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint approves an access request approval. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
							},
							"response": [
								{
									"id": "5ede1c7a-95f4-4210-9324-5edc3640da9b",
									"name": "Accepted - Returned if the request was successfully accepted into the system.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"approve"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint approves an access request approval. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "9adf51ff-ce21-4620-ac31-2b33712fff95",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"approve"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint approves an access request approval. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "bcb369c6-449f-4592-9ab8-fd4a6c2ad171",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"approve"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint approves an access request approval. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "826c8e85-b109-4e1d-9635-558140c17a1b",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"approve"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint approves an access request approval. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "a697fe47-33ec-406c-a3cf-a20d4189a5c7",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"approve"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint approves an access request approval. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "593597eb-028f-4cd7-b3bb-d096d470198b",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"approve"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint approves an access request approval. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "4d1baf58-977f-4263-a136-ca4ee8b29793",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"approve"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint approves an access request approval. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Rejects an access request approval.",
							"id": "bd2dfaf1-f0dc-4a84-84dc-6f2f170eedda",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/:approvalId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										":approvalId",
										"reject"
									],
									"variable": [
										{
											"key": "approvalId",
											"value": "<string>",
											"description": "(Required) The id of the approval."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint rejects an access request approval. Only the owner of the approval and admin users are allowed to perform this action."
							},
							"response": [
								{
									"id": "0221cc6a-f15e-40f3-9bb6-43f4ea4ac961",
									"name": "Accepted - Returned if the request was successfully accepted into the system.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"reject"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint rejects an access request approval. Only the owner of the approval and admin users are allowed to perform this action."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "93eec8b5-c8be-40a3-ab04-1635d425a646",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"reject"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint rejects an access request approval. Only the owner of the approval and admin users are allowed to perform this action."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "3f9a66c6-074e-435d-956a-c064ea1d8e2b",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"reject"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint rejects an access request approval. Only the owner of the approval and admin users are allowed to perform this action."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "10c19d89-7ede-4ad9-8a3f-aa4ab2f9afde",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"reject"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint rejects an access request approval. Only the owner of the approval and admin users are allowed to perform this action."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "70a70102-be79-492f-a61e-68a7bd2dd71a",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"reject"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint rejects an access request approval. Only the owner of the approval and admin users are allowed to perform this action."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "7aa26be4-bc86-44ba-861c-075c4df391a8",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"reject"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint rejects an access request approval. Only the owner of the approval and admin users are allowed to perform this action."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "cb9bd2e7-253c-43d8-b654-45d6cae27ea1",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\",\n  \"author\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"reject"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint rejects an access request approval. Only the owner of the approval and admin users are allowed to perform this action."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Forwards an access request approval.",
							"id": "a9765659-e6ac-4db5-85cc-2842daa835cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"newOwnerId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/:approvalId/forward",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										":approvalId",
										"forward"
									],
									"variable": [
										{
											"key": "approvalId",
											"value": "<string>",
											"description": "(Required) The id of the approval."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint forwards an access request approval to a new owner. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
							},
							"response": [
								{
									"id": "77aadf6c-f0a7-4f50-b41d-8d714328ab33",
									"name": "Accepted - Returned if the request was successfully accepted into the system.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newOwnerId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/forward",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"forward"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint forwards an access request approval to a new owner. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "4b74e2a9-28a8-4f98-8d88-4996111b811b",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newOwnerId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/forward",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"forward"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint forwards an access request approval to a new owner. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "955ab927-afc1-4601-bd07-7d743299f2f6",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newOwnerId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/forward",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"forward"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint forwards an access request approval to a new owner. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "df30c7dd-4701-4d9b-bd27-f115c118dc9c",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newOwnerId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/forward",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"forward"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint forwards an access request approval to a new owner. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "b7fd5fd2-1138-4637-8893-07c3e3e56790",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newOwnerId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/forward",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"forward"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint forwards an access request approval to a new owner. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "e7524163-2a87-4973-9121-c8ec0002f876",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newOwnerId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/forward",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"forward"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint forwards an access request approval to a new owner. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "3fa68d0c-15c1-4caa-8188-41b8ce6125a7",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newOwnerId\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/access-request-approvals/:approvalId/forward",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"access-request-approvals",
												":approvalId",
												"forward"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "<string>",
													"description": "(Required) The id of the approval."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint forwards an access request approval to a new owner. Only the owner of the approval and ORG_ADMIN users are allowed to perform this action."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "f055a493-5c40-43ae-ac43-0049bc57cf18"
				},
				{
					"name": "Pending Access Request Approvals List",
					"id": "f30a0320-a72d-4d9c-80a6-5088a0e06ae5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-approvals/pending?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-approvals",
								"pending"
							],
							"query": [
								{
									"key": "owner-id",
									"value": "<string>",
									"description": "If present, the value returns only pending approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns a list of pending approvals. See \"owner-id\" query parameter below for authorization info."
					},
					"response": [
						{
							"id": "0ef2d7a7-e28a-44af-b206-34749dc2147c",
							"name": "List of Pending Approvals.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/pending?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"pending"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only pending approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns a list of pending approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"id12345\",\n    \"name\": \"aName\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-07-25T20:22:28.104Z\",\n    \"requestCreated\": \"2017-07-11T18:45:35.098Z\",\n    \"requestType\": \"GRANT_ACCESS\",\n    \"requester\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedFor\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedObject\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"name\": \"Applied Research Access\",\n      \"description\": \"Access to research information, lab results, and schematics\",\n      \"type\": \"ROLE\"\n    },\n    \"requesterComment\": {\n      \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n      \"author\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"Adam Kennedy\"\n      },\n      \"created\": \"2017-07-11T18:45:37.098Z\"\n    },\n    \"previousReviewersComments\": [\n      {\n        \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n        \"author\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"Adam Kennedy\"\n        },\n        \"created\": \"2017-07-11T18:45:37.098Z\"\n      },\n      {\n        \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n        \"author\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"Adam Kennedy\"\n        },\n        \"created\": \"2017-07-11T18:45:37.098Z\"\n      }\n    ],\n    \"forwardHistory\": [\n      {\n        \"oldApproverName\": \"frank.mir\",\n        \"newApproverName\": \"al.volta\",\n        \"comment\": \"Fusce id orci vel consectetur amet ipsum quam.\",\n        \"modified\": \"2019-08-23T18:52:57.398Z\"\n      },\n      {\n        \"oldApproverName\": \"frank.mir\",\n        \"newApproverName\": \"al.volta\",\n        \"comment\": \"Fusce id orci vel consectetur amet ipsum quam.\",\n        \"modified\": \"2019-08-23T18:52:57.398Z\"\n      }\n    ],\n    \"commentRequiredWhenRejected\": true,\n    \"actionInProcess\": \"APPROVED\",\n    \"removeDate\": \"2020-07-11T00:00:00Z\",\n    \"removeDateUpdateRequested\": true,\n    \"currentRemoveDate\": \"2020-07-11T00:00:00Z\",\n    \"sodViolationContext\": {\n      \"state\": \"SUCCESS\",\n      \"uuid\": \"f73d16e9-a038-46c5-b217-1246e15fdbdd\",\n      \"violationCheckResult\": {\n        \"message\": {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        \"clientMetadata\": {\n          \"requestedAppName\": \"test-app\",\n          \"requestedAppId\": \"2c91808f7892918f0178b78da4a305a1\"\n        },\n        \"violationContexts\": [\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          },\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ],\n        \"violatedPolicies\": [\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          },\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          }\n        ]\n      }\n    }\n  },\n  {\n    \"id\": \"id12345\",\n    \"name\": \"aName\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-07-25T20:22:28.104Z\",\n    \"requestCreated\": \"2017-07-11T18:45:35.098Z\",\n    \"requestType\": \"GRANT_ACCESS\",\n    \"requester\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedFor\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedObject\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"name\": \"Applied Research Access\",\n      \"description\": \"Access to research information, lab results, and schematics\",\n      \"type\": \"ROLE\"\n    },\n    \"requesterComment\": {\n      \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n      \"author\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"Adam Kennedy\"\n      },\n      \"created\": \"2017-07-11T18:45:37.098Z\"\n    },\n    \"previousReviewersComments\": [\n      {\n        \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n        \"author\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"Adam Kennedy\"\n        },\n        \"created\": \"2017-07-11T18:45:37.098Z\"\n      },\n      {\n        \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n        \"author\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"Adam Kennedy\"\n        },\n        \"created\": \"2017-07-11T18:45:37.098Z\"\n      }\n    ],\n    \"forwardHistory\": [\n      {\n        \"oldApproverName\": \"frank.mir\",\n        \"newApproverName\": \"al.volta\",\n        \"comment\": \"Fusce id orci vel consectetur amet ipsum quam.\",\n        \"modified\": \"2019-08-23T18:52:57.398Z\"\n      },\n      {\n        \"oldApproverName\": \"frank.mir\",\n        \"newApproverName\": \"al.volta\",\n        \"comment\": \"Fusce id orci vel consectetur amet ipsum quam.\",\n        \"modified\": \"2019-08-23T18:52:57.398Z\"\n      }\n    ],\n    \"commentRequiredWhenRejected\": true,\n    \"actionInProcess\": \"APPROVED\",\n    \"removeDate\": \"2020-07-11T00:00:00Z\",\n    \"removeDateUpdateRequested\": true,\n    \"currentRemoveDate\": \"2020-07-11T00:00:00Z\",\n    \"sodViolationContext\": {\n      \"state\": \"SUCCESS\",\n      \"uuid\": \"f73d16e9-a038-46c5-b217-1246e15fdbdd\",\n      \"violationCheckResult\": {\n        \"message\": {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        \"clientMetadata\": {\n          \"requestedAppName\": \"test-app\",\n          \"requestedAppId\": \"2c91808f7892918f0178b78da4a305a1\"\n        },\n        \"violationContexts\": [\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          },\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ],\n        \"violatedPolicies\": [\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          },\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          }\n        ]\n      }\n    }\n  }\n]"
						},
						{
							"id": "63e37453-9371-4e7a-9f68-ad55c8110725",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/pending?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"pending"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only pending approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns a list of pending approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "e27dede9-e018-4482-a988-b47831249de6",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/pending?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"pending"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only pending approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns a list of pending approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "200a4de4-da5c-4f6f-bd4b-e31fd04b0aa8",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/pending?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"pending"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only pending approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns a list of pending approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "c0851d07-7880-4be2-9a91-8261c97c8aa5",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/pending?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"pending"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only pending approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns a list of pending approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "025a479d-ffc4-436c-bcee-34b4d21baf10",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/pending?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"pending"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only pending approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns a list of pending approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Completed Access Request Approvals List",
					"id": "d6c0bd5a-ea7b-4ae1-a800-b0a812d464c1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-approvals/completed?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-approvals",
								"completed"
							],
							"query": [
								{
									"key": "owner-id",
									"value": "<string>",
									"description": "If present, the value returns only completed approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns list of completed approvals. See *owner-id* query parameter below for authorization info."
					},
					"response": [
						{
							"id": "7a6ae7fe-d081-44cb-881f-e7b2a565377a",
							"name": "List of Completed Approvals.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/completed?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"completed"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only completed approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns list of completed approvals. See *owner-id* query parameter below for authorization info."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"id12345\",\n    \"name\": \"aName\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-07-25T20:22:28.104Z\",\n    \"requestCreated\": \"2017-07-11T18:45:35.098Z\",\n    \"requestType\": \"GRANT_ACCESS\",\n    \"requester\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedFor\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"reviewedBy\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedObject\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"name\": \"Applied Research Access\",\n      \"description\": \"Access to research information, lab results, and schematics\",\n      \"type\": \"ROLE\"\n    },\n    \"requesterComment\": {\n      \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n      \"author\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"Adam Kennedy\"\n      },\n      \"created\": \"2017-07-11T18:45:37.098Z\"\n    },\n    \"reviewerComment\": {\n      \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n      \"author\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"Adam Kennedy\"\n      },\n      \"created\": \"2017-07-11T18:45:37.098Z\"\n    },\n    \"previousReviewersComments\": [\n      {\n        \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n        \"author\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"Adam Kennedy\"\n        },\n        \"created\": \"2017-07-11T18:45:37.098Z\"\n      },\n      {\n        \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n        \"author\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"Adam Kennedy\"\n        },\n        \"created\": \"2017-07-11T18:45:37.098Z\"\n      }\n    ],\n    \"forwardHistory\": [\n      {\n        \"oldApproverName\": \"frank.mir\",\n        \"newApproverName\": \"al.volta\",\n        \"comment\": \"Fusce id orci vel consectetur amet ipsum quam.\",\n        \"modified\": \"2019-08-23T18:52:57.398Z\"\n      },\n      {\n        \"oldApproverName\": \"frank.mir\",\n        \"newApproverName\": \"al.volta\",\n        \"comment\": \"Fusce id orci vel consectetur amet ipsum quam.\",\n        \"modified\": \"2019-08-23T18:52:57.398Z\"\n      }\n    ],\n    \"commentRequiredWhenRejected\": true,\n    \"state\": \"APPROVED\",\n    \"removeDate\": \"2020-07-11T00:00:00Z\",\n    \"removeDateUpdateRequested\": true,\n    \"currentRemoveDate\": \"2020-07-11T00:00:00Z\",\n    \"sodViolationContext\": {\n      \"state\": \"SUCCESS\",\n      \"uuid\": \"f73d16e9-a038-46c5-b217-1246e15fdbdd\",\n      \"violationCheckResult\": {\n        \"message\": {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        \"clientMetadata\": {\n          \"requestedAppName\": \"test-app\",\n          \"requestedAppId\": \"2c91808f7892918f0178b78da4a305a1\"\n        },\n        \"violationContexts\": [\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          },\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ],\n        \"violatedPolicies\": [\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          },\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          }\n        ]\n      }\n    }\n  },\n  {\n    \"id\": \"id12345\",\n    \"name\": \"aName\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-07-25T20:22:28.104Z\",\n    \"requestCreated\": \"2017-07-11T18:45:35.098Z\",\n    \"requestType\": \"GRANT_ACCESS\",\n    \"requester\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedFor\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"reviewedBy\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedObject\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"name\": \"Applied Research Access\",\n      \"description\": \"Access to research information, lab results, and schematics\",\n      \"type\": \"ROLE\"\n    },\n    \"requesterComment\": {\n      \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n      \"author\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"Adam Kennedy\"\n      },\n      \"created\": \"2017-07-11T18:45:37.098Z\"\n    },\n    \"reviewerComment\": {\n      \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n      \"author\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"Adam Kennedy\"\n      },\n      \"created\": \"2017-07-11T18:45:37.098Z\"\n    },\n    \"previousReviewersComments\": [\n      {\n        \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n        \"author\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"Adam Kennedy\"\n        },\n        \"created\": \"2017-07-11T18:45:37.098Z\"\n      },\n      {\n        \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n        \"author\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"Adam Kennedy\"\n        },\n        \"created\": \"2017-07-11T18:45:37.098Z\"\n      }\n    ],\n    \"forwardHistory\": [\n      {\n        \"oldApproverName\": \"frank.mir\",\n        \"newApproverName\": \"al.volta\",\n        \"comment\": \"Fusce id orci vel consectetur amet ipsum quam.\",\n        \"modified\": \"2019-08-23T18:52:57.398Z\"\n      },\n      {\n        \"oldApproverName\": \"frank.mir\",\n        \"newApproverName\": \"al.volta\",\n        \"comment\": \"Fusce id orci vel consectetur amet ipsum quam.\",\n        \"modified\": \"2019-08-23T18:52:57.398Z\"\n      }\n    ],\n    \"commentRequiredWhenRejected\": true,\n    \"state\": \"APPROVED\",\n    \"removeDate\": \"2020-07-11T00:00:00Z\",\n    \"removeDateUpdateRequested\": true,\n    \"currentRemoveDate\": \"2020-07-11T00:00:00Z\",\n    \"sodViolationContext\": {\n      \"state\": \"SUCCESS\",\n      \"uuid\": \"f73d16e9-a038-46c5-b217-1246e15fdbdd\",\n      \"violationCheckResult\": {\n        \"message\": {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        \"clientMetadata\": {\n          \"requestedAppName\": \"test-app\",\n          \"requestedAppId\": \"2c91808f7892918f0178b78da4a305a1\"\n        },\n        \"violationContexts\": [\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          },\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ],\n        \"violatedPolicies\": [\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          },\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          }\n        ]\n      }\n    }\n  }\n]"
						},
						{
							"id": "b94cbbfa-47d3-4a14-aa1b-cb98a446deb1",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/completed?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"completed"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only completed approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns list of completed approvals. See *owner-id* query parameter below for authorization info."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "1947d3b2-aa4a-4353-b0d9-4a5f82761e3e",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/completed?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"completed"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only completed approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns list of completed approvals. See *owner-id* query parameter below for authorization info."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "54b897cd-281f-4ea5-bb28-59761f4b67b8",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/completed?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"completed"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only completed approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns list of completed approvals. See *owner-id* query parameter below for authorization info."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "a0892393-e8f5-483b-88b2-33ede6c04e67",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/completed?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"completed"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only completed approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns list of completed approvals. See *owner-id* query parameter below for authorization info."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "a8a9bd53-0be9-45f0-8435-003495b931b1",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/completed?owner-id=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"completed"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "If present, the value returns only completed approvals for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.\n   * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**requestedFor.id**: *eq, in*\n\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns list of completed approvals. See *owner-id* query parameter below for authorization info."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get the number of access-requests-approvals",
					"id": "b4626ea4-f4ee-4e51-94e2-1f718f798a5f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-approvals/approval-summary?owner-id=<string>&from-date=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-approvals",
								"approval-summary"
							],
							"query": [
								{
									"key": "owner-id",
									"value": "<string>",
									"description": "The id of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.\n   * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value."
								},
								{
									"key": "from-date",
									"value": "<string>",
									"description": "From date is the date and time from which the results will be shown. It should be in a valid ISO-8601 format"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns the number of pending, approved and rejected access requests approvals. See \"owner-id\" query parameter below for authorization info."
					},
					"response": [
						{
							"id": "8f14c8b8-fb4b-4517-b6b1-0efbc4c2bc7c",
							"name": "Number of pending, approved, rejected access request approvals.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/approval-summary?owner-id=<string>&from-date=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"approval-summary"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "The id of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.\n   * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "from-date",
											"value": "<string>",
											"description": "From date is the date and time from which the results will be shown. It should be in a valid ISO-8601 format"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the number of pending, approved and rejected access requests approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"pending\": 0,\n  \"approved\": 0,\n  \"rejected\": 0\n}"
						},
						{
							"id": "87740f64-810e-4cfe-a62e-cdec5ab1bbee",
							"name": "Client Error - Returned if the query parameter is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/approval-summary?owner-id=<string>&from-date=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"approval-summary"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "The id of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.\n   * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "from-date",
											"value": "<string>",
											"description": "From date is the date and time from which the results will be shown. It should be in a valid ISO-8601 format"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the number of pending, approved and rejected access requests approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "b1de030e-d8ae-4804-b773-3dd810428f92",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/approval-summary?owner-id=<string>&from-date=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"approval-summary"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "The id of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.\n   * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "from-date",
											"value": "<string>",
											"description": "From date is the date and time from which the results will be shown. It should be in a valid ISO-8601 format"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the number of pending, approved and rejected access requests approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "85ffa740-ef23-4648-9b63-03effab84e88",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/approval-summary?owner-id=<string>&from-date=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"approval-summary"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "The id of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.\n   * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "from-date",
											"value": "<string>",
											"description": "From date is the date and time from which the results will be shown. It should be in a valid ISO-8601 format"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the number of pending, approved and rejected access requests approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "5b8b6d52-3d5e-460b-ba46-d66e06a72211",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/approval-summary?owner-id=<string>&from-date=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"approval-summary"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "The id of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.\n   * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "from-date",
											"value": "<string>",
											"description": "From date is the date and time from which the results will be shown. It should be in a valid ISO-8601 format"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the number of pending, approved and rejected access requests approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "abc017c6-4559-4452-a117-8f3b4bb02375",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/access-request-approvals/approval-summary?owner-id=<string>&from-date=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"access-request-approvals",
										"approval-summary"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "<string>",
											"description": "The id of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.\n   * ORG_ADMIN users can call this with any identity ID value.\n   * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.\n   * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value."
										},
										{
											"key": "from-date",
											"value": "<string>",
											"description": "From date is the date and time from which the results will be shown. It should be in a valid ISO-8601 format"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint returns the number of pending, approved and rejected access requests approvals. See \"owner-id\" query parameter below for authorization info."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "249db448-2965-4b7a-8ac9-a4afe4d8ed59"
		},
		{
			"name": "accounts",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Account Details",
							"id": "da274ae2-f9f4-4928-a224-e5566689746c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns the details for a single account based on the ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "40efd0cc-d672-4bcc-a924-6325ad12b9b2",
									"name": "An account object",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the details for a single account based on the ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"aName\",\n  \"id\": \"id12345\",\n  \"created\": \"2015-05-28T14:07:17.000Z\",\n  \"modified\": \"2015-05-28T14:07:17.000Z\",\n  \"sourceId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"identityId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"attributes\": {},\n  \"authoritative\": true,\n  \"description\": \"aliqua ad\",\n  \"disabled\": true,\n  \"locked\": false,\n  \"nativeIdentity\": \"aute incididunt\",\n  \"systemAccount\": false,\n  \"uncorrelated\": false,\n  \"uuid\": \"labore non nulla\",\n  \"manuallyCorrelated\": false,\n  \"hasEntitlements\": true\n}"
								},
								{
									"id": "e12bae23-191a-44b7-a3eb-f50f8921303d",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the details for a single account based on the ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "85dd737e-9332-4101-ac52-cf6e5a8a1754",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the details for a single account based on the ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "a2c85efe-a286-48be-ba6c-6fdc90b3da0f",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the details for a single account based on the ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "9f4f0a45-4b41-4081-9319-f2af43d79988",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the details for a single account based on the ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "02b61068-547b-47b6-be2d-1a0b7d6af6df",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the details for a single account based on the ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "cd54dd46-86cf-4a9e-a257-51d6fc2ceb22",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the details for a single account based on the ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Account",
							"id": "45922a22-4734-4ada-b88a-7788c192f350",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<object>,<object>",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Use this API to modify the following fields:\n* `identityId`\n\n* `manuallyCorrelated`\n\n>**NOTE: All other fields can not be modified.**\n\nThe request must provide a JSONPatch payload.\n\nA token with ORG_ADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "5b211a8a-210b-4279-8034-c11e690f452f",
									"name": "Accepted. Update request accepted and is in progress.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<object>,<object>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Use this API to modify the following fields:\n* `identityId`\n\n* `manuallyCorrelated`\n\n>**NOTE: All other fields can not be modified.**\n\nThe request must provide a JSONPatch payload.\n\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "99aa8403-5063-46d4-a349-96157d745190",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<object>,<object>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Use this API to modify the following fields:\n* `identityId`\n\n* `manuallyCorrelated`\n\n>**NOTE: All other fields can not be modified.**\n\nThe request must provide a JSONPatch payload.\n\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "a5fb42a9-0b11-4b4a-91cd-16c12056ff5b",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<object>,<object>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Use this API to modify the following fields:\n* `identityId`\n\n* `manuallyCorrelated`\n\n>**NOTE: All other fields can not be modified.**\n\nThe request must provide a JSONPatch payload.\n\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "bd87663c-774c-415e-b1cf-95b787a61b2d",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<object>,<object>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Use this API to modify the following fields:\n* `identityId`\n\n* `manuallyCorrelated`\n\n>**NOTE: All other fields can not be modified.**\n\nThe request must provide a JSONPatch payload.\n\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "6857831b-5cd6-4a87-af06-3e08edd9cb35",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<object>,<object>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Use this API to modify the following fields:\n* `identityId`\n\n* `manuallyCorrelated`\n\n>**NOTE: All other fields can not be modified.**\n\nThe request must provide a JSONPatch payload.\n\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "281e6346-2c5f-4453-9edb-45f93b4beb83",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<object>,<object>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Use this API to modify the following fields:\n* `identityId`\n\n* `manuallyCorrelated`\n\n>**NOTE: All other fields can not be modified.**\n\nThe request must provide a JSONPatch payload.\n\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "1c8e6568-bbfd-4e97-bdab-098c460df83e",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<object>,<object>",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Use this API to modify the following fields:\n* `identityId`\n\n* `manuallyCorrelated`\n\n>**NOTE: All other fields can not be modified.**\n\nThe request must provide a JSONPatch payload.\n\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Account",
							"id": "686dee59-efce-41fe-a3c1-50fc1b0bc658",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": \"<object>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits an account update task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API.\n>**NOTE: The PUT Account API is designated only for Delimited File sources.**"
							},
							"response": [
								{
									"id": "bdda8c7a-095c-45c6-9e21-423d6af71b08",
									"name": "Async task details",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account update task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API.\n>**NOTE: The PUT Account API is designated only for Delimited File sources.**"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808474683da6017468693c260195\"\n}"
								},
								{
									"id": "76a71fcf-7e1f-4fee-aec4-730e9552a31e",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account update task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API.\n>**NOTE: The PUT Account API is designated only for Delimited File sources.**"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "ecdf5f38-4e1f-4510-a35d-18ee72ebf331",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account update task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API.\n>**NOTE: The PUT Account API is designated only for Delimited File sources.**"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "ae83199f-9711-44fa-851e-32421350bdf3",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account update task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API.\n>**NOTE: The PUT Account API is designated only for Delimited File sources.**"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "de1263c3-7dee-4918-ab41-f4a4dd0785c5",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account update task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API.\n>**NOTE: The PUT Account API is designated only for Delimited File sources.**"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "9d783a60-2dd6-413e-abbf-9e483ef987af",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account update task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API.\n>**NOTE: The PUT Account API is designated only for Delimited File sources.**"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "78f7f096-c031-4958-8c0d-6b825548a07e",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account update task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API.\n>**NOTE: The PUT Account API is designated only for Delimited File sources.**"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Account",
							"id": "f4f1997c-4948-426f-a52e-9bf3ded9778d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits an account delete task and returns the task ID. This operation can only be used on Flat File Sources. Any attempt to execute this request on the source of other type will result in an error response with a status code of 400.\nA token with ORG_ADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "2034cb77-48a2-4d26-965f-467d73fa2b4f",
									"name": "Async task details",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account delete task and returns the task ID. This operation can only be used on Flat File Sources. Any attempt to execute this request on the source of other type will result in an error response with a status code of 400.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808474683da6017468693c260195\"\n}"
								},
								{
									"id": "19309274-18b6-4ff0-be22-39f8baa0adc7",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account delete task and returns the task ID. This operation can only be used on Flat File Sources. Any attempt to execute this request on the source of other type will result in an error response with a status code of 400.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "4c585c52-60c2-4028-943e-4850588350d6",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account delete task and returns the task ID. This operation can only be used on Flat File Sources. Any attempt to execute this request on the source of other type will result in an error response with a status code of 400.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "c21dc875-80f3-4055-b765-6d987c42f55d",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account delete task and returns the task ID. This operation can only be used on Flat File Sources. Any attempt to execute this request on the source of other type will result in an error response with a status code of 400.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "0068cf99-78bd-44b4-8ee0-11c3779ac809",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account delete task and returns the task ID. This operation can only be used on Flat File Sources. Any attempt to execute this request on the source of other type will result in an error response with a status code of 400.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "5cd2721b-0e33-4369-ab2a-74b04ced5671",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account delete task and returns the task ID. This operation can only be used on Flat File Sources. Any attempt to execute this request on the source of other type will result in an error response with a status code of 400.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "995d23fa-c45f-40d1-a142-cd284c4d2f55",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits an account delete task and returns the task ID. This operation can only be used on Flat File Sources. Any attempt to execute this request on the source of other type will result in an error response with a status code of 400.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Account Entitlements",
							"id": "e977fac9-8d17-40d2-9241-f703f9d77341",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:id/entitlements?limit=250&offset=0&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id",
										"entitlements"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns entitlements of the account.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "d11520e4-40b8-4d78-bf77-147b1ba016af",
									"name": "An array of account entitlements",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/entitlements?limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"entitlements"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns entitlements of the account.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"aName\",\n    \"id\": \"id12345\",\n    \"created\": \"2015-05-28T14:07:17.000Z\",\n    \"modified\": \"2015-05-28T14:07:17.000Z\",\n    \"attribute\": \"authorizationType\",\n    \"value\": \"CN=Users,dc=sailpoint,dc=com\",\n    \"description\": \"et ullamco con\",\n    \"attributes\": {},\n    \"sourceSchemaObjectType\": \"group\",\n    \"privileged\": false,\n    \"cloudGoverned\": true,\n    \"source\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    }\n  },\n  {\n    \"name\": \"aName\",\n    \"id\": \"id12345\",\n    \"created\": \"2015-05-28T14:07:17.000Z\",\n    \"modified\": \"2015-05-28T14:07:17.000Z\",\n    \"attribute\": \"authorizationType\",\n    \"value\": \"CN=Users,dc=sailpoint,dc=com\",\n    \"description\": \"mollit nostrud consectetur tempor adipisicing\",\n    \"attributes\": {},\n    \"sourceSchemaObjectType\": \"group\",\n    \"privileged\": false,\n    \"cloudGoverned\": false,\n    \"source\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    }\n  }\n]"
								},
								{
									"id": "1074806d-131f-481e-bc64-64e8ceedd178",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/entitlements?limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"entitlements"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns entitlements of the account.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "9a14faf4-1bb6-41d5-a292-db5c1250f426",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/entitlements?limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"entitlements"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns entitlements of the account.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "3d5f6365-92ca-4eae-9e52-7c1130c2cf18",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/entitlements?limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"entitlements"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns entitlements of the account.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "145a8b21-d40e-4d0b-a401-1a3953b0d0e4",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/entitlements?limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"entitlements"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns entitlements of the account.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "de25e04f-a330-4c51-bed3-f40fef689423",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/entitlements?limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"entitlements"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns entitlements of the account.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "184ebf04-56dc-427b-b81b-c1f51453b56f",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/entitlements?limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"entitlements"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns entitlements of the account.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Reload Account",
							"id": "f21e2dde-cd83-4839-92fb-6232b733d2a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:id/reload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id",
										"reload"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API asynchronously reloads the account directly from the connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "d8ce26f5-fbdc-4b40-a1c1-faad821e1b28",
									"name": "Async task details",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/reload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"reload"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API asynchronously reloads the account directly from the connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808474683da6017468693c260195\"\n}"
								},
								{
									"id": "eabf819b-df51-4e74-bde0-d3d391ff3760",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/reload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"reload"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API asynchronously reloads the account directly from the connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "2ab6c837-5dce-4367-a432-091d7fdd6dd7",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/reload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"reload"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API asynchronously reloads the account directly from the connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "fa3e184f-342a-44c0-a4ed-093ff24e6518",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/reload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"reload"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API asynchronously reloads the account directly from the connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "3327b94a-4cb1-4a1a-85aa-453b4f2022f6",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/reload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"reload"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API asynchronously reloads the account directly from the connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "82cf6faa-b340-461b-bb69-f414e7698235",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/reload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"reload"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API asynchronously reloads the account directly from the connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "c1d1aada-a806-40e1-91cc-bc1665bc8443",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/reload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"reload"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API asynchronously reloads the account directly from the connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Enable Account",
							"id": "e26b4c3b-f7f4-4f25-882e-d7122d527a62",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id",
										"enable"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits a task to enable account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "8bda817d-77b2-48d0-80c4-401892bc9789",
									"name": "Async task details",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to enable account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808474683da6017468693c260195\"\n}"
								},
								{
									"id": "78d31977-cc98-4efb-b1ee-6dd5f0bd6dc7",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to enable account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "132debf7-7413-472d-9a1d-6e2f31ad0f86",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to enable account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "1566bd19-bb09-4b3a-9f0b-ad12c3a19cf9",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to enable account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "52dec83c-5527-43f3-b338-64d44ef5c952",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to enable account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "82c5a3be-33d0-4986-805d-609dfc4f2f6b",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to enable account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "93a413f6-2e00-47ce-8d1f-7911e5b12b73",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to enable account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Disable Account",
							"id": "d66834ff-0eed-4ce7-8b98-dfdaada778f2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:id/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id",
										"disable"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits a task to disable the account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "9f121292-da9c-4eb8-8c19-756e632a1bcd",
									"name": "Async task details",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to disable the account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808474683da6017468693c260195\"\n}"
								},
								{
									"id": "b31c1dd9-677a-4c0c-9e3a-5d5f50156245",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to disable the account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "9a4be418-c5bf-44e2-97d8-87a06e68897a",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to disable the account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "2d108418-ac5a-4e55-be12-9697198845b7",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to disable the account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "1ac868a0-d170-4dc4-b2a8-1860ed5156ab",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to disable the account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "dbddcee8-65dc-43a7-82ca-32d54706ea1e",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to disable the account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "8db23273-580f-467f-bdc5-b6c8d8ab13c4",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to disable the account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Unlock Account",
							"id": "33133c71-c98a-4b7b-9c78-0caf01a863e5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"unlockIDNAccount\": \"<boolean>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:id/unlock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":id",
										"unlock"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits a task to unlock an account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "885e80d8-6319-4fca-92cc-4ef30bd290a6",
									"name": "Async task details",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"unlockIDNAccount\": \"<boolean>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"unlock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to unlock an account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808474683da6017468693c260195\"\n}"
								},
								{
									"id": "e2b12b58-abb7-4834-b1b0-b43344a7261a",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"unlockIDNAccount\": \"<boolean>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"unlock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to unlock an account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "2a4db54c-16fb-4ce0-b32d-f86b00dba817",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"unlockIDNAccount\": \"<boolean>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"unlock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to unlock an account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "fd931fcc-1bb0-4ee3-af69-47a82dd3a9cf",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"unlockIDNAccount\": \"<boolean>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"unlock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to unlock an account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "3264854d-9e51-4615-970d-895ab59fb6d1",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"unlockIDNAccount\": \"<boolean>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"unlock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to unlock an account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "8650ec28-c873-4db3-b614-499a23d20802",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"unlockIDNAccount\": \"<boolean>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"unlock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to unlock an account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "66a0781e-2d32-4d85-907a-87a8ffb7883c",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalVerificationId\": \"<string>\",\n  \"unlockIDNAccount\": \"<boolean>\",\n  \"forceProvisioning\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accounts/:id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accounts",
												":id",
												"unlock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The account id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits a task to unlock an account and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "201bbbe0-cecf-4009-8b2c-3dcda7734368"
				},
				{
					"name": "Accounts List",
					"id": "178e054a-4e19-4c27-b0e2-5ab05efd7d6e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts?limit=250&offset=0&count=false&filters=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**identityId**: *eq*\n\n**name**: *eq, in*\n\n**nativeIdentity**: *eq, in*\n\n**sourceId**: *eq, in*\n\n**uncorrelated**: *eq*"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This returns a list of accounts.  \nA token with ORG_ADMIN authority is required to call this API."
					},
					"response": [
						{
							"id": "d92e810c-bfbb-4256-a347-939291f59ce6",
							"name": "List of account objects",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?limit=250&offset=0&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**identityId**: *eq*\n\n**name**: *eq, in*\n\n**nativeIdentity**: *eq, in*\n\n**sourceId**: *eq, in*\n\n**uncorrelated**: *eq*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of accounts.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"aName\",\n    \"id\": \"id12345\",\n    \"created\": \"2015-05-28T14:07:17.000Z\",\n    \"modified\": \"2015-05-28T14:07:17.000Z\",\n    \"sourceId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"identityId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"attributes\": {},\n    \"authoritative\": true,\n    \"description\": \"Duis ut occaecat sunt aute\",\n    \"disabled\": false,\n    \"locked\": false,\n    \"nativeIdentity\": \"officia deserunt do\",\n    \"systemAccount\": true,\n    \"uncorrelated\": true,\n    \"uuid\": \"ut qui in eu mollit\",\n    \"manuallyCorrelated\": true,\n    \"hasEntitlements\": false\n  },\n  {\n    \"name\": \"aName\",\n    \"id\": \"id12345\",\n    \"created\": \"2015-05-28T14:07:17.000Z\",\n    \"modified\": \"2015-05-28T14:07:17.000Z\",\n    \"sourceId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"identityId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"attributes\": {},\n    \"authoritative\": false,\n    \"description\": \"proide\",\n    \"disabled\": false,\n    \"locked\": false,\n    \"nativeIdentity\": \"ipsum aute sed\",\n    \"systemAccount\": true,\n    \"uncorrelated\": false,\n    \"uuid\": \"in ut\",\n    \"manuallyCorrelated\": false,\n    \"hasEntitlements\": true\n  }\n]"
						},
						{
							"id": "af956c8e-f855-4c8d-87a4-fda436857553",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?limit=250&offset=0&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**identityId**: *eq*\n\n**name**: *eq, in*\n\n**nativeIdentity**: *eq, in*\n\n**sourceId**: *eq, in*\n\n**uncorrelated**: *eq*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of accounts.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "51293e6f-c026-48a7-a91e-e80aab74af4a",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?limit=250&offset=0&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**identityId**: *eq*\n\n**name**: *eq, in*\n\n**nativeIdentity**: *eq, in*\n\n**sourceId**: *eq, in*\n\n**uncorrelated**: *eq*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of accounts.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "d1355f2e-1ae7-41bb-bc6d-df58a02b6306",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?limit=250&offset=0&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**identityId**: *eq*\n\n**name**: *eq, in*\n\n**nativeIdentity**: *eq, in*\n\n**sourceId**: *eq, in*\n\n**uncorrelated**: *eq*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of accounts.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "8b681bf1-9f9b-40e0-accb-0442e5fdaf69",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?limit=250&offset=0&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**identityId**: *eq*\n\n**name**: *eq, in*\n\n**nativeIdentity**: *eq, in*\n\n**sourceId**: *eq, in*\n\n**uncorrelated**: *eq*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of accounts.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "6cc2ad6a-c592-45c6-9172-21a5db8a693d",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts?limit=250&offset=0&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**identityId**: *eq*\n\n**name**: *eq, in*\n\n**nativeIdentity**: *eq, in*\n\n**sourceId**: *eq, in*\n\n**uncorrelated**: *eq*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of accounts.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Account",
					"id": "daed444f-c2d9-4a34-976d-8eeed54580b6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributes\": {\n    \"sourceId\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API submits an account creation task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
					},
					"response": [
						{
							"id": "012b397c-9c8b-4bc2-bea0-fa2eb91c3a62",
							"name": "Async task details",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"sourceId\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits an account creation task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"2c91808474683da6017468693c260195\"\n}"
						},
						{
							"id": "e7741fdd-303b-4302-9c8d-32514fde51b6",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"sourceId\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits an account creation task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "b265353f-8147-442a-8d0d-b47fcbf3afee",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"sourceId\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits an account creation task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "4313705e-f14b-4412-8d30-2805a5234c48",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"sourceId\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits an account creation task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "d1128554-cd57-4bcc-902c-1d3f261a5d4d",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"sourceId\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits an account creation task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "371f1668-4f5f-4fed-bd86-80370e030133",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"sourceId\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits an account creation task and returns the task ID.  \nA token with ORG_ADMIN authority is required to call this API."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "b2fb56b1-ab05-4309-8b54-117904e48e6f"
		},
		{
			"name": "account-activities",
			"item": [
				{
					"name": "Get a list of Account Activities",
					"id": "09941f21-a4c5-4739-8467-93a77a6519f2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/account-activities?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&type=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account-activities"
							],
							"query": [
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "requested-by",
									"value": "<string>",
									"description": "The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "regarding-identity",
									"value": "<string>",
									"description": "The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The type of account activity."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**type**: *eq, in*\n**created**: *gt, lt, ge, le*\n**modified**: *gt, lt, ge, le*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **type, created, modified**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a collection of account activities that satisfy the given query parameters."
					},
					"response": [
						{
							"id": "7dc9eb8f-3834-4d28-8684-47ea39cac0f7",
							"name": "List of account activities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&type=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "requested-by",
											"value": "<string>",
											"description": "The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "regarding-identity",
											"value": "<string>",
											"description": "The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "The type of account activity."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**type**: *eq, in*\n**created**: *gt, lt, ge, le*\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **type, created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of account activities that satisfy the given query parameters."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"completed\": \"2018-10-19T13:49:37.385Z\",\n    \"completionStatus\": \"FAILURE\",\n    \"type\": \"appRequest\",\n    \"requesterIdentitySummary\": {\n      \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n      \"name\": \"SailPoint Services\",\n      \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n      \"completed\": false\n    },\n    \"targetIdentitySummary\": {\n      \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n      \"name\": \"SailPoint Services\",\n      \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n      \"completed\": true\n    },\n    \"errors\": [\n      \"sailpoint.connector.ConnectorException: java.lang.InterruptedException: Timeout waiting for response to message 0 from client 57a4ab97-ab3f-4aef-9fe2-0eaf15c73d26 after 60 seconds.\"\n    ],\n    \"warnings\": [\n      \"Some warning, another warning\"\n    ],\n    \"items\": [\n      {\n        \"id\": \"2725138ee34949beb0d6cc982d2d4625\",\n        \"name\": \"ad\",\n        \"requested\": \"2017-07-11T18:45:37.098Z\",\n        \"approvalStatus\": \"REJECTED\",\n        \"provisioningStatus\": \"COMMITED\",\n        \"requesterComment\": {\n          \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n          \"commenterName\": \"Adam Kennedy\",\n          \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n          \"date\": \"2017-07-11T18:45:37.098Z\"\n        },\n        \"reviewerIdentitySummary\": {\n          \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n          \"name\": \"SailPoint Services\",\n          \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n          \"completed\": true\n        },\n        \"reviewerComment\": {\n          \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n          \"commenterName\": \"Adam Kennedy\",\n          \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n          \"date\": \"2017-07-11T18:45:37.098Z\"\n        },\n        \"operation\": \"ADD\",\n        \"attribute\": \"detectedRoles\",\n        \"value\": \"Treasury Analyst [AccessProfile-1529010191212]\",\n        \"nativeIdentity\": \"Sandie.Camero\",\n        \"sourceId\": \"2c91808363ef85290164000587130c0c\",\n        \"accountRequestInfo\": {\n          \"requestedObjectId\": \"2c91808563ef85690164001c31140c0c\",\n          \"requestedObjectName\": \"Treasury Analyst\",\n          \"requestedObjectType\": \"ACCESS_PROFILE\"\n        },\n        \"clientMetadata\": {\n          \"eiusmod_9\": \"sint dol\"\n        },\n        \"removeDate\": \"2020-07-11T00:00:00Z\"\n      },\n      {\n        \"id\": \"2725138ee34949beb0d6cc982d2d4625\",\n        \"name\": \"mollit ut ad\",\n        \"requested\": \"2017-07-11T18:45:37.098Z\",\n        \"approvalStatus\": \"REJECTED\",\n        \"provisioningStatus\": \"UNVERIFIABLE\",\n        \"requesterComment\": {\n          \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n          \"commenterName\": \"Adam Kennedy\",\n          \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n          \"date\": \"2017-07-11T18:45:37.098Z\"\n        },\n        \"reviewerIdentitySummary\": {\n          \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n          \"name\": \"SailPoint Services\",\n          \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n          \"completed\": false\n        },\n        \"reviewerComment\": {\n          \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n          \"commenterName\": \"Adam Kennedy\",\n          \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n          \"date\": \"2017-07-11T18:45:37.098Z\"\n        },\n        \"operation\": \"DISABLE\",\n        \"attribute\": \"detectedRoles\",\n        \"value\": \"Treasury Analyst [AccessProfile-1529010191212]\",\n        \"nativeIdentity\": \"Sandie.Camero\",\n        \"sourceId\": \"2c91808363ef85290164000587130c0c\",\n        \"accountRequestInfo\": {\n          \"requestedObjectId\": \"2c91808563ef85690164001c31140c0c\",\n          \"requestedObjectName\": \"Treasury Analyst\",\n          \"requestedObjectType\": \"ACCESS_PROFILE\"\n        },\n        \"clientMetadata\": {\n          \"eue\": \"eu in consequat\",\n          \"laboris_a2\": \"id\"\n        },\n        \"removeDate\": \"2020-07-11T00:00:00Z\"\n      }\n    ],\n    \"executionStatus\": \"VERIFYING\",\n    \"clientMetadata\": {\n      \"nullafb\": \"ad culpa nulla\"\n    }\n  },\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"completed\": \"2018-10-19T13:49:37.385Z\",\n    \"completionStatus\": \"PENDING\",\n    \"type\": \"appRequest\",\n    \"requesterIdentitySummary\": {\n      \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n      \"name\": \"SailPoint Services\",\n      \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n      \"completed\": true\n    },\n    \"targetIdentitySummary\": {\n      \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n      \"name\": \"SailPoint Services\",\n      \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n      \"completed\": false\n    },\n    \"errors\": [\n      \"sailpoint.connector.ConnectorException: java.lang.InterruptedException: Timeout waiting for response to message 0 from client 57a4ab97-ab3f-4aef-9fe2-0eaf15c73d26 after 60 seconds.\"\n    ],\n    \"warnings\": [\n      \"Some warning, another warning\"\n    ],\n    \"items\": [\n      {\n        \"id\": \"2725138ee34949beb0d6cc982d2d4625\",\n        \"name\": \"eiusmod Lorem aute Ut est\",\n        \"requested\": \"2017-07-11T18:45:37.098Z\",\n        \"approvalStatus\": \"PENDING\",\n        \"provisioningStatus\": \"COMMITED\",\n        \"requesterComment\": {\n          \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n          \"commenterName\": \"Adam Kennedy\",\n          \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n          \"date\": \"2017-07-11T18:45:37.098Z\"\n        },\n        \"reviewerIdentitySummary\": {\n          \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n          \"name\": \"SailPoint Services\",\n          \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n          \"completed\": true\n        },\n        \"reviewerComment\": {\n          \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n          \"commenterName\": \"Adam Kennedy\",\n          \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n          \"date\": \"2017-07-11T18:45:37.098Z\"\n        },\n        \"operation\": \"LOCK\",\n        \"attribute\": \"detectedRoles\",\n        \"value\": \"Treasury Analyst [AccessProfile-1529010191212]\",\n        \"nativeIdentity\": \"Sandie.Camero\",\n        \"sourceId\": \"2c91808363ef85290164000587130c0c\",\n        \"accountRequestInfo\": {\n          \"requestedObjectId\": \"2c91808563ef85690164001c31140c0c\",\n          \"requestedObjectName\": \"Treasury Analyst\",\n          \"requestedObjectType\": \"ACCESS_PROFILE\"\n        },\n        \"clientMetadata\": {\n          \"aute086\": \"tempor eu commodo in\",\n          \"dolore9_6\": \"nisi laboris do consequat\"\n        },\n        \"removeDate\": \"2020-07-11T00:00:00Z\"\n      },\n      {\n        \"id\": \"2725138ee34949beb0d6cc982d2d4625\",\n        \"name\": \"elit Ut in pariatur\",\n        \"requested\": \"2017-07-11T18:45:37.098Z\",\n        \"approvalStatus\": \"CANCELED\",\n        \"provisioningStatus\": \"RETRY\",\n        \"requesterComment\": {\n          \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n          \"commenterName\": \"Adam Kennedy\",\n          \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n          \"date\": \"2017-07-11T18:45:37.098Z\"\n        },\n        \"reviewerIdentitySummary\": {\n          \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n          \"name\": \"SailPoint Services\",\n          \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n          \"completed\": false\n        },\n        \"reviewerComment\": {\n          \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n          \"commenterName\": \"Adam Kennedy\",\n          \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n          \"date\": \"2017-07-11T18:45:37.098Z\"\n        },\n        \"operation\": \"ADD\",\n        \"attribute\": \"detectedRoles\",\n        \"value\": \"Treasury Analyst [AccessProfile-1529010191212]\",\n        \"nativeIdentity\": \"Sandie.Camero\",\n        \"sourceId\": \"2c91808363ef85290164000587130c0c\",\n        \"accountRequestInfo\": {\n          \"requestedObjectId\": \"2c91808563ef85690164001c31140c0c\",\n          \"requestedObjectName\": \"Treasury Analyst\",\n          \"requestedObjectType\": \"ACCESS_PROFILE\"\n        },\n        \"clientMetadata\": {\n          \"quis_84\": \"id exercitation\",\n          \"esse_d0\": \"deserunt cillum dolor\"\n        },\n        \"removeDate\": \"2020-07-11T00:00:00Z\"\n      }\n    ],\n    \"executionStatus\": \"COMPLETED\",\n    \"clientMetadata\": {\n      \"est6e6\": \"in in esse labore Duis\",\n      \"proident_1de\": \"enim in officia dolor non\",\n      \"doloreb\": \"proident consectetur\"\n    }\n  }\n]"
						},
						{
							"id": "cfca1602-830b-486b-abc5-0a60f6d4d785",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&type=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "requested-by",
											"value": "<string>",
											"description": "The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "regarding-identity",
											"value": "<string>",
											"description": "The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "The type of account activity."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**type**: *eq, in*\n**created**: *gt, lt, ge, le*\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **type, created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of account activities that satisfy the given query parameters."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "3f052250-54df-42bb-ad00-42188d7ab939",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&type=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "requested-by",
											"value": "<string>",
											"description": "The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "regarding-identity",
											"value": "<string>",
											"description": "The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "The type of account activity."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**type**: *eq, in*\n**created**: *gt, lt, ge, le*\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **type, created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of account activities that satisfy the given query parameters."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "82bdca9c-6d87-4e14-9569-b0578bf4d7cf",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&type=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "requested-by",
											"value": "<string>",
											"description": "The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "regarding-identity",
											"value": "<string>",
											"description": "The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "The type of account activity."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**type**: *eq, in*\n**created**: *gt, lt, ge, le*\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **type, created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of account activities that satisfy the given query parameters."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "bb15e4d1-9047-497e-a78b-288081633f6f",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&type=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "requested-by",
											"value": "<string>",
											"description": "The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "regarding-identity",
											"value": "<string>",
											"description": "The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "The type of account activity."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**type**: *eq, in*\n**created**: *gt, lt, ge, le*\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **type, created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of account activities that satisfy the given query parameters."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "9901784f-309e-491f-92e8-b7f07357cc8c",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&type=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity that the activity was requested for. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "requested-by",
											"value": "<string>",
											"description": "The identity that requested the activity. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
										},
										{
											"key": "regarding-identity",
											"value": "<string>",
											"description": "The specified identity will be either the requester or target of the account activity. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "The type of account activity."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**type**: *eq, in*\n**created**: *gt, lt, ge, le*\n**modified**: *gt, lt, ge, le*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **type, created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of account activities that satisfy the given query parameters."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get an Account Activity",
					"id": "909c3d91-6c2d-42cd-aa6a-3ef673007d02",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/account-activities/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account-activities",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The account activity id"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a single account activity by its id."
					},
					"response": [
						{
							"id": "1d122829-6048-4d8f-9de6-fced6d80f3ba",
							"name": "An account activity object",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account activity id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a single account activity by its id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"name\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"completed\": \"2018-10-19T13:49:37.385Z\",\n  \"completionStatus\": \"SUCCESS\",\n  \"type\": \"appRequest\",\n  \"requesterIdentitySummary\": {\n    \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n    \"name\": \"SailPoint Services\",\n    \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n    \"completed\": false\n  },\n  \"targetIdentitySummary\": {\n    \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n    \"name\": \"SailPoint Services\",\n    \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n    \"completed\": true\n  },\n  \"errors\": [\n    \"sailpoint.connector.ConnectorException: java.lang.InterruptedException: Timeout waiting for response to message 0 from client 57a4ab97-ab3f-4aef-9fe2-0eaf15c73d26 after 60 seconds.\"\n  ],\n  \"warnings\": [\n    \"Some warning, another warning\"\n  ],\n  \"items\": [\n    {\n      \"id\": \"2725138ee34949beb0d6cc982d2d4625\",\n      \"name\": \"consectetur exercitation id adipisicing\",\n      \"requested\": \"2017-07-11T18:45:37.098Z\",\n      \"approvalStatus\": \"PENDING\",\n      \"provisioningStatus\": \"FAILED\",\n      \"requesterComment\": {\n        \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n        \"commenterName\": \"Adam Kennedy\",\n        \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n        \"date\": \"2017-07-11T18:45:37.098Z\"\n      },\n      \"reviewerIdentitySummary\": {\n        \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n        \"name\": \"SailPoint Services\",\n        \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n        \"completed\": false\n      },\n      \"reviewerComment\": {\n        \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n        \"commenterName\": \"Adam Kennedy\",\n        \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n        \"date\": \"2017-07-11T18:45:37.098Z\"\n      },\n      \"operation\": \"LOCK\",\n      \"attribute\": \"detectedRoles\",\n      \"value\": \"Treasury Analyst [AccessProfile-1529010191212]\",\n      \"nativeIdentity\": \"Sandie.Camero\",\n      \"sourceId\": \"2c91808363ef85290164000587130c0c\",\n      \"accountRequestInfo\": {\n        \"requestedObjectId\": \"2c91808563ef85690164001c31140c0c\",\n        \"requestedObjectName\": \"Treasury Analyst\",\n        \"requestedObjectType\": \"ACCESS_PROFILE\"\n      },\n      \"clientMetadata\": {\n        \"do_ea\": \"dolor esse\"\n      },\n      \"removeDate\": \"2020-07-11T00:00:00Z\"\n    },\n    {\n      \"id\": \"2725138ee34949beb0d6cc982d2d4625\",\n      \"name\": \"ex exercitation si\",\n      \"requested\": \"2017-07-11T18:45:37.098Z\",\n      \"approvalStatus\": \"RETURNED\",\n      \"provisioningStatus\": \"RETRY\",\n      \"requesterComment\": {\n        \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n        \"commenterName\": \"Adam Kennedy\",\n        \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n        \"date\": \"2017-07-11T18:45:37.098Z\"\n      },\n      \"reviewerIdentitySummary\": {\n        \"id\": \"ff80818155fe8c080155fe8d925b0316\",\n        \"name\": \"SailPoint Services\",\n        \"identityId\": \"c15b9f5cca5a4e9599eaa0e64fa921bd\",\n        \"completed\": true\n      },\n      \"reviewerComment\": {\n        \"commenterId\": \"2c918084660f45d6016617daa9210584\",\n        \"commenterName\": \"Adam Kennedy\",\n        \"body\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat.\",\n        \"date\": \"2017-07-11T18:45:37.098Z\"\n      },\n      \"operation\": \"UNLOCK\",\n      \"attribute\": \"detectedRoles\",\n      \"value\": \"Treasury Analyst [AccessProfile-1529010191212]\",\n      \"nativeIdentity\": \"Sandie.Camero\",\n      \"sourceId\": \"2c91808363ef85290164000587130c0c\",\n      \"accountRequestInfo\": {\n        \"requestedObjectId\": \"2c91808563ef85690164001c31140c0c\",\n        \"requestedObjectName\": \"Treasury Analyst\",\n        \"requestedObjectType\": \"ACCESS_PROFILE\"\n      },\n      \"clientMetadata\": {\n        \"reprehenderitd1a\": \"elit fugiat consequat culpa\"\n      },\n      \"removeDate\": \"2020-07-11T00:00:00Z\"\n    }\n  ],\n  \"executionStatus\": \"VERIFYING\",\n  \"clientMetadata\": {\n    \"quis_8\": \"exercitation sit\",\n    \"commodo_e3\": \"dolore exercitation\"\n  }\n}"
						},
						{
							"id": "3cdf884b-ab6e-4388-9ca3-9f78527d425b",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account activity id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a single account activity by its id."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "91f0ca1d-470c-4e06-a749-c351dea20d44",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account activity id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a single account activity by its id."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "042b92a5-0466-4431-a952-e411bad56c05",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account activity id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a single account activity by its id."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "25b453fc-e3da-494a-923a-ba1d38dae917",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account activity id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a single account activity by its id."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "7e0b936c-b860-4c81-ba7a-4208ef1978b2",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account activity id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a single account activity by its id."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "2bb9665e-8e32-4a51-b475-2d402d976036",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The account activity id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a single account activity by its id."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "1e676240-bbfe-4960-b282-33fb699c164e"
		},
		{
			"name": "certifications",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Identity Certification by ID",
							"id": "6767684c-f195-4763-b896-d7b5af4714e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The certification id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a single identity campaign certification by its ID. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
							},
							"response": [
								{
									"id": "18d747c5-25be-4409-8603-47c45fd55071",
									"name": "An identity campaign certification object",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a single identity campaign certification by its ID. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"name\": \"Source Owner Access Review for Employees [source]\",\n  \"campaign\": {\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"name\": \"Campaign Name\",\n    \"type\": \"CAMPAIGN\",\n    \"campaignType\": \"MANAGER\",\n    \"description\": \"A description of the campaign\"\n  },\n  \"completed\": true,\n  \"identitiesCompleted\": 5,\n  \"identitiesTotal\": 10,\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"decisionsMade\": 20,\n  \"decisionsTotal\": 40,\n  \"due\": \"2018-10-19T13:49:37.385Z\",\n  \"signed\": \"2018-10-19T13:49:37.385Z\",\n  \"reviewer\": {\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"name\": \"Reviewer Name\",\n    \"email\": \"reviewer@test.com\",\n    \"type\": \"IDENTITY\",\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\"\n  },\n  \"reassignment\": {\n    \"from\": {\n      \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n      \"name\": \"Certification Name\",\n      \"type\": \"CERTIFICATION\",\n      \"reviewer\": {\n        \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n        \"name\": \"Reviewer Name\",\n        \"email\": \"reviewer@test.com\",\n        \"type\": \"IDENTITY\",\n        \"created\": \"2018-06-25T20:22:28.104Z\",\n        \"modified\": \"2018-06-25T20:22:28.104Z\"\n      }\n    },\n    \"comment\": \"Reassigned for a reason\"\n  },\n  \"hasErrors\": false,\n  \"errorMessage\": \"The certification has an error\",\n  \"phase\": \"ACTIVE\"\n}"
								},
								{
									"id": "cc642dfc-5024-43e3-b840-9cba6307e095",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a single identity campaign certification by its ID. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "60f138b1-7b18-47c3-b230-4e87ea9f0d01",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a single identity campaign certification by its ID. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "28a389b0-7eff-4bd7-b2f9-65dca4f1c94b",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a single identity campaign certification by its ID. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "69d05030-dae3-4c55-9098-c1e5c86cdabb",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a single identity campaign certification by its ID. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "f70712c9-72c3-4769-9ffb-495e5472ff1b",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a single identity campaign certification by its ID. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "d3588f9d-e5ee-4bac-86bd-92537b7080b0",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a single identity campaign certification by its ID. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "List of Access Review Items",
							"id": "aba68c8f-b377-418e-a101-8c6464cee2b0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications/:id/access-review-items?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>&entitlements=<string>&access-profiles=<string>&roles=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications",
										":id",
										"access-review-items"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**type / access.type**: *eq*\n\n**completed**: *eq, ne*\n\n**identitySummary.id**: *eq, in*\n\n**identitySummary.name**: *eq, sw*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **identitySummary.name, access.name, access.type, entitlement.sourceName, accessProfile.sourceName**"
										},
										{
											"key": "entitlements",
											"value": "<string>",
											"description": "Filter results to view access review items that pertain to any of the specified comma-separated entitlement IDs.\n\nAn error will occur if this param is used with **access-profiles** or **roles** as only one of these query params can be used at a time."
										},
										{
											"key": "access-profiles",
											"value": "<string>",
											"description": "Filter results to view access review items that pertain to any of the specified comma-separated access-profle IDs.\n\nAn error will occur if this param is used with **entitlements** or **roles** as only one of these query params can be used at a time."
										},
										{
											"key": "roles",
											"value": "<string>",
											"description": "Filter results to view access review items that pertain to any of the specified comma-separated role IDs.\n\nAn error will occur if this param is used with **entitlements** or **access-profiles** as only one of these query params can be used at a time."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The identity campaign certification ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a list of access review items for an identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
							},
							"response": [
								{
									"id": "2738eec3-bad1-42e1-ac43-9e014aff7f3f",
									"name": "A list of access review items",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-review-items?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>&entitlements=<string>&access-profiles=<string>&roles=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-review-items"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**type / access.type**: *eq*\n\n**completed**: *eq, ne*\n\n**identitySummary.id**: *eq, in*\n\n**identitySummary.name**: *eq, sw*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **identitySummary.name, access.name, access.type, entitlement.sourceName, accessProfile.sourceName**"
												},
												{
													"key": "entitlements",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated entitlement IDs.\n\nAn error will occur if this param is used with **access-profiles** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "access-profiles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated access-profle IDs.\n\nAn error will occur if this param is used with **entitlements** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "roles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated role IDs.\n\nAn error will occur if this param is used with **entitlements** or **access-profiles** as only one of these query params can be used at a time."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access review items for an identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"accessSummary\": {\n      \"access\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c9180867160846801719932c5153fb7\",\n        \"name\": \"Entitlement for Company Database\"\n      },\n      \"entitlement\": {\n        \"id\": \"2c918085718230600171993742c63558\",\n        \"name\": \"CN=entitlement.bbb7c650\",\n        \"description\": \"Gives read/write access to the company database\",\n        \"privileged\": false,\n        \"owner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\",\n          \"name\": \"Alison Ferguso\",\n          \"email\": \"alison.ferguso@identitysoon.com\"\n        },\n        \"attributeName\": \"memberOf\",\n        \"attributeValue\": \"CN=entitlement.bbb7c650\",\n        \"sourceSchemaObjectType\": \"groups\",\n        \"sourceName\": \"ODS-AD-Source\",\n        \"sourceType\": \"Active Directory - Direct\",\n        \"hasPermissions\": false,\n        \"isPermission\": false,\n        \"revocable\": true,\n        \"cloudGoverned\": true,\n        \"account\": {\n          \"nativeIdentity\": \"CN=Alison Ferguso\",\n          \"disabled\": false,\n          \"locked\": false,\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c9180857182305e0171993737eb29e6\",\n          \"name\": \"dolore in occaecat commodo culpa\",\n          \"created\": \"2020-04-20T20:11:05.067Z\",\n          \"modified\": \"2020-05-20T18:57:16.987Z\"\n        }\n      },\n      \"accessProfile\": {\n        \"id\": \"2c91808a7190d06e01719938fcd20792\",\n        \"name\": \"Employee-database-read-write\",\n        \"description\": \"Collection of entitlements to read/write the employee database\",\n        \"privileged\": false,\n        \"cloudGoverned\": false,\n        \"endDate\": \"2021-12-25T00:00:00.000Z\",\n        \"owner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\",\n          \"name\": \"Alison Ferguso\",\n          \"email\": \"alison.ferguso@identitysoon.com\"\n        },\n        \"entitlements\": [\n          {\n            \"id\": \"2c918085718230600171993742c63558\",\n            \"name\": \"CN=entitlement.bbb7c650\",\n            \"description\": \"Gives read/write access to the company database\",\n            \"privileged\": false,\n            \"owner\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"5168015d32f890ca15812c9180835d2e\",\n              \"name\": \"Alison Ferguso\",\n              \"email\": \"alison.ferguso@identitysoon.com\"\n            },\n            \"attributeName\": \"memberOf\",\n            \"attributeValue\": \"CN=entitlement.bbb7c650\",\n            \"sourceSchemaObjectType\": \"groups\",\n            \"sourceName\": \"ODS-AD-Source\",\n            \"sourceType\": \"Active Directory - Direct\",\n            \"hasPermissions\": false,\n            \"isPermission\": false,\n            \"revocable\": true,\n            \"cloudGoverned\": false,\n            \"account\": {\n              \"nativeIdentity\": \"CN=Alison Ferguso\",\n              \"disabled\": false,\n              \"locked\": false,\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c9180857182305e0171993737eb29e6\",\n              \"name\": \"aliqua Duis aute ut\",\n              \"created\": \"2020-04-20T20:11:05.067Z\",\n              \"modified\": \"2020-05-20T18:57:16.987Z\"\n            }\n          },\n          {\n            \"id\": \"2c918085718230600171993742c63558\",\n            \"name\": \"CN=entitlement.bbb7c650\",\n            \"description\": \"Gives read/write access to the company database\",\n            \"privileged\": false,\n            \"owner\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"5168015d32f890ca15812c9180835d2e\",\n              \"name\": \"Alison Ferguso\",\n              \"email\": \"alison.ferguso@identitysoon.com\"\n            },\n            \"attributeName\": \"memberOf\",\n            \"attributeValue\": \"CN=entitlement.bbb7c650\",\n            \"sourceSchemaObjectType\": \"groups\",\n            \"sourceName\": \"ODS-AD-Source\",\n            \"sourceType\": \"Active Directory - Direct\",\n            \"hasPermissions\": false,\n            \"isPermission\": false,\n            \"revocable\": true,\n            \"cloudGoverned\": true,\n            \"account\": {\n              \"nativeIdentity\": \"CN=Alison Ferguso\",\n              \"disabled\": false,\n              \"locked\": false,\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c9180857182305e0171993737eb29e6\",\n              \"name\": \"ea ullamco\",\n              \"created\": \"2020-04-20T20:11:05.067Z\",\n              \"modified\": \"2020-05-20T18:57:16.987Z\"\n            }\n          }\n        ],\n        \"created\": \"2021-01-01T22:32:58.104Z\",\n        \"modified\": \"2021-02-01T22:32:58.104Z\"\n      },\n      \"role\": {\n        \"id\": \"2c91808a7190d06e0171993907fd0794\",\n        \"name\": \"Accounting-Employees\",\n        \"description\": \"Role for members of the accounting department with the necessary Access Profiles\",\n        \"privileged\": false,\n        \"owner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\",\n          \"name\": \"Alison Ferguso\",\n          \"email\": \"alison.ferguso@identitysoon.com\"\n        },\n        \"revocable\": true,\n        \"endDate\": \"2021-12-25T00:00:00.000Z\",\n        \"accessProfiles\": [\n          {\n            \"id\": \"2c91808a7190d06e01719938fcd20792\",\n            \"name\": \"Employee-database-read-write\",\n            \"description\": \"Collection of entitlements to read/write the employee database\",\n            \"privileged\": true,\n            \"cloudGoverned\": false,\n            \"endDate\": \"2021-12-25T00:00:00.000Z\",\n            \"owner\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"5168015d32f890ca15812c9180835d2e\",\n              \"name\": \"Alison Ferguso\",\n              \"email\": \"alison.ferguso@identitysoon.com\"\n            },\n            \"entitlements\": [\n              {\n                \"id\": \"2c918085718230600171993742c63558\",\n                \"name\": \"CN=entitlement.bbb7c650\",\n                \"description\": \"Gives read/write access to the company database\",\n                \"privileged\": false,\n                \"owner\": {\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"5168015d32f890ca15812c9180835d2e\",\n                  \"name\": \"Alison Ferguso\",\n                  \"email\": \"alison.ferguso@identitysoon.com\"\n                },\n                \"attributeName\": \"memberOf\",\n                \"attributeValue\": \"CN=entitlement.bbb7c650\",\n                \"sourceSchemaObjectType\": \"groups\",\n                \"sourceName\": \"ODS-AD-Source\",\n                \"sourceType\": \"Active Directory - Direct\",\n                \"hasPermissions\": false,\n                \"isPermission\": false,\n                \"revocable\": true,\n                \"cloudGoverned\": false,\n                \"account\": {\n                  \"nativeIdentity\": \"CN=Alison Ferguso\",\n                  \"disabled\": false,\n                  \"locked\": false,\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"2c9180857182305e0171993737eb29e6\",\n                  \"name\": \"amet enim magna\",\n                  \"created\": \"2020-04-20T20:11:05.067Z\",\n                  \"modified\": \"2020-05-20T18:57:16.987Z\"\n                }\n              },\n              {\n                \"id\": \"2c918085718230600171993742c63558\",\n                \"name\": \"CN=entitlement.bbb7c650\",\n                \"description\": \"Gives read/write access to the company database\",\n                \"privileged\": false,\n                \"owner\": {\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"5168015d32f890ca15812c9180835d2e\",\n                  \"name\": \"Alison Ferguso\",\n                  \"email\": \"alison.ferguso@identitysoon.com\"\n                },\n                \"attributeName\": \"memberOf\",\n                \"attributeValue\": \"CN=entitlement.bbb7c650\",\n                \"sourceSchemaObjectType\": \"groups\",\n                \"sourceName\": \"ODS-AD-Source\",\n                \"sourceType\": \"Active Directory - Direct\",\n                \"hasPermissions\": false,\n                \"isPermission\": false,\n                \"revocable\": true,\n                \"cloudGoverned\": true,\n                \"account\": {\n                  \"nativeIdentity\": \"CN=Alison Ferguso\",\n                  \"disabled\": false,\n                  \"locked\": false,\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"2c9180857182305e0171993737eb29e6\",\n                  \"name\": \"fugiat labore nulla consectetur\",\n                  \"created\": \"2020-04-20T20:11:05.067Z\",\n                  \"modified\": \"2020-05-20T18:57:16.987Z\"\n                }\n              }\n            ],\n            \"created\": \"2021-01-01T22:32:58.104Z\",\n            \"modified\": \"2021-02-01T22:32:58.104Z\"\n          },\n          {\n            \"id\": \"2c91808a7190d06e01719938fcd20792\",\n            \"name\": \"Employee-database-read-write\",\n            \"description\": \"Collection of entitlements to read/write the employee database\",\n            \"privileged\": true,\n            \"cloudGoverned\": false,\n            \"endDate\": \"2021-12-25T00:00:00.000Z\",\n            \"owner\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"5168015d32f890ca15812c9180835d2e\",\n              \"name\": \"Alison Ferguso\",\n              \"email\": \"alison.ferguso@identitysoon.com\"\n            },\n            \"entitlements\": [\n              {\n                \"id\": \"2c918085718230600171993742c63558\",\n                \"name\": \"CN=entitlement.bbb7c650\",\n                \"description\": \"Gives read/write access to the company database\",\n                \"privileged\": false,\n                \"owner\": {\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"5168015d32f890ca15812c9180835d2e\",\n                  \"name\": \"Alison Ferguso\",\n                  \"email\": \"alison.ferguso@identitysoon.com\"\n                },\n                \"attributeName\": \"memberOf\",\n                \"attributeValue\": \"CN=entitlement.bbb7c650\",\n                \"sourceSchemaObjectType\": \"groups\",\n                \"sourceName\": \"ODS-AD-Source\",\n                \"sourceType\": \"Active Directory - Direct\",\n                \"hasPermissions\": false,\n                \"isPermission\": false,\n                \"revocable\": true,\n                \"cloudGoverned\": false,\n                \"account\": {\n                  \"nativeIdentity\": \"CN=Alison Ferguso\",\n                  \"disabled\": false,\n                  \"locked\": false,\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"2c9180857182305e0171993737eb29e6\",\n                  \"name\": \"Excepteur\",\n                  \"created\": \"2020-04-20T20:11:05.067Z\",\n                  \"modified\": \"2020-05-20T18:57:16.987Z\"\n                }\n              },\n              {\n                \"id\": \"2c918085718230600171993742c63558\",\n                \"name\": \"CN=entitlement.bbb7c650\",\n                \"description\": \"Gives read/write access to the company database\",\n                \"privileged\": false,\n                \"owner\": {\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"5168015d32f890ca15812c9180835d2e\",\n                  \"name\": \"Alison Ferguso\",\n                  \"email\": \"alison.ferguso@identitysoon.com\"\n                },\n                \"attributeName\": \"memberOf\",\n                \"attributeValue\": \"CN=entitlement.bbb7c650\",\n                \"sourceSchemaObjectType\": \"groups\",\n                \"sourceName\": \"ODS-AD-Source\",\n                \"sourceType\": \"Active Directory - Direct\",\n                \"hasPermissions\": false,\n                \"isPermission\": false,\n                \"revocable\": true,\n                \"cloudGoverned\": true,\n                \"account\": {\n                  \"nativeIdentity\": \"CN=Alison Ferguso\",\n                  \"disabled\": false,\n                  \"locked\": false,\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"2c9180857182305e0171993737eb29e6\",\n                  \"name\": \"eu dolore\",\n                  \"created\": \"2020-04-20T20:11:05.067Z\",\n                  \"modified\": \"2020-05-20T18:57:16.987Z\"\n                }\n              }\n            ],\n            \"created\": \"2021-01-01T22:32:58.104Z\",\n            \"modified\": \"2021-02-01T22:32:58.104Z\"\n          }\n        ]\n      }\n    },\n    \"identitySummary\": {\n      \"id\": \"2c91808772a504f50172a9540e501ba7\",\n      \"name\": \"Alison Ferguso\",\n      \"identityId\": \"2c9180857182306001719937377a33de\",\n      \"completed\": false\n    },\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"completed\": false,\n    \"newAccess\": false,\n    \"decision\": \"APPROVE\",\n    \"comments\": \"This user still needs access to this source\"\n  },\n  {\n    \"accessSummary\": {\n      \"access\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c9180867160846801719932c5153fb7\",\n        \"name\": \"Entitlement for Company Database\"\n      },\n      \"entitlement\": {\n        \"id\": \"2c918085718230600171993742c63558\",\n        \"name\": \"CN=entitlement.bbb7c650\",\n        \"description\": \"Gives read/write access to the company database\",\n        \"privileged\": false,\n        \"owner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\",\n          \"name\": \"Alison Ferguso\",\n          \"email\": \"alison.ferguso@identitysoon.com\"\n        },\n        \"attributeName\": \"memberOf\",\n        \"attributeValue\": \"CN=entitlement.bbb7c650\",\n        \"sourceSchemaObjectType\": \"groups\",\n        \"sourceName\": \"ODS-AD-Source\",\n        \"sourceType\": \"Active Directory - Direct\",\n        \"hasPermissions\": false,\n        \"isPermission\": false,\n        \"revocable\": true,\n        \"cloudGoverned\": true,\n        \"account\": {\n          \"nativeIdentity\": \"CN=Alison Ferguso\",\n          \"disabled\": false,\n          \"locked\": false,\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c9180857182305e0171993737eb29e6\",\n          \"name\": \"Duis non occaecat\",\n          \"created\": \"2020-04-20T20:11:05.067Z\",\n          \"modified\": \"2020-05-20T18:57:16.987Z\"\n        }\n      },\n      \"accessProfile\": {\n        \"id\": \"2c91808a7190d06e01719938fcd20792\",\n        \"name\": \"Employee-database-read-write\",\n        \"description\": \"Collection of entitlements to read/write the employee database\",\n        \"privileged\": true,\n        \"cloudGoverned\": true,\n        \"endDate\": \"2021-12-25T00:00:00.000Z\",\n        \"owner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\",\n          \"name\": \"Alison Ferguso\",\n          \"email\": \"alison.ferguso@identitysoon.com\"\n        },\n        \"entitlements\": [\n          {\n            \"id\": \"2c918085718230600171993742c63558\",\n            \"name\": \"CN=entitlement.bbb7c650\",\n            \"description\": \"Gives read/write access to the company database\",\n            \"privileged\": false,\n            \"owner\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"5168015d32f890ca15812c9180835d2e\",\n              \"name\": \"Alison Ferguso\",\n              \"email\": \"alison.ferguso@identitysoon.com\"\n            },\n            \"attributeName\": \"memberOf\",\n            \"attributeValue\": \"CN=entitlement.bbb7c650\",\n            \"sourceSchemaObjectType\": \"groups\",\n            \"sourceName\": \"ODS-AD-Source\",\n            \"sourceType\": \"Active Directory - Direct\",\n            \"hasPermissions\": false,\n            \"isPermission\": false,\n            \"revocable\": true,\n            \"cloudGoverned\": true,\n            \"account\": {\n              \"nativeIdentity\": \"CN=Alison Ferguso\",\n              \"disabled\": false,\n              \"locked\": false,\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c9180857182305e0171993737eb29e6\",\n              \"name\": \"nostrud ipsum irure\",\n              \"created\": \"2020-04-20T20:11:05.067Z\",\n              \"modified\": \"2020-05-20T18:57:16.987Z\"\n            }\n          },\n          {\n            \"id\": \"2c918085718230600171993742c63558\",\n            \"name\": \"CN=entitlement.bbb7c650\",\n            \"description\": \"Gives read/write access to the company database\",\n            \"privileged\": false,\n            \"owner\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"5168015d32f890ca15812c9180835d2e\",\n              \"name\": \"Alison Ferguso\",\n              \"email\": \"alison.ferguso@identitysoon.com\"\n            },\n            \"attributeName\": \"memberOf\",\n            \"attributeValue\": \"CN=entitlement.bbb7c650\",\n            \"sourceSchemaObjectType\": \"groups\",\n            \"sourceName\": \"ODS-AD-Source\",\n            \"sourceType\": \"Active Directory - Direct\",\n            \"hasPermissions\": false,\n            \"isPermission\": false,\n            \"revocable\": true,\n            \"cloudGoverned\": false,\n            \"account\": {\n              \"nativeIdentity\": \"CN=Alison Ferguso\",\n              \"disabled\": false,\n              \"locked\": false,\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c9180857182305e0171993737eb29e6\",\n              \"name\": \"nisi dolore\",\n              \"created\": \"2020-04-20T20:11:05.067Z\",\n              \"modified\": \"2020-05-20T18:57:16.987Z\"\n            }\n          }\n        ],\n        \"created\": \"2021-01-01T22:32:58.104Z\",\n        \"modified\": \"2021-02-01T22:32:58.104Z\"\n      },\n      \"role\": {\n        \"id\": \"2c91808a7190d06e0171993907fd0794\",\n        \"name\": \"Accounting-Employees\",\n        \"description\": \"Role for members of the accounting department with the necessary Access Profiles\",\n        \"privileged\": true,\n        \"owner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\",\n          \"name\": \"Alison Ferguso\",\n          \"email\": \"alison.ferguso@identitysoon.com\"\n        },\n        \"revocable\": false,\n        \"endDate\": \"2021-12-25T00:00:00.000Z\",\n        \"accessProfiles\": [\n          {\n            \"id\": \"2c91808a7190d06e01719938fcd20792\",\n            \"name\": \"Employee-database-read-write\",\n            \"description\": \"Collection of entitlements to read/write the employee database\",\n            \"privileged\": false,\n            \"cloudGoverned\": false,\n            \"endDate\": \"2021-12-25T00:00:00.000Z\",\n            \"owner\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"5168015d32f890ca15812c9180835d2e\",\n              \"name\": \"Alison Ferguso\",\n              \"email\": \"alison.ferguso@identitysoon.com\"\n            },\n            \"entitlements\": [\n              {\n                \"id\": \"2c918085718230600171993742c63558\",\n                \"name\": \"CN=entitlement.bbb7c650\",\n                \"description\": \"Gives read/write access to the company database\",\n                \"privileged\": false,\n                \"owner\": {\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"5168015d32f890ca15812c9180835d2e\",\n                  \"name\": \"Alison Ferguso\",\n                  \"email\": \"alison.ferguso@identitysoon.com\"\n                },\n                \"attributeName\": \"memberOf\",\n                \"attributeValue\": \"CN=entitlement.bbb7c650\",\n                \"sourceSchemaObjectType\": \"groups\",\n                \"sourceName\": \"ODS-AD-Source\",\n                \"sourceType\": \"Active Directory - Direct\",\n                \"hasPermissions\": false,\n                \"isPermission\": false,\n                \"revocable\": true,\n                \"cloudGoverned\": false,\n                \"account\": {\n                  \"nativeIdentity\": \"CN=Alison Ferguso\",\n                  \"disabled\": false,\n                  \"locked\": false,\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"2c9180857182305e0171993737eb29e6\",\n                  \"name\": \"nisi Duis do\",\n                  \"created\": \"2020-04-20T20:11:05.067Z\",\n                  \"modified\": \"2020-05-20T18:57:16.987Z\"\n                }\n              },\n              {\n                \"id\": \"2c918085718230600171993742c63558\",\n                \"name\": \"CN=entitlement.bbb7c650\",\n                \"description\": \"Gives read/write access to the company database\",\n                \"privileged\": false,\n                \"owner\": {\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"5168015d32f890ca15812c9180835d2e\",\n                  \"name\": \"Alison Ferguso\",\n                  \"email\": \"alison.ferguso@identitysoon.com\"\n                },\n                \"attributeName\": \"memberOf\",\n                \"attributeValue\": \"CN=entitlement.bbb7c650\",\n                \"sourceSchemaObjectType\": \"groups\",\n                \"sourceName\": \"ODS-AD-Source\",\n                \"sourceType\": \"Active Directory - Direct\",\n                \"hasPermissions\": false,\n                \"isPermission\": false,\n                \"revocable\": true,\n                \"cloudGoverned\": true,\n                \"account\": {\n                  \"nativeIdentity\": \"CN=Alison Ferguso\",\n                  \"disabled\": false,\n                  \"locked\": false,\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"2c9180857182305e0171993737eb29e6\",\n                  \"name\": \"in aliqua dolore\",\n                  \"created\": \"2020-04-20T20:11:05.067Z\",\n                  \"modified\": \"2020-05-20T18:57:16.987Z\"\n                }\n              }\n            ],\n            \"created\": \"2021-01-01T22:32:58.104Z\",\n            \"modified\": \"2021-02-01T22:32:58.104Z\"\n          },\n          {\n            \"id\": \"2c91808a7190d06e01719938fcd20792\",\n            \"name\": \"Employee-database-read-write\",\n            \"description\": \"Collection of entitlements to read/write the employee database\",\n            \"privileged\": false,\n            \"cloudGoverned\": false,\n            \"endDate\": \"2021-12-25T00:00:00.000Z\",\n            \"owner\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"5168015d32f890ca15812c9180835d2e\",\n              \"name\": \"Alison Ferguso\",\n              \"email\": \"alison.ferguso@identitysoon.com\"\n            },\n            \"entitlements\": [\n              {\n                \"id\": \"2c918085718230600171993742c63558\",\n                \"name\": \"CN=entitlement.bbb7c650\",\n                \"description\": \"Gives read/write access to the company database\",\n                \"privileged\": false,\n                \"owner\": {\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"5168015d32f890ca15812c9180835d2e\",\n                  \"name\": \"Alison Ferguso\",\n                  \"email\": \"alison.ferguso@identitysoon.com\"\n                },\n                \"attributeName\": \"memberOf\",\n                \"attributeValue\": \"CN=entitlement.bbb7c650\",\n                \"sourceSchemaObjectType\": \"groups\",\n                \"sourceName\": \"ODS-AD-Source\",\n                \"sourceType\": \"Active Directory - Direct\",\n                \"hasPermissions\": false,\n                \"isPermission\": false,\n                \"revocable\": true,\n                \"cloudGoverned\": false,\n                \"account\": {\n                  \"nativeIdentity\": \"CN=Alison Ferguso\",\n                  \"disabled\": false,\n                  \"locked\": false,\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"2c9180857182305e0171993737eb29e6\",\n                  \"name\": \"Lorem\",\n                  \"created\": \"2020-04-20T20:11:05.067Z\",\n                  \"modified\": \"2020-05-20T18:57:16.987Z\"\n                }\n              },\n              {\n                \"id\": \"2c918085718230600171993742c63558\",\n                \"name\": \"CN=entitlement.bbb7c650\",\n                \"description\": \"Gives read/write access to the company database\",\n                \"privileged\": false,\n                \"owner\": {\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"5168015d32f890ca15812c9180835d2e\",\n                  \"name\": \"Alison Ferguso\",\n                  \"email\": \"alison.ferguso@identitysoon.com\"\n                },\n                \"attributeName\": \"memberOf\",\n                \"attributeValue\": \"CN=entitlement.bbb7c650\",\n                \"sourceSchemaObjectType\": \"groups\",\n                \"sourceName\": \"ODS-AD-Source\",\n                \"sourceType\": \"Active Directory - Direct\",\n                \"hasPermissions\": false,\n                \"isPermission\": false,\n                \"revocable\": true,\n                \"cloudGoverned\": false,\n                \"account\": {\n                  \"nativeIdentity\": \"CN=Alison Ferguso\",\n                  \"disabled\": false,\n                  \"locked\": false,\n                  \"type\": \"IDENTITY\",\n                  \"id\": \"2c9180857182305e0171993737eb29e6\",\n                  \"name\": \"magna\",\n                  \"created\": \"2020-04-20T20:11:05.067Z\",\n                  \"modified\": \"2020-05-20T18:57:16.987Z\"\n                }\n              }\n            ],\n            \"created\": \"2021-01-01T22:32:58.104Z\",\n            \"modified\": \"2021-02-01T22:32:58.104Z\"\n          }\n        ]\n      }\n    },\n    \"identitySummary\": {\n      \"id\": \"2c91808772a504f50172a9540e501ba7\",\n      \"name\": \"Alison Ferguso\",\n      \"identityId\": \"2c9180857182306001719937377a33de\",\n      \"completed\": true\n    },\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"completed\": false,\n    \"newAccess\": true,\n    \"decision\": \"APPROVE\",\n    \"comments\": \"This user still needs access to this source\"\n  }\n]"
								},
								{
									"id": "b0c99fde-2886-41ae-a6bf-b37b45523ca4",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-review-items?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>&entitlements=<string>&access-profiles=<string>&roles=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-review-items"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**type / access.type**: *eq*\n\n**completed**: *eq, ne*\n\n**identitySummary.id**: *eq, in*\n\n**identitySummary.name**: *eq, sw*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **identitySummary.name, access.name, access.type, entitlement.sourceName, accessProfile.sourceName**"
												},
												{
													"key": "entitlements",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated entitlement IDs.\n\nAn error will occur if this param is used with **access-profiles** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "access-profiles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated access-profle IDs.\n\nAn error will occur if this param is used with **entitlements** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "roles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated role IDs.\n\nAn error will occur if this param is used with **entitlements** or **access-profiles** as only one of these query params can be used at a time."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access review items for an identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "0264834e-b78a-4f78-b565-2ee22ee67ced",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-review-items?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>&entitlements=<string>&access-profiles=<string>&roles=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-review-items"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**type / access.type**: *eq*\n\n**completed**: *eq, ne*\n\n**identitySummary.id**: *eq, in*\n\n**identitySummary.name**: *eq, sw*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **identitySummary.name, access.name, access.type, entitlement.sourceName, accessProfile.sourceName**"
												},
												{
													"key": "entitlements",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated entitlement IDs.\n\nAn error will occur if this param is used with **access-profiles** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "access-profiles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated access-profle IDs.\n\nAn error will occur if this param is used with **entitlements** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "roles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated role IDs.\n\nAn error will occur if this param is used with **entitlements** or **access-profiles** as only one of these query params can be used at a time."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access review items for an identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "dff70d67-cc33-4717-92f5-f96fd6c2f414",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-review-items?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>&entitlements=<string>&access-profiles=<string>&roles=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-review-items"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**type / access.type**: *eq*\n\n**completed**: *eq, ne*\n\n**identitySummary.id**: *eq, in*\n\n**identitySummary.name**: *eq, sw*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **identitySummary.name, access.name, access.type, entitlement.sourceName, accessProfile.sourceName**"
												},
												{
													"key": "entitlements",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated entitlement IDs.\n\nAn error will occur if this param is used with **access-profiles** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "access-profiles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated access-profle IDs.\n\nAn error will occur if this param is used with **entitlements** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "roles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated role IDs.\n\nAn error will occur if this param is used with **entitlements** or **access-profiles** as only one of these query params can be used at a time."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access review items for an identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "86d0ef47-4a00-4ec3-afe5-d8f4da6d0619",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-review-items?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>&entitlements=<string>&access-profiles=<string>&roles=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-review-items"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**type / access.type**: *eq*\n\n**completed**: *eq, ne*\n\n**identitySummary.id**: *eq, in*\n\n**identitySummary.name**: *eq, sw*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **identitySummary.name, access.name, access.type, entitlement.sourceName, accessProfile.sourceName**"
												},
												{
													"key": "entitlements",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated entitlement IDs.\n\nAn error will occur if this param is used with **access-profiles** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "access-profiles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated access-profle IDs.\n\nAn error will occur if this param is used with **entitlements** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "roles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated role IDs.\n\nAn error will occur if this param is used with **entitlements** or **access-profiles** as only one of these query params can be used at a time."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access review items for an identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "d7b4bdf0-f3f0-46fb-9a53-13f9f9fc84f7",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-review-items?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>&entitlements=<string>&access-profiles=<string>&roles=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-review-items"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**type / access.type**: *eq*\n\n**completed**: *eq, ne*\n\n**identitySummary.id**: *eq, in*\n\n**identitySummary.name**: *eq, sw*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **identitySummary.name, access.name, access.type, entitlement.sourceName, accessProfile.sourceName**"
												},
												{
													"key": "entitlements",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated entitlement IDs.\n\nAn error will occur if this param is used with **access-profiles** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "access-profiles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated access-profle IDs.\n\nAn error will occur if this param is used with **entitlements** or **roles** as only one of these query params can be used at a time."
												},
												{
													"key": "roles",
													"value": "<string>",
													"description": "Filter results to view access review items that pertain to any of the specified comma-separated role IDs.\n\nAn error will occur if this param is used with **entitlements** or **access-profiles** as only one of these query params can be used at a time."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access review items for an identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Decide on a Certification Item",
							"id": "3f322d8e-14f3-4ab5-9168-18688b67dfef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"decision\": \"<string>\",\n    \"bulk\": \"<boolean>\",\n    \"proposedEndDate\": \"<dateTime>\",\n    \"recommendation\": {\n      \"recommendation\": \"<string>\",\n      \"reasons\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timestamp\": \"<dateTime>\"\n    },\n    \"comments\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certifications/:id/decide",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications",
										":id",
										"decide"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the identity campaign certification on which to make decisions"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "The API makes a decision to approve or revoke one or more identity campaign certification items. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
							},
							"response": [
								{
									"id": "b90cb738-e6ab-4385-a501-d1fa1f009cbe",
									"name": "An identity campaign certification object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"decision\": \"<string>\",\n    \"bulk\": \"<boolean>\",\n    \"proposedEndDate\": \"<dateTime>\",\n    \"recommendation\": {\n      \"recommendation\": \"<string>\",\n      \"reasons\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timestamp\": \"<dateTime>\"\n    },\n    \"comments\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decide",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decide"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the identity campaign certification on which to make decisions"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "The API makes a decision to approve or revoke one or more identity campaign certification items. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"name\": \"Source Owner Access Review for Employees [source]\",\n  \"campaign\": {\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"name\": \"Campaign Name\",\n    \"type\": \"CAMPAIGN\",\n    \"campaignType\": \"MANAGER\",\n    \"description\": \"A description of the campaign\"\n  },\n  \"completed\": true,\n  \"identitiesCompleted\": 5,\n  \"identitiesTotal\": 10,\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"decisionsMade\": 20,\n  \"decisionsTotal\": 40,\n  \"due\": \"2018-10-19T13:49:37.385Z\",\n  \"signed\": \"2018-10-19T13:49:37.385Z\",\n  \"reviewer\": {\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"name\": \"Reviewer Name\",\n    \"email\": \"reviewer@test.com\",\n    \"type\": \"IDENTITY\",\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\"\n  },\n  \"reassignment\": {\n    \"from\": {\n      \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n      \"name\": \"Certification Name\",\n      \"type\": \"CERTIFICATION\",\n      \"reviewer\": {\n        \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n        \"name\": \"Reviewer Name\",\n        \"email\": \"reviewer@test.com\",\n        \"type\": \"IDENTITY\",\n        \"created\": \"2018-06-25T20:22:28.104Z\",\n        \"modified\": \"2018-06-25T20:22:28.104Z\"\n      }\n    },\n    \"comment\": \"Reassigned for a reason\"\n  },\n  \"hasErrors\": false,\n  \"errorMessage\": \"The certification has an error\",\n  \"phase\": \"ACTIVE\"\n}"
								},
								{
									"id": "e8b7499d-1109-44dd-8caa-3037c8b7d6bc",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"decision\": \"<string>\",\n    \"bulk\": \"<boolean>\",\n    \"proposedEndDate\": \"<dateTime>\",\n    \"recommendation\": {\n      \"recommendation\": \"<string>\",\n      \"reasons\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timestamp\": \"<dateTime>\"\n    },\n    \"comments\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decide",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decide"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the identity campaign certification on which to make decisions"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "The API makes a decision to approve or revoke one or more identity campaign certification items. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "4a3ad081-1496-44de-b754-fbc201178a03",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"decision\": \"<string>\",\n    \"bulk\": \"<boolean>\",\n    \"proposedEndDate\": \"<dateTime>\",\n    \"recommendation\": {\n      \"recommendation\": \"<string>\",\n      \"reasons\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timestamp\": \"<dateTime>\"\n    },\n    \"comments\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decide",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decide"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the identity campaign certification on which to make decisions"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "The API makes a decision to approve or revoke one or more identity campaign certification items. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "59fa2c9c-6dd4-414e-b119-ddc64e7965e5",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"decision\": \"<string>\",\n    \"bulk\": \"<boolean>\",\n    \"proposedEndDate\": \"<dateTime>\",\n    \"recommendation\": {\n      \"recommendation\": \"<string>\",\n      \"reasons\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timestamp\": \"<dateTime>\"\n    },\n    \"comments\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decide",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decide"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the identity campaign certification on which to make decisions"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "The API makes a decision to approve or revoke one or more identity campaign certification items. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "b73c1c9d-1432-4e11-9144-b2f2411bbab0",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"decision\": \"<string>\",\n    \"bulk\": \"<boolean>\",\n    \"proposedEndDate\": \"<dateTime>\",\n    \"recommendation\": {\n      \"recommendation\": \"<string>\",\n      \"reasons\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timestamp\": \"<dateTime>\"\n    },\n    \"comments\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decide",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decide"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the identity campaign certification on which to make decisions"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "The API makes a decision to approve or revoke one or more identity campaign certification items. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "76e2ed2d-7a5c-48e7-82d2-53cc8102f092",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"decision\": \"<string>\",\n    \"bulk\": \"<boolean>\",\n    \"proposedEndDate\": \"<dateTime>\",\n    \"recommendation\": {\n      \"recommendation\": \"<string>\",\n      \"reasons\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timestamp\": \"<dateTime>\"\n    },\n    \"comments\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decide",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decide"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the identity campaign certification on which to make decisions"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "The API makes a decision to approve or revoke one or more identity campaign certification items. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "cf9f8f61-fed6-46f6-a759-2afe33be0ee0",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<string>\",\n    \"decision\": \"<string>\",\n    \"bulk\": \"<boolean>\",\n    \"proposedEndDate\": \"<dateTime>\",\n    \"recommendation\": {\n      \"recommendation\": \"<string>\",\n      \"reasons\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timestamp\": \"<dateTime>\"\n    },\n    \"comments\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decide",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decide"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the identity campaign certification on which to make decisions"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "The API makes a decision to approve or revoke one or more identity campaign certification items. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Reassign Identities or Items",
							"id": "a5075e24-d6eb-4833-8d71-61df460807c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reassign\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"reassignTo\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/certifications/:id/reassign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications",
										":id",
										"reassign"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The identity campaign certification ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API reassigns up to 50 identities or items in an identity campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
							},
							"response": [
								{
									"id": "295da5ec-c8d8-478b-a176-517921068adb",
									"name": "An identity campaign certification details after completing the reassignment.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reassign\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"reassignTo\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/reassign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"reassign"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API reassigns up to 50 identities or items in an identity campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"name\": \"Source Owner Access Review for Employees [source]\",\n  \"campaign\": {\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"name\": \"Campaign Name\",\n    \"type\": \"CAMPAIGN\",\n    \"campaignType\": \"MANAGER\",\n    \"description\": \"A description of the campaign\"\n  },\n  \"completed\": true,\n  \"identitiesCompleted\": 5,\n  \"identitiesTotal\": 10,\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"decisionsMade\": 20,\n  \"decisionsTotal\": 40,\n  \"due\": \"2018-10-19T13:49:37.385Z\",\n  \"signed\": \"2018-10-19T13:49:37.385Z\",\n  \"reviewer\": {\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"name\": \"Reviewer Name\",\n    \"email\": \"reviewer@test.com\",\n    \"type\": \"IDENTITY\",\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\"\n  },\n  \"reassignment\": {\n    \"from\": {\n      \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n      \"name\": \"Certification Name\",\n      \"type\": \"CERTIFICATION\",\n      \"reviewer\": {\n        \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n        \"name\": \"Reviewer Name\",\n        \"email\": \"reviewer@test.com\",\n        \"type\": \"IDENTITY\",\n        \"created\": \"2018-06-25T20:22:28.104Z\",\n        \"modified\": \"2018-06-25T20:22:28.104Z\"\n      }\n    },\n    \"comment\": \"Reassigned for a reason\"\n  },\n  \"hasErrors\": false,\n  \"errorMessage\": \"The certification has an error\",\n  \"phase\": \"ACTIVE\"\n}"
								},
								{
									"id": "c62a03e3-efce-401b-be09-db4d04adb76a",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reassign\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"reassignTo\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/reassign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"reassign"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API reassigns up to 50 identities or items in an identity campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "1a148d51-ed82-40ff-b359-73268f36ad65",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reassign\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"reassignTo\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/reassign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"reassign"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API reassigns up to 50 identities or items in an identity campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "5a985b0a-c755-463c-8296-31941b5fdf7f",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reassign\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"reassignTo\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/reassign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"reassign"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API reassigns up to 50 identities or items in an identity campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "eadf2a04-fb98-4653-a6c8-6ec281fc13ee",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reassign\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"reassignTo\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/reassign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"reassign"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API reassigns up to 50 identities or items in an identity campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "659d12c8-75dc-4a6c-a451-703c283ed759",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reassign\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"reassignTo\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/reassign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"reassign"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API reassigns up to 50 identities or items in an identity campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "cddfc2fd-a39e-4c97-80a2-0a9262a8664a",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reassign\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"reassignTo\": \"<string>\",\n  \"reason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/reassign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"reassign"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API reassigns up to 50 identities or items in an identity campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Finalize Identity Certification Decisions",
							"id": "ea12ef2a-d2de-47a3-8912-4e8669cbbe72",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications/:id/sign-off",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications",
										":id",
										"sign-off"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The identity campaign certification ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API finalizes all decisions made on an identity campaign certification and initiates any remediations required. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
							},
							"response": [
								{
									"id": "d8f9c7e9-04cd-4339-af57-b9f62024604f",
									"name": "An identity campaign certification object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/sign-off",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"sign-off"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API finalizes all decisions made on an identity campaign certification and initiates any remediations required. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"name\": \"Source Owner Access Review for Employees [source]\",\n  \"campaign\": {\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"name\": \"Campaign Name\",\n    \"type\": \"CAMPAIGN\",\n    \"campaignType\": \"MANAGER\",\n    \"description\": \"A description of the campaign\"\n  },\n  \"completed\": true,\n  \"identitiesCompleted\": 5,\n  \"identitiesTotal\": 10,\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"decisionsMade\": 20,\n  \"decisionsTotal\": 40,\n  \"due\": \"2018-10-19T13:49:37.385Z\",\n  \"signed\": \"2018-10-19T13:49:37.385Z\",\n  \"reviewer\": {\n    \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n    \"name\": \"Reviewer Name\",\n    \"email\": \"reviewer@test.com\",\n    \"type\": \"IDENTITY\",\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\"\n  },\n  \"reassignment\": {\n    \"from\": {\n      \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n      \"name\": \"Certification Name\",\n      \"type\": \"CERTIFICATION\",\n      \"reviewer\": {\n        \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n        \"name\": \"Reviewer Name\",\n        \"email\": \"reviewer@test.com\",\n        \"type\": \"IDENTITY\",\n        \"created\": \"2018-06-25T20:22:28.104Z\",\n        \"modified\": \"2018-06-25T20:22:28.104Z\"\n      }\n    },\n    \"comment\": \"Reassigned for a reason\"\n  },\n  \"hasErrors\": false,\n  \"errorMessage\": \"The certification has an error\",\n  \"phase\": \"ACTIVE\"\n}"
								},
								{
									"id": "eff078f4-7ead-4119-aa0d-2cd101c08b52",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/sign-off",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"sign-off"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API finalizes all decisions made on an identity campaign certification and initiates any remediations required. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "e95252d8-6175-4130-ae64-b6e3eb0121f5",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/sign-off",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"sign-off"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API finalizes all decisions made on an identity campaign certification and initiates any remediations required. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "a32919dd-2b19-4192-86d5-dab81ef0f34b",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/sign-off",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"sign-off"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API finalizes all decisions made on an identity campaign certification and initiates any remediations required. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "0906fc74-9e2d-4b14-93cf-61d228706d9d",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/sign-off",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"sign-off"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API finalizes all decisions made on an identity campaign certification and initiates any remediations required. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "34285d61-f496-49a1-acd3-b42673a4b77d",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/sign-off",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"sign-off"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API finalizes all decisions made on an identity campaign certification and initiates any remediations required. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "4b8682b3-b78b-4676-96e0-41edb57a7f6d",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/sign-off",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"sign-off"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API finalizes all decisions made on an identity campaign certification and initiates any remediations required. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API. This API does not support requests for certifications assigned to Governance Groups."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Summary of Certification Decisions",
							"id": "458e8c87-a556-437f-9dc2-06e1974b5aaf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications/:id/decision-summary?filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications",
										":id",
										"decision-summary"
									],
									"query": [
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**identitySummary.id**: *eq, in*"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The certification ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a summary of the decisions made on an identity campaign certification. The decisions are summarized by type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
							},
							"response": [
								{
									"id": "c4716a12-b958-4d9d-8369-4c6fac1bc7e7",
									"name": "Summary of the decisions made",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decision-summary?filters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decision-summary"
											],
											"query": [
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**identitySummary.id**: *eq, in*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a summary of the decisions made on an identity campaign certification. The decisions are summarized by type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"entitlementDecisionsMade\": 3,\n  \"accessProfileDecisionsMade\": 5,\n  \"roleDecisionsMade\": 2,\n  \"accountDecisionsMade\": 4,\n  \"entitlementDecisionsTotal\": 6,\n  \"accessProfileDecisionsTotal\": 10,\n  \"roleDecisionsTotal\": 4,\n  \"accountDecisionsTotal\": 8,\n  \"entitlementsApproved\": 2,\n  \"entitlementsRevoked\": 1,\n  \"accessProfilesApproved\": 3,\n  \"accessProfilesRevoked\": 2,\n  \"rolesApproved\": 2,\n  \"rolesRevoked\": 0,\n  \"accountsApproved\": 1,\n  \"accountsRevoked\": 3\n}"
								},
								{
									"id": "b23fd4c0-edf2-484c-ac60-a5cfac471939",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decision-summary?filters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decision-summary"
											],
											"query": [
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**identitySummary.id**: *eq, in*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a summary of the decisions made on an identity campaign certification. The decisions are summarized by type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "9d367c42-a1ce-41d0-8ede-72ea6f514935",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decision-summary?filters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decision-summary"
											],
											"query": [
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**identitySummary.id**: *eq, in*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a summary of the decisions made on an identity campaign certification. The decisions are summarized by type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "b744afdc-a9d4-40e0-a894-2c1c49520f12",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decision-summary?filters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decision-summary"
											],
											"query": [
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**identitySummary.id**: *eq, in*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a summary of the decisions made on an identity campaign certification. The decisions are summarized by type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "febf0d84-28a8-4c4a-84ef-a0c87d5b16e4",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decision-summary?filters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decision-summary"
											],
											"query": [
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**identitySummary.id**: *eq, in*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a summary of the decisions made on an identity campaign certification. The decisions are summarized by type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "a7533c4c-b2f8-435c-a4fd-499a781f67d8",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decision-summary?filters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decision-summary"
											],
											"query": [
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**identitySummary.id**: *eq, in*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a summary of the decisions made on an identity campaign certification. The decisions are summarized by type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "66cf3c89-cfe9-43a5-b896-aa628959c580",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/decision-summary?filters=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"decision-summary"
											],
											"query": [
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**identitySummary.id**: *eq, in*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a summary of the decisions made on an identity campaign certification. The decisions are summarized by type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Identity Summaries for Identity Campaign Certification",
							"id": "3b394a60-c32d-4f21-8165-76ae94beb5d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications/:id/identity-summaries?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications",
										":id",
										"identity-summaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**completed**: *eq, ne*\n\n**name**: *eq, sw*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The identity campaign certification ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a list of the identity summaries for a specific identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
							},
							"response": [
								{
									"id": "521ebc39-b4bc-44ff-a816-47bfbb9f633f",
									"name": "List of identity summaries",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summaries?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**completed**: *eq, ne*\n\n**name**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of the identity summaries for a specific identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"2c91808772a504f50172a9540e501ba7\",\n    \"name\": \"Aaron Grey\",\n    \"identityId\": \"2c9180857182306001719937379633e4\",\n    \"completed\": false\n  },\n  {\n    \"id\": \"2c91808772a504f50172a9540e501ba8\",\n    \"name\": \"Aglae Wilson\",\n    \"identityId\": \"2c9180857182306001719937377a33de\",\n    \"completed\": true\n  }\n]"
								},
								{
									"id": "54e12b9e-8065-4a56-a185-a0fd4dd78594",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summaries?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**completed**: *eq, ne*\n\n**name**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of the identity summaries for a specific identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "41c044ba-ede6-4323-959b-fe8957ccfbb8",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summaries?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**completed**: *eq, ne*\n\n**name**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of the identity summaries for a specific identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "1c57caf3-e681-4a84-976a-f6dc0401a79f",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summaries?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**completed**: *eq, ne*\n\n**name**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of the identity summaries for a specific identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "80adf486-3e5f-4e97-882e-c39f915e72d7",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summaries?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**completed**: *eq, ne*\n\n**name**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of the identity summaries for a specific identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "742213bb-02e2-43b2-b927-ff455f03a31a",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summaries?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**completed**: *eq, ne*\n\n**name**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of the identity summaries for a specific identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "d877cb28-cb75-4aea-bbd9-e499de5f4499",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summaries?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**completed**: *eq, ne*\n\n**name**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of the identity summaries for a specific identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Access Summaries",
							"id": "8badfabf-8b6e-440f-8192-9ad8de482786",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications/:id/access-summaries/:type?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications",
										":id",
										"access-summaries",
										":type"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**completed**: *eq, ne*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **access.name**"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The identity campaign certification ID"
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) The type of access review item to retrieve summaries for"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a list of access summaries for the specified identity campaign certification and type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
							},
							"response": [
								{
									"id": "2ce6cf97-a9f1-477c-b999-5f9bb97b553b",
									"name": "List of access summaries",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-summaries/:type?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-summaries",
												":type"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**completed**: *eq, ne*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **access.name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "(Required) The type of access review item to retrieve summaries for"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access summaries for the specified identity campaign certification and type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"access\": {\n      \"type\": \"ENTITLEMENT\",\n      \"id\": \"2c9180857182305e01719937429e2bad\",\n      \"name\": \"CN=Engineering\"\n    },\n    \"entitlement\": {\n      \"id\": \"2c9180857182305e01719937429e2bad\",\n      \"name\": \"CN=Engineering\",\n      \"description\": \"Access to the engineering database\",\n      \"privileged\": false,\n      \"owner\": {\n        \"email\": \"brandon.gray@acme-solar.com\",\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c9180867160846801719932c5153fb7\",\n        \"name\": \"Brandon Gray\"\n      },\n      \"attributeName\": \"memberOf\",\n      \"attributeValue\": \"CN=Engineering\",\n      \"sourceName\": \"ODS-AD-Source\",\n      \"hasPermissions\": true,\n      \"revocable\": true\n    }\n  }\n]"
								},
								{
									"id": "d16fdc98-680f-4a1a-9179-5b5ad4b12810",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-summaries/:type?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-summaries",
												":type"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**completed**: *eq, ne*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **access.name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "(Required) The type of access review item to retrieve summaries for"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access summaries for the specified identity campaign certification and type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "08f92d9d-7b25-49eb-8118-6a98a94b9948",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-summaries/:type?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-summaries",
												":type"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**completed**: *eq, ne*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **access.name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "(Required) The type of access review item to retrieve summaries for"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access summaries for the specified identity campaign certification and type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "0ae00715-b7fc-4d38-a1f6-784f7a129470",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-summaries/:type?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-summaries",
												":type"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**completed**: *eq, ne*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **access.name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "(Required) The type of access review item to retrieve summaries for"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access summaries for the specified identity campaign certification and type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "fc53bf2d-46a2-4fa5-91e5-83556dde2ea2",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-summaries/:type?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-summaries",
												":type"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**completed**: *eq, ne*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **access.name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "(Required) The type of access review item to retrieve summaries for"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access summaries for the specified identity campaign certification and type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "2ab87cfe-df99-4ea4-82fc-201dee7c67c0",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-summaries/:type?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-summaries",
												":type"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**completed**: *eq, ne*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **access.name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "(Required) The type of access review item to retrieve summaries for"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access summaries for the specified identity campaign certification and type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "d24a611d-40c6-402a-9098-37129c40327a",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/access-summaries/:type?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"access-summaries",
												":type"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "filters",
													"value": "<string>",
													"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)\n\nFiltering is supported for the following fields and operators:\n\n**completed**: *eq, ne*\n\n**access.id**: *eq, in*\n\n**access.name**: *eq, sw*\n\n**entitlement.sourceName**: *eq, sw*\n\n**accessProfile.sourceName**: *eq, sw*"
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **access.name**"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "(Required) The type of access review item to retrieve summaries for"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns a list of access summaries for the specified identity campaign certification and type. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Summary for Identity",
							"id": "7c7d2d71-f1eb-4a1c-8df9-0c61c3bcb5cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications/:id/identity-summary/:identitySummaryId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications",
										":id",
										"identity-summary",
										":identitySummaryId"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The identity campaign certification ID"
										},
										{
											"key": "identitySummaryId",
											"value": "<string>",
											"description": "(Required) The identity summary ID"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns the summary for an identity on a specified identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
							},
							"response": [
								{
									"id": "42260f57-bb26-4933-9a52-a5f8d1888fda",
									"name": "An identity summary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summary/:identitySummaryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summary",
												":identitySummaryId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "identitySummaryId",
													"value": "<string>",
													"description": "(Required) The identity summary ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the summary for an identity on a specified identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808772a504f50172a9540e501ba7\",\n  \"name\": \"Alison Ferguso\",\n  \"identityId\": \"2c9180857182306001719937377a33de\",\n  \"completed\": false\n}"
								},
								{
									"id": "5bef95f6-6387-4eea-9c77-8996c793dbbb",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summary/:identitySummaryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summary",
												":identitySummaryId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "identitySummaryId",
													"value": "<string>",
													"description": "(Required) The identity summary ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the summary for an identity on a specified identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "5592cbd7-16c9-4430-8fc7-3b8bb43acb4f",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summary/:identitySummaryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summary",
												":identitySummaryId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "identitySummaryId",
													"value": "<string>",
													"description": "(Required) The identity summary ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the summary for an identity on a specified identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "ef83457c-8ca8-4830-852c-11ef9ca09080",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summary/:identitySummaryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summary",
												":identitySummaryId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "identitySummaryId",
													"value": "<string>",
													"description": "(Required) The identity summary ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the summary for an identity on a specified identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "411911e1-dae1-4102-8977-4fbf54e93eb4",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summary/:identitySummaryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summary",
												":identitySummaryId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "identitySummaryId",
													"value": "<string>",
													"description": "(Required) The identity summary ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the summary for an identity on a specified identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "513f2b63-7bcf-4957-b91e-2df3bf10d6b3",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/certifications/:id/identity-summary/:identitySummaryId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certifications",
												":id",
												"identity-summary",
												":identitySummaryId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The identity campaign certification ID"
												},
												{
													"key": "identitySummaryId",
													"value": "<string>",
													"description": "(Required) The identity summary ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the summary for an identity on a specified identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers for this certification can also call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "62f3ff46-7f69-4147-ab0d-0194896ca5cd"
				},
				{
					"name": "Identity Campaign Certifications by IDs",
					"id": "525e93f1-02bc-43fc-b71e-ebee69e6aeb0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/certifications?reviewer-identity=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certifications"
							],
							"query": [
								{
									"key": "reviewer-identity",
									"value": "<string>",
									"description": "The ID of reviewer identity. *me* indicates the current user."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**id**: *eq, in*\n**campaign.id**: *eq, in*\n**phase**: *eq*\n**completed**: *eq, ne*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **name, due, signed**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API returns a list of identity campaign certifications that satisfy the given query parameters. Any authenticated token can call this API, but only certifications you are authorized to review will be returned. This API does not support requests for certifications assigned to Governance Groups."
					},
					"response": [
						{
							"id": "a0abe2f6-fe6b-4058-ae5e-2258b5df6abf",
							"name": "List of identity campaign certifications",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications?reviewer-identity=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications"
									],
									"query": [
										{
											"key": "reviewer-identity",
											"value": "<string>",
											"description": "The ID of reviewer identity. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**id**: *eq, in*\n**campaign.id**: *eq, in*\n**phase**: *eq*\n**completed**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **name, due, signed**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a list of identity campaign certifications that satisfy the given query parameters. Any authenticated token can call this API, but only certifications you are authorized to review will be returned. This API does not support requests for certifications assigned to Governance Groups."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"Source Owner Access Review for Employees [source]\",\n    \"campaign\": {\n      \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n      \"name\": \"Campaign Name\",\n      \"type\": \"CAMPAIGN\",\n      \"campaignType\": \"MANAGER\",\n      \"description\": \"A description of the campaign\"\n    },\n    \"completed\": true,\n    \"identitiesCompleted\": 5,\n    \"identitiesTotal\": 10,\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"decisionsMade\": 20,\n    \"decisionsTotal\": 40,\n    \"due\": \"2018-10-19T13:49:37.385Z\",\n    \"signed\": \"2018-10-19T13:49:37.385Z\",\n    \"reviewer\": {\n      \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n      \"name\": \"Reviewer Name\",\n      \"email\": \"reviewer@test.com\",\n      \"type\": \"IDENTITY\",\n      \"created\": \"2018-06-25T20:22:28.104Z\",\n      \"modified\": \"2018-06-25T20:22:28.104Z\"\n    },\n    \"reassignment\": {\n      \"from\": {\n        \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n        \"name\": \"Certification Name\",\n        \"type\": \"CERTIFICATION\",\n        \"reviewer\": {\n          \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n          \"name\": \"Reviewer Name\",\n          \"email\": \"reviewer@test.com\",\n          \"type\": \"IDENTITY\",\n          \"created\": \"2018-06-25T20:22:28.104Z\",\n          \"modified\": \"2018-06-25T20:22:28.104Z\"\n        }\n      },\n      \"comment\": \"Reassigned for a reason\"\n    },\n    \"hasErrors\": false,\n    \"errorMessage\": \"The certification has an error\",\n    \"phase\": \"ACTIVE\"\n  },\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"Source Owner Access Review for Employees [source]\",\n    \"campaign\": {\n      \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n      \"name\": \"Campaign Name\",\n      \"type\": \"CAMPAIGN\",\n      \"campaignType\": \"MANAGER\",\n      \"description\": \"A description of the campaign\"\n    },\n    \"completed\": true,\n    \"identitiesCompleted\": 5,\n    \"identitiesTotal\": 10,\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"decisionsMade\": 20,\n    \"decisionsTotal\": 40,\n    \"due\": \"2018-10-19T13:49:37.385Z\",\n    \"signed\": \"2018-10-19T13:49:37.385Z\",\n    \"reviewer\": {\n      \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n      \"name\": \"Reviewer Name\",\n      \"email\": \"reviewer@test.com\",\n      \"type\": \"IDENTITY\",\n      \"created\": \"2018-06-25T20:22:28.104Z\",\n      \"modified\": \"2018-06-25T20:22:28.104Z\"\n    },\n    \"reassignment\": {\n      \"from\": {\n        \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n        \"name\": \"Certification Name\",\n        \"type\": \"CERTIFICATION\",\n        \"reviewer\": {\n          \"id\": \"ef38f94347e94562b5bb8424a56397d8\",\n          \"name\": \"Reviewer Name\",\n          \"email\": \"reviewer@test.com\",\n          \"type\": \"IDENTITY\",\n          \"created\": \"2018-06-25T20:22:28.104Z\",\n          \"modified\": \"2018-06-25T20:22:28.104Z\"\n        }\n      },\n      \"comment\": \"Reassigned for a reason\"\n    },\n    \"hasErrors\": false,\n    \"errorMessage\": \"The certification has an error\",\n    \"phase\": \"ACTIVE\"\n  }\n]"
						},
						{
							"id": "c86cec8f-de28-4711-b7e7-38f902c101c1",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications?reviewer-identity=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications"
									],
									"query": [
										{
											"key": "reviewer-identity",
											"value": "<string>",
											"description": "The ID of reviewer identity. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**id**: *eq, in*\n**campaign.id**: *eq, in*\n**phase**: *eq*\n**completed**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **name, due, signed**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a list of identity campaign certifications that satisfy the given query parameters. Any authenticated token can call this API, but only certifications you are authorized to review will be returned. This API does not support requests for certifications assigned to Governance Groups."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "aabfc836-81f7-4d9a-b617-8c5340685bf1",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications?reviewer-identity=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications"
									],
									"query": [
										{
											"key": "reviewer-identity",
											"value": "<string>",
											"description": "The ID of reviewer identity. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**id**: *eq, in*\n**campaign.id**: *eq, in*\n**phase**: *eq*\n**completed**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **name, due, signed**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a list of identity campaign certifications that satisfy the given query parameters. Any authenticated token can call this API, but only certifications you are authorized to review will be returned. This API does not support requests for certifications assigned to Governance Groups."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "42fc1305-cb68-4372-9789-7dce5bb4e209",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications?reviewer-identity=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications"
									],
									"query": [
										{
											"key": "reviewer-identity",
											"value": "<string>",
											"description": "The ID of reviewer identity. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**id**: *eq, in*\n**campaign.id**: *eq, in*\n**phase**: *eq*\n**completed**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **name, due, signed**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a list of identity campaign certifications that satisfy the given query parameters. Any authenticated token can call this API, but only certifications you are authorized to review will be returned. This API does not support requests for certifications assigned to Governance Groups."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "b118d596-9ff9-4728-ba22-5c3e097bc942",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications?reviewer-identity=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications"
									],
									"query": [
										{
											"key": "reviewer-identity",
											"value": "<string>",
											"description": "The ID of reviewer identity. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**id**: *eq, in*\n**campaign.id**: *eq, in*\n**phase**: *eq*\n**completed**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **name, due, signed**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a list of identity campaign certifications that satisfy the given query parameters. Any authenticated token can call this API, but only certifications you are authorized to review will be returned. This API does not support requests for certifications assigned to Governance Groups."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "0ecfbb22-a9f9-4a39-8097-b4ef03e97158",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certifications?reviewer-identity=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certifications"
									],
									"query": [
										{
											"key": "reviewer-identity",
											"value": "<string>",
											"description": "The ID of reviewer identity. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**id**: *eq, in*\n**campaign.id**: *eq, in*\n**phase**: *eq*\n**completed**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\nSorting is supported for the following fields: **name, due, signed**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns a list of identity campaign certifications that satisfy the given query parameters. Any authenticated token can call this API, but only certifications you are authorized to review will be returned. This API does not support requests for certifications assigned to Governance Groups."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "84848caf-48d1-41cd-81fc-18c606c059a4"
		},
		{
			"name": "identity-profiles",
			"item": [
				{
					"name": "{identity-profile-id}",
					"item": [
						{
							"name": "lifecycle-states",
							"item": [
								{
									"name": "{lifecycle-state-id}",
									"item": [
										{
											"name": "Retrieves Lifecycle State",
											"id": "4355a6aa-1cbf-4ba7-902d-ceb8f3cbbd17",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states",
														":lifecycle-state-id"
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) Identity Profile ID"
														},
														{
															"key": "lifecycle-state-id",
															"value": "<string>",
															"description": "(Required) Lifecycle State ID"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This endpoint retrieves a Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
											},
											"response": [
												{
													"id": "e8b24d24-f237-4b1b-ba05-7503422edcdb",
													"name": "The requested LifecycleState was successfully retrieved.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint retrieves a Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"aName\",\n  \"technicalName\": \"Technical Name\",\n  \"id\": \"id12345\",\n  \"created\": \"2015-05-28T14:07:17.000Z\",\n  \"modified\": \"2015-05-28T14:07:17.000Z\",\n  \"enabled\": true,\n  \"description\": \"Lifecycle description\",\n  \"identityCount\": 42,\n  \"emailNotificationOption\": {\n    \"notifyManagers\": true,\n    \"notifyAllAdmins\": true,\n    \"notifySpecificUsers\": true,\n    \"emailAddressList\": [\n      \"test@test.com\",\n      \"test2@test.com\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"ENABLE\",\n      \"sourceIds\": [\n        \"2c918084660f45d6016617daa9210584\",\n        \"2c918084660f45d6016617daa9210500\"\n      ]\n    },\n    {\n      \"action\": \"ENABLE\",\n      \"sourceIds\": [\n        \"2c918084660f45d6016617daa9210584\",\n        \"2c918084660f45d6016617daa9210500\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"2c918084660f45d6016617daa9210584\",\n    \"2c918084660f45d6016617daa9210500\"\n  ]\n}"
												},
												{
													"id": "f26fb346-185c-40ff-86b3-fb18b5186882",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint retrieves a Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "c1d7e03f-0d8a-4aa3-bfac-a0afecd99587",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint retrieves a Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "93169555-50b8-4fb8-af5f-869e532f8232",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint retrieves a Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "5c02c193-46af-4e73-aec6-3d368fdf139c",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint retrieves a Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "1c5df1c7-3782-4158-875b-64c3be16c8a1",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint retrieves a Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "35106a60-3e05-467b-8ae5-ee86f3284ef8",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint retrieves a Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update Lifecycle State",
											"id": "47951ae0-8f52-4d0d-b9cb-221f362f40df",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json-patch+json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[object Object],[object Object]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states",
														":lifecycle-state-id"
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) Identity Profile ID"
														},
														{
															"key": "lifecycle-state-id",
															"value": "<string>",
															"description": "(Required) Lifecycle State ID"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This endpoint updates individual Lifecycle State fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\nA token with ORG_ADMIN or API authority is required to call this API."
											},
											"response": [
												{
													"id": "3e5bf3d6-66cc-4914-b1c5-9f8fe8bb5121",
													"name": "The LifecycleState was successfully updated.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint updates individual Lifecycle State fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"aName\",\n  \"technicalName\": \"Technical Name\",\n  \"id\": \"id12345\",\n  \"created\": \"2015-05-28T14:07:17.000Z\",\n  \"modified\": \"2015-05-28T14:07:17.000Z\",\n  \"enabled\": true,\n  \"description\": \"Lifecycle description\",\n  \"identityCount\": 42,\n  \"emailNotificationOption\": {\n    \"notifyManagers\": true,\n    \"notifyAllAdmins\": true,\n    \"notifySpecificUsers\": true,\n    \"emailAddressList\": [\n      \"test@test.com\",\n      \"test2@test.com\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"ENABLE\",\n      \"sourceIds\": [\n        \"2c918084660f45d6016617daa9210584\",\n        \"2c918084660f45d6016617daa9210500\"\n      ]\n    },\n    {\n      \"action\": \"ENABLE\",\n      \"sourceIds\": [\n        \"2c918084660f45d6016617daa9210584\",\n        \"2c918084660f45d6016617daa9210500\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"2c918084660f45d6016617daa9210584\",\n    \"2c918084660f45d6016617daa9210500\"\n  ]\n}"
												},
												{
													"id": "467b59be-0ae4-421a-ba17-2c1deb7f839a",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint updates individual Lifecycle State fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "9140c15a-2f74-45b2-8984-39af00665b1d",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint updates individual Lifecycle State fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "45d2e467-9622-4126-8ad2-a1e22216dd60",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint updates individual Lifecycle State fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "7f45afba-e307-4874-88cb-ae8ea308e4b5",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint updates individual Lifecycle State fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "81f05e33-5412-48c8-9227-167cffe6ec5b",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint updates individual Lifecycle State fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "3df8aae8-a2c2-46e3-8bbd-836aef44f4d3",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint updates individual Lifecycle State fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\nA token with ORG_ADMIN or API authority is required to call this API."
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Lifecycle State by ID",
											"id": "66f1c7db-70fa-48de-8b91-27d61f136fb0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states",
														":lifecycle-state-id"
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) Identity Profile ID"
														},
														{
															"key": "lifecycle-state-id",
															"value": "<string>",
															"description": "(Required) Lifecycle State ID"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This endpoint deletes the Lifecycle State using it's ID.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"response": [
												{
													"id": "16d74fe0-ee57-426d-a28f-a700abdcc5a1",
													"name": "The request was successfully accepted into the system.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint deletes the Lifecycle State using it's ID.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"IDENTITY\",\n  \"id\": \"2c91808568c529c60168cca6f90c1313\",\n  \"name\": \"William Wilson\"\n}"
												},
												{
													"id": "1728c0d1-5cc3-4dcb-907a-2ed3a469c287",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint deletes the Lifecycle State using it's ID.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "2306647a-1d4c-4e79-8c1f-88674f75dfa2",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint deletes the Lifecycle State using it's ID.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "ea71ceaf-ea1d-4736-be22-ff07dbd0056d",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint deletes the Lifecycle State using it's ID.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "701e40e2-61a8-42ba-a6df-e25c57227aa4",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint deletes the Lifecycle State using it's ID.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "1510e4e4-d453-45b4-98d4-ece9a8142f00",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint deletes the Lifecycle State using it's ID.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "c0d6a806-ac81-40b6-b076-9d69939bd39f",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states/:lifecycle-state-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity-profiles",
																":identity-profile-id",
																"lifecycle-states",
																":lifecycle-state-id"
															],
															"variable": [
																{
																	"key": "identity-profile-id",
																	"value": "<string>",
																	"description": "(Required) Identity Profile ID"
																},
																{
																	"key": "lifecycle-state-id",
																	"value": "<string>",
																	"description": "(Required) Lifecycle State ID"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This endpoint deletes the Lifecycle State using it's ID.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "61d5bb67-e961-45ad-8a4d-c01845481b02"
								},
								{
									"name": "Lists LifecycleStates",
									"id": "e1441947-582b-4758-bd02-52a93ee589db",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states?limit=250&offset=0&count=false&sorters=<comma-separated>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id",
												"lifecycle-states"
											],
											"query": [
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "sorters",
													"value": "<comma-separated>",
													"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
												}
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<string>",
													"description": "(Required) The IdentityProfile id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point lists all the LifecycleStates associated with IdentityProfiles.\nA token with API, or ORG_ADMIN authority is required to call this API."
									},
									"response": [
										{
											"id": "92371d8b-1a41-45ea-bba4-66962e822a22",
											"name": "List of LifecycleState objects",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states?limit=250&offset=0&count=false&sorters=<comma-separated>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"query": [
														{
															"key": "limit",
															"value": "250",
															"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "count",
															"value": "false",
															"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "sorters",
															"value": "<comma-separated>",
															"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
														}
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) The IdentityProfile id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the LifecycleStates associated with IdentityProfiles.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"aName\",\n    \"technicalName\": \"Technical Name\",\n    \"id\": \"id12345\",\n    \"created\": \"2015-05-28T14:07:17.000Z\",\n    \"modified\": \"2015-05-28T14:07:17.000Z\",\n    \"enabled\": true,\n    \"description\": \"Lifecycle description\",\n    \"identityCount\": 42,\n    \"emailNotificationOption\": {\n      \"notifyManagers\": true,\n      \"notifyAllAdmins\": true,\n      \"notifySpecificUsers\": true,\n      \"emailAddressList\": [\n        \"test@test.com\",\n        \"test2@test.com\"\n      ]\n    },\n    \"accountActions\": [\n      {\n        \"action\": \"ENABLE\",\n        \"sourceIds\": [\n          \"2c918084660f45d6016617daa9210584\",\n          \"2c918084660f45d6016617daa9210500\"\n        ]\n      },\n      {\n        \"action\": \"ENABLE\",\n        \"sourceIds\": [\n          \"2c918084660f45d6016617daa9210584\",\n          \"2c918084660f45d6016617daa9210500\"\n        ]\n      }\n    ],\n    \"accessProfileIds\": [\n      \"2c918084660f45d6016617daa9210584\",\n      \"2c918084660f45d6016617daa9210500\"\n    ]\n  },\n  {\n    \"name\": \"aName\",\n    \"technicalName\": \"Technical Name\",\n    \"id\": \"id12345\",\n    \"created\": \"2015-05-28T14:07:17.000Z\",\n    \"modified\": \"2015-05-28T14:07:17.000Z\",\n    \"enabled\": true,\n    \"description\": \"Lifecycle description\",\n    \"identityCount\": 42,\n    \"emailNotificationOption\": {\n      \"notifyManagers\": true,\n      \"notifyAllAdmins\": true,\n      \"notifySpecificUsers\": true,\n      \"emailAddressList\": [\n        \"test@test.com\",\n        \"test2@test.com\"\n      ]\n    },\n    \"accountActions\": [\n      {\n        \"action\": \"ENABLE\",\n        \"sourceIds\": [\n          \"2c918084660f45d6016617daa9210584\",\n          \"2c918084660f45d6016617daa9210500\"\n        ]\n      },\n      {\n        \"action\": \"ENABLE\",\n        \"sourceIds\": [\n          \"2c918084660f45d6016617daa9210584\",\n          \"2c918084660f45d6016617daa9210500\"\n        ]\n      }\n    ],\n    \"accessProfileIds\": [\n      \"2c918084660f45d6016617daa9210584\",\n      \"2c918084660f45d6016617daa9210500\"\n    ]\n  }\n]"
										},
										{
											"id": "fce9913e-ac59-4d97-a479-e1bdaf3aa310",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states?limit=250&offset=0&count=false&sorters=<comma-separated>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"query": [
														{
															"key": "limit",
															"value": "250",
															"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "count",
															"value": "false",
															"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "sorters",
															"value": "<comma-separated>",
															"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
														}
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) The IdentityProfile id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the LifecycleStates associated with IdentityProfiles.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "fb262dc6-2437-49e5-8065-013374515dcd",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states?limit=250&offset=0&count=false&sorters=<comma-separated>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"query": [
														{
															"key": "limit",
															"value": "250",
															"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "count",
															"value": "false",
															"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "sorters",
															"value": "<comma-separated>",
															"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
														}
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) The IdentityProfile id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the LifecycleStates associated with IdentityProfiles.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "58e0d253-cbf9-4ba1-81d0-d71b8916b9f1",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states?limit=250&offset=0&count=false&sorters=<comma-separated>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"query": [
														{
															"key": "limit",
															"value": "250",
															"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "count",
															"value": "false",
															"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "sorters",
															"value": "<comma-separated>",
															"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
														}
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) The IdentityProfile id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the LifecycleStates associated with IdentityProfiles.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "6312af67-2436-4ee3-9025-892f4f84792b",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states?limit=250&offset=0&count=false&sorters=<comma-separated>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"query": [
														{
															"key": "limit",
															"value": "250",
															"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "count",
															"value": "false",
															"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "sorters",
															"value": "<comma-separated>",
															"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
														}
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) The IdentityProfile id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the LifecycleStates associated with IdentityProfiles.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "d05a371e-0500-40ed-9685-d6f62b493a81",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states?limit=250&offset=0&count=false&sorters=<comma-separated>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"query": [
														{
															"key": "limit",
															"value": "250",
															"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "count",
															"value": "false",
															"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
														},
														{
															"key": "sorters",
															"value": "<comma-separated>",
															"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified**"
														}
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) The IdentityProfile id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the LifecycleStates associated with IdentityProfiles.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Lifecycle State",
									"id": "a662c845-94ac-4a56-af7f-1b09cc05b410",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"emailNotificationOption\": {\n    \"notifyManagers\": \"<boolean>\",\n    \"notifyAllAdmins\": \"<boolean>\",\n    \"notifySpecificUsers\": \"<boolean>\",\n    \"emailAddressList\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    },\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id",
												"lifecycle-states"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<string>",
													"description": "(Required) Identity Profile ID"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API creates a new Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
									},
									"response": [
										{
											"id": "a71b1d3a-e5bd-42dd-bed5-f7d1ea52bbd0",
											"name": "Created LifecycleState object.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"emailNotificationOption\": {\n    \"notifyManagers\": \"<boolean>\",\n    \"notifyAllAdmins\": \"<boolean>\",\n    \"notifySpecificUsers\": \"<boolean>\",\n    \"emailAddressList\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    },\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) Identity Profile ID"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"aName\",\n  \"technicalName\": \"Technical Name\",\n  \"id\": \"id12345\",\n  \"created\": \"2015-05-28T14:07:17.000Z\",\n  \"modified\": \"2015-05-28T14:07:17.000Z\",\n  \"enabled\": true,\n  \"description\": \"Lifecycle description\",\n  \"identityCount\": 42,\n  \"emailNotificationOption\": {\n    \"notifyManagers\": true,\n    \"notifyAllAdmins\": true,\n    \"notifySpecificUsers\": true,\n    \"emailAddressList\": [\n      \"test@test.com\",\n      \"test2@test.com\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"ENABLE\",\n      \"sourceIds\": [\n        \"2c918084660f45d6016617daa9210584\",\n        \"2c918084660f45d6016617daa9210500\"\n      ]\n    },\n    {\n      \"action\": \"ENABLE\",\n      \"sourceIds\": [\n        \"2c918084660f45d6016617daa9210584\",\n        \"2c918084660f45d6016617daa9210500\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"2c918084660f45d6016617daa9210584\",\n    \"2c918084660f45d6016617daa9210500\"\n  ]\n}"
										},
										{
											"id": "99f48f46-349c-41ed-be47-2570776d6716",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"emailNotificationOption\": {\n    \"notifyManagers\": \"<boolean>\",\n    \"notifyAllAdmins\": \"<boolean>\",\n    \"notifySpecificUsers\": \"<boolean>\",\n    \"emailAddressList\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    },\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) Identity Profile ID"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "3d68a462-23a5-4c36-beb4-a63b353b2f6f",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"emailNotificationOption\": {\n    \"notifyManagers\": \"<boolean>\",\n    \"notifyAllAdmins\": \"<boolean>\",\n    \"notifySpecificUsers\": \"<boolean>\",\n    \"emailAddressList\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    },\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) Identity Profile ID"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "12993f8f-ab67-4fdc-9282-4ba2a659a9b5",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"emailNotificationOption\": {\n    \"notifyManagers\": \"<boolean>\",\n    \"notifyAllAdmins\": \"<boolean>\",\n    \"notifySpecificUsers\": \"<boolean>\",\n    \"emailAddressList\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    },\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) Identity Profile ID"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "a1361e44-1d9f-4ffa-b086-67ddd3f9aa92",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"emailNotificationOption\": {\n    \"notifyManagers\": \"<boolean>\",\n    \"notifyAllAdmins\": \"<boolean>\",\n    \"notifySpecificUsers\": \"<boolean>\",\n    \"emailAddressList\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    },\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) Identity Profile ID"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "6c239f54-9115-4014-8606-646c0a43efe6",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"emailNotificationOption\": {\n    \"notifyManagers\": \"<boolean>\",\n    \"notifyAllAdmins\": \"<boolean>\",\n    \"notifySpecificUsers\": \"<boolean>\",\n    \"emailAddressList\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"accountActions\": [\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    },\n    {\n      \"action\": \"<string>\",\n      \"sourceIds\": [\n        \"<string>\"\n      ]\n    }\n  ],\n  \"accessProfileIds\": [\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/lifecycle-states",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity-profiles",
														":identity-profile-id",
														"lifecycle-states"
													],
													"variable": [
														{
															"key": "identity-profile-id",
															"value": "<string>",
															"description": "(Required) Identity Profile ID"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new Lifecycle State.\nA token with ORG_ADMIN or API authority is required to call this API."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "950e4654-cb96-4036-9563-927d2cb95622"
						},
						{
							"name": "Get single Identity Profile",
							"id": "b5a45b05-ddfd-4386-8bf9-77f931524cd2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										":identity-profile-id"
									],
									"variable": [
										{
											"key": "identity-profile-id",
											"value": "<uuid>",
											"description": "(Required) The Identity Profile ID."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a single Identity Profile based on ID.\nA token with ORG_ADMIN or API authority is required to call this API."
							},
							"response": [
								{
									"id": "00461ef6-5ed6-4ed5-a377-adcb60f6a142",
									"name": "An Identity Profile object.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns a single Identity Profile based on ID.\nA token with ORG_ADMIN or API authority is required to call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"IDENTITY\",\n  \"id\": \"2c91808568c529c60168cca6f90c1313\",\n  \"name\": \"William Wilson\",\n  \"description\": \"My custom flat file profile\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"priority\": 10,\n  \"authoritativeSource\": {\n    \"type\": \"SOURCE\",\n    \"id\": \"2c9180835d191a86015d28455b4b232a\",\n    \"name\": \"HR Active Directory\"\n  },\n  \"identityRefreshRequired\": true,\n  \"identityCount\": 8,\n  \"identityAttributeConfig\": {\n    \"enabled\": true,\n    \"attributeTransforms\": [\n      {\n        \"identityAttributeName\": \"email\",\n        \"transformDefinition\": {\n          \"type\": \"accountAttribute\",\n          \"attributes\": {\n            \"adipisicing1\": {},\n            \"est_1\": {},\n            \"officia__87\": {},\n            \"amet_e\": {}\n          }\n        }\n      },\n      {\n        \"identityAttributeName\": \"email\",\n        \"transformDefinition\": {\n          \"type\": \"accountAttribute\",\n          \"attributes\": {\n            \"sit_1e2\": {}\n          }\n        }\n      }\n    ]\n  },\n  \"identityExceptionReportReference\": {\n    \"taskResultId\": \"urn:uuid:61dc4877-600e-f12b-eb90-ff7f741927e9\",\n    \"reportName\": \"My annual report\"\n  },\n  \"hasTimeBasedAttr\": true\n}"
								},
								{
									"id": "22cf04b2-f967-4fbe-8b84-31101828c216",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns a single Identity Profile based on ID.\nA token with ORG_ADMIN or API authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "ce9ed934-9cf4-4368-86b5-1133564fb532",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns a single Identity Profile based on ID.\nA token with ORG_ADMIN or API authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "0f7ca619-93a5-4445-85cc-850bbe4c2e1c",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns a single Identity Profile based on ID.\nA token with ORG_ADMIN or API authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "1dbd6fd9-3493-4af2-8347-6f665654f3c0",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns a single Identity Profile based on ID.\nA token with ORG_ADMIN or API authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "c7a8f697-5303-42c1-83a8-38e2fa87d960",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns a single Identity Profile based on ID.\nA token with ORG_ADMIN or API authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get default Identity Attribute Config",
							"id": "42d1fdfb-283a-4447-b467-7cd65e6bf0d1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/default-identity-attribute-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										":identity-profile-id",
										"default-identity-attribute-config"
									],
									"variable": [
										{
											"key": "identity-profile-id",
											"value": "<uuid>",
											"description": "(Required) The Identity Profile ID."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns the default identity attribute config.\nA token with ORG_ADMIN authority is required to call this API to get the default identity attribute config."
							},
							"response": [
								{
									"id": "52b786e4-22e5-4223-8e39-5935a05ec9ee",
									"name": "An Identity Attribute Config object.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/default-identity-attribute-config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id",
												"default-identity-attribute-config"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns the default identity attribute config.\nA token with ORG_ADMIN authority is required to call this API to get the default identity attribute config."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"enabled\": true,\n  \"attributeTransforms\": [\n    {\n      \"identityAttributeName\": \"email\",\n      \"transformDefinition\": {\n        \"type\": \"accountAttribute\",\n        \"attributes\": {\n          \"Duis_bb1\": {}\n        }\n      }\n    },\n    {\n      \"identityAttributeName\": \"email\",\n      \"transformDefinition\": {\n        \"type\": \"accountAttribute\",\n        \"attributes\": {\n          \"ut9\": {},\n          \"ullamco_e57\": {}\n        }\n      }\n    }\n  ]\n}"
								},
								{
									"id": "932ad241-a05e-4d1d-9c35-86f6f8418f73",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/default-identity-attribute-config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id",
												"default-identity-attribute-config"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns the default identity attribute config.\nA token with ORG_ADMIN authority is required to call this API to get the default identity attribute config."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "5acb36f0-de83-4093-b9c4-d2704aa81117",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/default-identity-attribute-config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id",
												"default-identity-attribute-config"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns the default identity attribute config.\nA token with ORG_ADMIN authority is required to call this API to get the default identity attribute config."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "418ff0cf-071d-4b32-bee5-b98a762f601c",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/default-identity-attribute-config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id",
												"default-identity-attribute-config"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns the default identity attribute config.\nA token with ORG_ADMIN authority is required to call this API to get the default identity attribute config."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "3134db4f-a3bd-4522-b2f0-bc2bf3624027",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/default-identity-attribute-config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id",
												"default-identity-attribute-config"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns the default identity attribute config.\nA token with ORG_ADMIN authority is required to call this API to get the default identity attribute config."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "23332a39-b406-4959-bfcd-886913620929",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity-profiles/:identity-profile-id/default-identity-attribute-config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity-profiles",
												":identity-profile-id",
												"default-identity-attribute-config"
											],
											"variable": [
												{
													"key": "identity-profile-id",
													"value": "<uuid>",
													"description": "(Required) The Identity Profile ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This returns the default identity attribute config.\nA token with ORG_ADMIN authority is required to call this API to get the default identity attribute config."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "d3360313-2f29-4ac1-92f7-b4b29f2bb655"
				},
				{
					"name": "Identity Profiles List",
					"id": "1148db0e-4a68-465a-a829-90e343a59a93",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/identity-profiles?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity-profiles"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This returns a list of Identity Profiles based on the specified query parameters.\nA token with ORG_ADMIN or API authority is required to call this API to get a list of Identity Profiles."
					},
					"response": [
						{
							"id": "3d8fc02e-4623-4b67-bbac-ffd58914730e",
							"name": "List of identityProfiles.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of Identity Profiles based on the specified query parameters.\nA token with ORG_ADMIN or API authority is required to call this API to get a list of Identity Profiles."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\",\n    \"description\": \"My custom flat file profile\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"priority\": 10,\n    \"authoritativeSource\": {\n      \"type\": \"SOURCE\",\n      \"id\": \"2c9180835d191a86015d28455b4b232a\",\n      \"name\": \"HR Active Directory\"\n    },\n    \"identityRefreshRequired\": true,\n    \"identityCount\": 8,\n    \"identityAttributeConfig\": {\n      \"enabled\": true,\n      \"attributeTransforms\": [\n        {\n          \"identityAttributeName\": \"email\",\n          \"transformDefinition\": {\n            \"type\": \"accountAttribute\",\n            \"attributes\": {\n              \"in2\": {},\n              \"eu_1a\": {}\n            }\n          }\n        },\n        {\n          \"identityAttributeName\": \"email\",\n          \"transformDefinition\": {\n            \"type\": \"accountAttribute\",\n            \"attributes\": {\n              \"ullamco_f\": {},\n              \"cillum0d3\": {}\n            }\n          }\n        }\n      ]\n    },\n    \"identityExceptionReportReference\": {\n      \"taskResultId\": \"urn:uuid:9f2d2aa8-a8e9-114c-f083-6fdd5776d3b5\",\n      \"reportName\": \"My annual report\"\n    },\n    \"hasTimeBasedAttr\": true\n  },\n  {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\",\n    \"description\": \"My custom flat file profile\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"priority\": 10,\n    \"authoritativeSource\": {\n      \"type\": \"SOURCE\",\n      \"id\": \"2c9180835d191a86015d28455b4b232a\",\n      \"name\": \"HR Active Directory\"\n    },\n    \"identityRefreshRequired\": true,\n    \"identityCount\": 8,\n    \"identityAttributeConfig\": {\n      \"enabled\": true,\n      \"attributeTransforms\": [\n        {\n          \"identityAttributeName\": \"email\",\n          \"transformDefinition\": {\n            \"type\": \"accountAttribute\",\n            \"attributes\": {\n              \"incididuntbd\": {}\n            }\n          }\n        },\n        {\n          \"identityAttributeName\": \"email\",\n          \"transformDefinition\": {\n            \"type\": \"accountAttribute\",\n            \"attributes\": {\n              \"tempor9\": {},\n              \"Duis_7\": {}\n            }\n          }\n        }\n      ]\n    },\n    \"identityExceptionReportReference\": {\n      \"taskResultId\": \"urn:uuid:1f841af9-39db-7fe3-1a6d-71dc7f52db24\",\n      \"reportName\": \"My annual report\"\n    },\n    \"hasTimeBasedAttr\": true\n  }\n]"
						},
						{
							"id": "188c0476-28f9-4f0c-924a-6dcf5cde6d98",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of Identity Profiles based on the specified query parameters.\nA token with ORG_ADMIN or API authority is required to call this API to get a list of Identity Profiles."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "dc19764d-84dd-4bb7-be10-35ee1e52d3cf",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of Identity Profiles based on the specified query parameters.\nA token with ORG_ADMIN or API authority is required to call this API to get a list of Identity Profiles."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "aadd4df6-3c88-4993-a706-5f3d62903081",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of Identity Profiles based on the specified query parameters.\nA token with ORG_ADMIN or API authority is required to call this API to get a list of Identity Profiles."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "11853645-08de-40ed-b5fb-153196f306fa",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of Identity Profiles based on the specified query parameters.\nA token with ORG_ADMIN or API authority is required to call this API to get a list of Identity Profiles."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "1af9faf6-f326-41ba-a3c3-8ecb5a52480a",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This returns a list of Identity Profiles based on the specified query parameters.\nA token with ORG_ADMIN or API authority is required to call this API to get a list of Identity Profiles."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Export Identity Profiles",
					"id": "f85714f4-7e32-4cc8-acd7-7588cf1aa57d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/identity-profiles/export?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity-profiles",
								"export"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This exports existing identity profiles in the format specified by the sp-config service."
					},
					"response": [
						{
							"id": "9cbbcb9a-a883-4393-9d1d-61a129b92011",
							"name": "List of export objects with identity profiles.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/export?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"export"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This exports existing identity profiles in the format specified by the sp-config service."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"version\": 1,\n    \"self\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"object\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\",\n      \"description\": \"My custom flat file profile\",\n      \"owner\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"William Wilson\"\n      },\n      \"priority\": 10,\n      \"authoritativeSource\": {\n        \"type\": \"SOURCE\",\n        \"id\": \"2c9180835d191a86015d28455b4b232a\",\n        \"name\": \"HR Active Directory\"\n      },\n      \"identityRefreshRequired\": true,\n      \"identityCount\": 8,\n      \"identityAttributeConfig\": {\n        \"enabled\": true,\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"email\",\n            \"transformDefinition\": {\n              \"type\": \"accountAttribute\",\n              \"attributes\": {\n                \"esseddf\": {},\n                \"in_b\": {},\n                \"velit_5\": {},\n                \"in_fd7\": {},\n                \"sunt_94\": {}\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"email\",\n            \"transformDefinition\": {\n              \"type\": \"accountAttribute\",\n              \"attributes\": {\n                \"non_727\": {}\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"84515604-66d5-690f-d9b2-4ac1c898d065\",\n        \"reportName\": \"My annual report\"\n      },\n      \"hasTimeBasedAttr\": true\n    }\n  },\n  {\n    \"version\": 1,\n    \"self\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"object\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\",\n      \"description\": \"My custom flat file profile\",\n      \"owner\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"William Wilson\"\n      },\n      \"priority\": 10,\n      \"authoritativeSource\": {\n        \"type\": \"SOURCE\",\n        \"id\": \"2c9180835d191a86015d28455b4b232a\",\n        \"name\": \"HR Active Directory\"\n      },\n      \"identityRefreshRequired\": true,\n      \"identityCount\": 8,\n      \"identityAttributeConfig\": {\n        \"enabled\": true,\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"email\",\n            \"transformDefinition\": {\n              \"type\": \"accountAttribute\",\n              \"attributes\": {\n                \"tempor_9\": {},\n                \"labore55c\": {},\n                \"in5\": {}\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"email\",\n            \"transformDefinition\": {\n              \"type\": \"accountAttribute\",\n              \"attributes\": {\n                \"id_a\": {}\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"urn:uuid:33b46c0a-fca8-1e6c-b0fa-c26dc2d2d732\",\n        \"reportName\": \"My annual report\"\n      },\n      \"hasTimeBasedAttr\": true\n    }\n  }\n]"
						},
						{
							"id": "60d041c7-f335-4863-89b7-9b890b4e1b12",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/export?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"export"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This exports existing identity profiles in the format specified by the sp-config service."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "8a0594fb-329c-486f-b5f2-baaedbb5e78e",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/export?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"export"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This exports existing identity profiles in the format specified by the sp-config service."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "bb2e9b28-6bb0-413c-bbed-35ef6aab8e96",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/export?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"export"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This exports existing identity profiles in the format specified by the sp-config service."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "d0e7fa18-180c-408d-9c52-89dca49048df",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/export?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"export"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This exports existing identity profiles in the format specified by the sp-config service."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "5987d7e1-8b3b-4db4-9e79-483a6b8c7e8b",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/export?limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"export"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, ne*\n\n**name**: *eq, ne*\n\n**priority**: *eq, ne*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id**, **name**, **priority**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This exports existing identity profiles in the format specified by the sp-config service."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Import Identity Profiles",
					"id": "00109e99-4773-4844-9535-d963af839d87",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"magna20e\": \"<object>\",\n                \"ipsum_5\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"reprehenderit4a7\": \"<object>\",\n                \"qui_e91\": \"<object>\",\n                \"irure_04\": \"<object>\",\n                \"id_c9_\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  },\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"laborisb09\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"cupidatat_e2a\": \"<object>\",\n                \"aliquip_9e3\": \"<object>\",\n                \"ipsumb9f\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identity-profiles/import",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity-profiles",
								"import"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This imports previously exported identity profiles."
					},
					"response": [
						{
							"id": "7bf55133-7292-412a-87b2-7aa9af2cb6da",
							"name": "The result of importing Identity Profiles.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"magna20e\": \"<object>\",\n                \"ipsum_5\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"reprehenderit4a7\": \"<object>\",\n                \"qui_e91\": \"<object>\",\n                \"irure_04\": \"<object>\",\n                \"id_c9_\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  },\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"laborisb09\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"cupidatat_e2a\": \"<object>\",\n                \"aliquip_9e3\": \"<object>\",\n                \"ipsumb9f\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"import"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This imports previously exported identity profiles."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"infos\": [\n    {\n      \"key\": \"UNKNOWN_REFERENCE_RESOLVER\",\n      \"text\": \"Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz, name: random identity]\",\n      \"details\": {\n        \"veniam_e6\": {}\n      }\n    },\n    {\n      \"key\": \"UNKNOWN_REFERENCE_RESOLVER\",\n      \"text\": \"Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz, name: random identity]\",\n      \"details\": {\n        \"esse_1\": {}\n      }\n    }\n  ],\n  \"warnings\": [\n    {\n      \"key\": \"UNKNOWN_REFERENCE_RESOLVER\",\n      \"text\": \"Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz, name: random identity]\",\n      \"details\": {\n        \"dolore_b\": {}\n      }\n    },\n    {\n      \"key\": \"UNKNOWN_REFERENCE_RESOLVER\",\n      \"text\": \"Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz, name: random identity]\",\n      \"details\": {\n        \"commodo_\": {},\n        \"cillum019\": {}\n      }\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"UNKNOWN_REFERENCE_RESOLVER\",\n      \"text\": \"Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz, name: random identity]\",\n      \"details\": {\n        \"sed_95a\": {}\n      }\n    },\n    {\n      \"key\": \"UNKNOWN_REFERENCE_RESOLVER\",\n      \"text\": \"Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz, name: random identity]\",\n      \"details\": {\n        \"pariaturf1\": {},\n        \"deserunt7\": {},\n        \"reprehenderit_659\": {}\n      }\n    }\n  ],\n  \"importedObjects\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    }\n  ]\n}"
						},
						{
							"id": "ce195519-35a7-49b4-ad61-adf0499e805d",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"magna20e\": \"<object>\",\n                \"ipsum_5\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"reprehenderit4a7\": \"<object>\",\n                \"qui_e91\": \"<object>\",\n                \"irure_04\": \"<object>\",\n                \"id_c9_\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  },\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"laborisb09\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"cupidatat_e2a\": \"<object>\",\n                \"aliquip_9e3\": \"<object>\",\n                \"ipsumb9f\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"import"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This imports previously exported identity profiles."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "07549651-5bac-490e-aced-bf80574f53b8",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"magna20e\": \"<object>\",\n                \"ipsum_5\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"reprehenderit4a7\": \"<object>\",\n                \"qui_e91\": \"<object>\",\n                \"irure_04\": \"<object>\",\n                \"id_c9_\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  },\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"laborisb09\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"cupidatat_e2a\": \"<object>\",\n                \"aliquip_9e3\": \"<object>\",\n                \"ipsumb9f\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"import"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This imports previously exported identity profiles."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "9e99c884-3047-4f74-a85c-027df8900d0a",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"magna20e\": \"<object>\",\n                \"ipsum_5\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"reprehenderit4a7\": \"<object>\",\n                \"qui_e91\": \"<object>\",\n                \"irure_04\": \"<object>\",\n                \"id_c9_\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  },\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"laborisb09\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"cupidatat_e2a\": \"<object>\",\n                \"aliquip_9e3\": \"<object>\",\n                \"ipsumb9f\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"import"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This imports previously exported identity profiles."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "a5fbb7f5-4a40-47fd-8a6d-a538d27186dd",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"magna20e\": \"<object>\",\n                \"ipsum_5\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"reprehenderit4a7\": \"<object>\",\n                \"qui_e91\": \"<object>\",\n                \"irure_04\": \"<object>\",\n                \"id_c9_\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  },\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"laborisb09\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"cupidatat_e2a\": \"<object>\",\n                \"aliquip_9e3\": \"<object>\",\n                \"ipsumb9f\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"import"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This imports previously exported identity profiles."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "077ed0e0-27de-4b59-8e27-5448ce630ffe",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"magna20e\": \"<object>\",\n                \"ipsum_5\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"reprehenderit4a7\": \"<object>\",\n                \"qui_e91\": \"<object>\",\n                \"irure_04\": \"<object>\",\n                \"id_c9_\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  },\n  {\n    \"version\": \"<integer>\",\n    \"self\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"object\": {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"owner\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"priority\": \"<long>\",\n      \"authoritativeSource\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"identityRefreshRequired\": \"<boolean>\",\n      \"identityCount\": \"<integer>\",\n      \"identityAttributeConfig\": {\n        \"enabled\": \"<boolean>\",\n        \"attributeTransforms\": [\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"laborisb09\": \"<object>\"\n              }\n            }\n          },\n          {\n            \"identityAttributeName\": \"<string>\",\n            \"transformDefinition\": {\n              \"type\": \"<string>\",\n              \"attributes\": {\n                \"cupidatat_e2a\": \"<object>\",\n                \"aliquip_9e3\": \"<object>\",\n                \"ipsumb9f\": \"<object>\"\n              }\n            }\n          }\n        ]\n      },\n      \"identityExceptionReportReference\": {\n        \"taskResultId\": \"<uuid>\",\n        \"reportName\": \"<string>\"\n      },\n      \"hasTimeBasedAttr\": \"<boolean>\"\n    }\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identity-profiles/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity-profiles",
										"import"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This imports previously exported identity profiles."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "213178da-307d-41db-a191-4421408d1b54"
		},
		{
			"name": "non-employee-records",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a Non-Employee Record",
							"id": "2d697a63-2d8a-4bc9-8b8f-d1fd9da1237b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Non-Employee record id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a non-employee record.<br><br>\nRequires role context of `idn:nesr:read`"
							},
							"response": [
								{
									"id": "53a0127f-e215-416c-b018-972624dc4c3b",
									"name": "Non-Employee record object",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee record.<br><br>\nRequires role context of `idn:nesr:read`"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eiusmod laboris l\",\n  \"accountName\": \"id eiusmod aliquip deserunt in\",\n  \"firstName\": \"William\",\n  \"lastName\": \"Smith\",\n  \"email\": \"william.smith@example.com\",\n  \"phone\": \"5555555555\",\n  \"manager\": \"jane.doe\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"data\": {\n    \"eiusmod_a\": \"sit pariatur est\"\n  },\n  \"startDate\": \"2019-08-23T18:52:59.162Z\",\n  \"endDate\": \"2020-08-23T18:52:59.162Z\",\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\"\n}"
								},
								{
									"id": "611b4169-84a8-41b2-b695-ada387c11de9",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee record.<br><br>\nRequires role context of `idn:nesr:read`"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "9f5f3806-d9ce-466b-bf32-2eff6dc61d66",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee record.<br><br>\nRequires role context of `idn:nesr:read`"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "2b802d80-1bb1-44f9-9ae0-fc806837f2a8",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee record.<br><br>\nRequires role context of `idn:nesr:read`"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "08ff86c2-8036-4983-9650-dd9a3646be66",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee record.<br><br>\nRequires role context of `idn:nesr:read`"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "c65a3fa8-c845-4d1a-8585-804290cde996",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee record.<br><br>\nRequires role context of `idn:nesr:read`"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Non-Employee Record",
							"id": "310666ef-6c15-454f-8bef-2be10366b5b4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Non-employee record id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will update a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
							},
							"response": [
								{
									"id": "11c68236-572c-48d8-9509-3e7b6c446f47",
									"name": "An updated non-employee record.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will update a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eiusmod laboris l\",\n  \"accountName\": \"id eiusmod aliquip deserunt in\",\n  \"firstName\": \"William\",\n  \"lastName\": \"Smith\",\n  \"email\": \"william.smith@example.com\",\n  \"phone\": \"5555555555\",\n  \"manager\": \"jane.doe\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"data\": {\n    \"eiusmod_a\": \"sit pariatur est\"\n  },\n  \"startDate\": \"2019-08-23T18:52:59.162Z\",\n  \"endDate\": \"2020-08-23T18:52:59.162Z\",\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\"\n}"
								},
								{
									"id": "315c4dcd-6da2-4ce0-b2f6-2dcf4e39245e",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will update a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "4b6c1a8c-547e-475b-9cbe-065d7cf5f4b7",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will update a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "a07c7cae-a9d5-4b63-90d2-3bcf20ec94ec",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will update a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "385eac55-60cd-4e5c-a58d-196702cdebcc",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will update a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "9dd241a5-ca76-42f9-8289-3b9efb7dad33",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will update a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "bc49b2a4-f690-412c-bf68-c37a52e336ef",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will update a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Patch Non-Employee Record",
							"id": "ad33bbf1-d7a2-4f0c-879c-4cb38bd75978",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[object Object],[object Object]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Non-employee record id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will patch a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
							},
							"response": [
								{
									"id": "817cc899-8608-4858-abcd-46a3c5eaa3d6",
									"name": "A patched non-employee record.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will patch a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eiusmod laboris l\",\n  \"accountName\": \"id eiusmod aliquip deserunt in\",\n  \"firstName\": \"William\",\n  \"lastName\": \"Smith\",\n  \"email\": \"william.smith@example.com\",\n  \"phone\": \"5555555555\",\n  \"manager\": \"jane.doe\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"data\": {\n    \"eiusmod_a\": \"sit pariatur est\"\n  },\n  \"startDate\": \"2019-08-23T18:52:59.162Z\",\n  \"endDate\": \"2020-08-23T18:52:59.162Z\",\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\"\n}"
								},
								{
									"id": "e1606b9e-1ce5-4c48-9d7d-1eef0215f2ff",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will patch a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "cc36853d-da25-4c31-921c-d17b52d631b9",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will patch a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "694eaa85-88d7-47f7-b22c-7aa629262759",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will patch a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "4c55dc1e-a103-4960-a3ec-ae86177e2921",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will patch a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "57be3292-7f3b-44cb-bfe0-dc5edf26f386",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will patch a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "9661e703-f5f0-415f-ada6-defc12117cff",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will patch a non-employee record.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:update`, in which case they update all available fields.<br>\n  2. The user is owner of the source, in this case they can only update the end date. "
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Non-Employee Record",
							"id": "0d6991ec-1aa1-4436-9d05-bafa99752ee6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Non-Employee record id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will delete a non-employee record.<br><br>\nRequires role context of `idn:nesr:delete`"
							},
							"response": [
								{
									"id": "fba7771e-11d7-4610-b532-e631e7787786",
									"name": "No content - indicates the request was successful but there is no content to be returned in the response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee record.<br><br>\nRequires role context of `idn:nesr:delete`"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "96872dc5-852b-4e52-9d73-da66b78a7b5f",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee record.<br><br>\nRequires role context of `idn:nesr:delete`"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "91e0928e-b1f0-4d1a-bd86-00fd2c72ef78",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee record.<br><br>\nRequires role context of `idn:nesr:delete`"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "58405e58-1ab3-453e-87e3-859583f77656",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee record.<br><br>\nRequires role context of `idn:nesr:delete`"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "2d27de2d-568d-4b60-b214-95b54719a25b",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee record.<br><br>\nRequires role context of `idn:nesr:delete`"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "7247a67b-8102-4b20-b933-196fbff26ae9",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-records/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-records",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee record id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee record.<br><br>\nRequires role context of `idn:nesr:delete`"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "41ce010d-d9d6-4fac-bd44-bc245309a712"
				},
				{
					"name": "Create Non-Employee Record",
					"id": "da9a3cfc-ba8f-43e6-9bc7-1e0ac92f556e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/non-employee-records",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-records"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This request will create a non-employee record.<br><br>\nRequires role context of `idn:nesr:create` "
					},
					"response": [
						{
							"id": "2ebdd0ca-9fde-4e4f-a223-b36923720b1c",
							"name": "Created non-employee record.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee record.<br><br>\nRequires role context of `idn:nesr:create` "
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"eiusmod laboris l\",\n  \"accountName\": \"id eiusmod aliquip deserunt in\",\n  \"firstName\": \"William\",\n  \"lastName\": \"Smith\",\n  \"email\": \"william.smith@example.com\",\n  \"phone\": \"5555555555\",\n  \"manager\": \"jane.doe\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"data\": {\n    \"eiusmod_a\": \"sit pariatur est\"\n  },\n  \"startDate\": \"2019-08-23T18:52:59.162Z\",\n  \"endDate\": \"2020-08-23T18:52:59.162Z\",\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\"\n}"
						},
						{
							"id": "f6836cfe-9b1a-45d8-8b99-9978756c628f",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee record.<br><br>\nRequires role context of `idn:nesr:create` "
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "39b99203-3786-49b5-a639-cdd1a04d25fe",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee record.<br><br>\nRequires role context of `idn:nesr:create` "
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "bc3ec313-8026-42e6-9f0c-9f1fcb48e289",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee record.<br><br>\nRequires role context of `idn:nesr:create` "
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "58320bbb-37f0-42b7-8d34-9bec91401313",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee record.<br><br>\nRequires role context of `idn:nesr:create` "
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "ee35b138-5c87-498f-862d-37533b7e2e73",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee record.<br><br>\nRequires role context of `idn:nesr:create` "
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List Non-Employee Records",
					"id": "7351c4eb-eb9e-48d3-9a79-0679dd28bb49",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/non-employee-records?limit=250&offset=0&count=false&sorters=<comma-separated>&filters=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-records"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**"
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a list of non-employee records.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get a list of all of the non-employees.<br>\n  2. The user is an account manager, in which case they can get a list of the non-employees that they manage."
					},
					"response": [
						{
							"id": "9cb86840-dd4c-4132-860b-141ebcabb0eb",
							"name": "Non-Employee record objects",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-records?limit=250&offset=0&count=false&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee records.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get a list of all of the non-employees.<br>\n  2. The user is an account manager, in which case they can get a list of the non-employees that they manage."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"proident consequat Duis quis\",\n    \"accountName\": \"dolore deserunt minim\",\n    \"firstName\": \"William\",\n    \"lastName\": \"Smith\",\n    \"email\": \"william.smith@example.com\",\n    \"phone\": \"5555555555\",\n    \"manager\": \"jane.doe\",\n    \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n    \"data\": {\n      \"fugiat12\": \"quis ea\"\n    },\n    \"startDate\": \"2019-08-23T18:52:59.162Z\",\n    \"endDate\": \"2020-08-23T18:52:59.162Z\",\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\"\n  },\n  {\n    \"id\": \"veniam\",\n    \"accountName\": \"ipsum\",\n    \"firstName\": \"William\",\n    \"lastName\": \"Smith\",\n    \"email\": \"william.smith@example.com\",\n    \"phone\": \"5555555555\",\n    \"manager\": \"jane.doe\",\n    \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n    \"data\": {\n      \"ad_ab\": \"sint Excepteur quis\"\n    },\n    \"startDate\": \"2019-08-23T18:52:59.162Z\",\n    \"endDate\": \"2020-08-23T18:52:59.162Z\",\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\"\n  }\n]"
						},
						{
							"id": "0e99d042-dc4d-4172-8d76-7fdd531bd535",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-records?limit=250&offset=0&count=false&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee records.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get a list of all of the non-employees.<br>\n  2. The user is an account manager, in which case they can get a list of the non-employees that they manage."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "5a0cc1dd-9ce9-42f6-ac89-d65a98ec2bd6",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-records?limit=250&offset=0&count=false&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee records.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get a list of all of the non-employees.<br>\n  2. The user is an account manager, in which case they can get a list of the non-employees that they manage."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "64eeb7c1-45b9-4132-bda4-f6ecf3a012b2",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-records?limit=250&offset=0&count=false&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee records.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get a list of all of the non-employees.<br>\n  2. The user is an account manager, in which case they can get a list of the non-employees that they manage."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "72fbef4a-1cda-4fd2-b69c-05846575e631",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-records?limit=250&offset=0&count=false&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee records.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get a list of all of the non-employees.<br>\n  2. The user is an account manager, in which case they can get a list of the non-employees that they manage."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "6f05c605-5e81-46f7-add3-b3e9bbcc31ca",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-records?limit=250&offset=0&count=false&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee records.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get a list of all of the non-employees.<br>\n  2. The user is an account manager, in which case they can get a list of the non-employees that they manage."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Multiple Non-Employee Records",
					"id": "2c1ca75d-23b7-4a03-901b-4c4f28479530",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/non-employee-records/bulk-delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-records",
								"bulk-delete"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This request will delete multiple non-employee records based on the non-employee ids provided.<br><br> Requires role context of `idn:nesr:delete`"
					},
					"response": [
						{
							"id": "04f82beb-e559-4b06-96bf-27b9bcde5612",
							"name": "No content - indicates the request was successful but there is no content to be returned in the response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/bulk-delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										"bulk-delete"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will delete multiple non-employee records based on the non-employee ids provided.<br><br> Requires role context of `idn:nesr:delete`"
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b1936025-22d1-41b6-9dd0-2cd493a37627",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/bulk-delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										"bulk-delete"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will delete multiple non-employee records based on the non-employee ids provided.<br><br> Requires role context of `idn:nesr:delete`"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "01964097-b877-4f57-90dd-903e9d8da191",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/bulk-delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										"bulk-delete"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will delete multiple non-employee records based on the non-employee ids provided.<br><br> Requires role context of `idn:nesr:delete`"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "7830927d-7788-4d13-be1e-78d3fa0a5c67",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/bulk-delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										"bulk-delete"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will delete multiple non-employee records based on the non-employee ids provided.<br><br> Requires role context of `idn:nesr:delete`"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "c41346f4-36a5-4312-ac12-5eb176264a33",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/bulk-delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										"bulk-delete"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will delete multiple non-employee records based on the non-employee ids provided.<br><br> Requires role context of `idn:nesr:delete`"
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "3cf8356f-331a-418e-b8eb-1b00456eb026",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-records/bulk-delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-records",
										"bulk-delete"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will delete multiple non-employee records based on the non-employee ids provided.<br><br> Requires role context of `idn:nesr:delete`"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "fc735f4b-83b9-44a9-b0b9-47618feebd0b"
		},
		{
			"name": "non-employee-requests",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a Non-Employee Request",
							"id": "cc08b921-3a2f-4abe-9124-a3c6c9e63223",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Non-Employee request id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a non-employee request.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in this case the user can get the non-employee request for any user.<br>\n  2. The user must be the owner of the non-employee request."
							},
							"response": [
								{
									"id": "159b8737-d81f-4cc6-8726-ca485d4fc71e",
									"name": "Non-Employee request object.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee request id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee request.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in this case the user can get the non-employee request for any user.<br>\n  2. The user must be the owner of the non-employee request."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"name\": \"Retail\",\n  \"description\": \"Source description\",\n  \"accountName\": \"william.smith\",\n  \"firstName\": \"William\",\n  \"lastName\": \"Smith\",\n  \"email\": \"william.smith@example.com\",\n  \"phone\": \"5555555555\",\n  \"manager\": \"jane.doe\",\n  \"nonEmployeeSource\": {\n    \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n    \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"Retail\",\n    \"description\": \"Source description\"\n  },\n  \"data\": {\n    \"exercitation140\": \"dolor quis nulla in ut\"\n  },\n  \"approvalItems\": [\n    {\n      \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n      \"approver\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      },\n      \"accountName\": \"test.account\",\n      \"approvalStatus\": \"PENDING\",\n      \"approvalOrder\": 1,\n      \"comment\": \"cupidatat commodo ad\",\n      \"modified\": \"2019-08-23T18:52:59.162Z\",\n      \"created\": \"2019-08-23T18:40:35.772Z\"\n    },\n    {\n      \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n      \"approver\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      },\n      \"accountName\": \"test.account\",\n      \"approvalStatus\": \"PENDING\",\n      \"approvalOrder\": 1,\n      \"comment\": \"Excepteur deserunt\",\n      \"modified\": \"2019-08-23T18:52:59.162Z\",\n      \"created\": \"2019-08-23T18:40:35.772Z\"\n    }\n  ],\n  \"approvalStatus\": \"CANCELLED\",\n  \"comment\": \"nostrud aliquip\",\n  \"completionDate\": \"2020-03-24T11:11:41.139-05:00\",\n  \"startDate\": \"2020-03-24T00:00:00-05:00\",\n  \"endDate\": \"2021-03-25T00:00:00-05:00\",\n  \"modified\": \"2020-03-24T11:11:41.139-05:00\",\n  \"created\": \"2020-03-24T11:11:41.139-05:00\"\n}"
								},
								{
									"id": "59d0aca3-6ec3-40bf-99a2-6c0d5537035e",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee request id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee request.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in this case the user can get the non-employee request for any user.<br>\n  2. The user must be the owner of the non-employee request."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "89376998-5325-451b-9e02-8f734357e6a2",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee request id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee request.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in this case the user can get the non-employee request for any user.<br>\n  2. The user must be the owner of the non-employee request."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "3e3b273f-6b14-4712-90e6-530578c148df",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee request id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee request.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in this case the user can get the non-employee request for any user.<br>\n  2. The user must be the owner of the non-employee request."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "0a29bece-78a9-45ee-83ef-7e335b57c08a",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee request id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee request.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in this case the user can get the non-employee request for any user.<br>\n  2. The user must be the owner of the non-employee request."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "5cc5799e-683b-42a0-bde5-40bf89db99d2",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee request id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee request.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in this case the user can get the non-employee request for any user.<br>\n  2. The user must be the owner of the non-employee request."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "001533fa-d436-450b-af08-0d8bdc82c1b3",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee request id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee request.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in this case the user can get the non-employee request for any user.<br>\n  2. The user must be the owner of the non-employee request."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Non-Employee Request",
							"id": "e0f292e2-bd25-4838-b75f-0f76ad18f6c8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Non-Employee request id in the UUID format"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will delete a non-employee request.<br><br> \nRequires role context of `idn:nesr:delete`"
							},
							"response": [
								{
									"id": "2dcfd493-de17-4381-bc8a-2e1cd3a810f5",
									"name": "No content - indicates the request was successful but there is no content to be returned in the response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Non-Employee request id in the UUID format"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee request.<br><br> \nRequires role context of `idn:nesr:delete`"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "433e651e-78f8-4667-b3d9-d0c85c6ffacf",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Non-Employee request id in the UUID format"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee request.<br><br> \nRequires role context of `idn:nesr:delete`"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "8dba1d36-5854-4c6a-95dd-d8532080cc32",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Non-Employee request id in the UUID format"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee request.<br><br> \nRequires role context of `idn:nesr:delete`"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "317891a6-ba0d-46e8-b19c-ed2a56066b61",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Non-Employee request id in the UUID format"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee request.<br><br> \nRequires role context of `idn:nesr:delete`"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "92f03e7e-0bdb-4d64-960d-99abfcd14e7d",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Non-Employee request id in the UUID format"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee request.<br><br> \nRequires role context of `idn:nesr:delete`"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "4b52717b-9495-4dbe-9c22-7b03e19fe857",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Non-Employee request id in the UUID format"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee request.<br><br> \nRequires role context of `idn:nesr:delete`"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "f7f3de77-ca71-4503-a548-163321f5f257",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-requests/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-requests",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Non-Employee request id in the UUID format"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee request.<br><br> \nRequires role context of `idn:nesr:delete`"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "38401944-371e-4f9c-8164-0577cfca7b7e"
				},
				{
					"name": "Create Non-Employee Request",
					"id": "765e4a00-cb98-4344-a74c-5fbbd1f0cad9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/non-employee-requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-requests"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This request will create a non-employee request and notify the approver.<br><br> Requires role context of `idn:nesr:create` or the user must own the source."
					},
					"response": [
						{
							"id": "fc9c6417-a9b1-423d-98ce-10d327a076e1",
							"name": "Non-Employee request creation object",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee request and notify the approver.<br><br> Requires role context of `idn:nesr:create` or the user must own the source."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"name\": \"Retail\",\n  \"description\": \"Source description\",\n  \"accountName\": \"william.smith\",\n  \"firstName\": \"William\",\n  \"lastName\": \"Smith\",\n  \"email\": \"william.smith@example.com\",\n  \"phone\": \"5555555555\",\n  \"manager\": \"jane.doe\",\n  \"nonEmployeeSource\": {\n    \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n    \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"Retail\",\n    \"description\": \"Source description\"\n  },\n  \"data\": {\n    \"exercitation140\": \"dolor quis nulla in ut\"\n  },\n  \"approvalItems\": [\n    {\n      \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n      \"approver\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      },\n      \"accountName\": \"test.account\",\n      \"approvalStatus\": \"PENDING\",\n      \"approvalOrder\": 1,\n      \"comment\": \"cupidatat commodo ad\",\n      \"modified\": \"2019-08-23T18:52:59.162Z\",\n      \"created\": \"2019-08-23T18:40:35.772Z\"\n    },\n    {\n      \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n      \"approver\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      },\n      \"accountName\": \"test.account\",\n      \"approvalStatus\": \"PENDING\",\n      \"approvalOrder\": 1,\n      \"comment\": \"Excepteur deserunt\",\n      \"modified\": \"2019-08-23T18:52:59.162Z\",\n      \"created\": \"2019-08-23T18:40:35.772Z\"\n    }\n  ],\n  \"approvalStatus\": \"CANCELLED\",\n  \"comment\": \"nostrud aliquip\",\n  \"completionDate\": \"2020-03-24T11:11:41.139-05:00\",\n  \"startDate\": \"2020-03-24T00:00:00-05:00\",\n  \"endDate\": \"2021-03-25T00:00:00-05:00\",\n  \"modified\": \"2020-03-24T11:11:41.139-05:00\",\n  \"created\": \"2020-03-24T11:11:41.139-05:00\"\n}"
						},
						{
							"id": "7174d7ca-6a2e-409f-a0b1-e972e1e40bb0",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee request and notify the approver.<br><br> Requires role context of `idn:nesr:create` or the user must own the source."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en\",\n      \"localeOrigin\": \"REQUEST\",\n      \"text\": \"firstName is required; accountName is required;\"\n    }\n  ]\n}"
						},
						{
							"id": "883991f1-122e-41f3-9d1c-c718254c7810",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee request and notify the approver.<br><br> Requires role context of `idn:nesr:create` or the user must own the source."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "c425cfd5-f315-45d8-8f73-ca110d52578c",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee request and notify the approver.<br><br> Requires role context of `idn:nesr:create` or the user must own the source."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "f4e898ab-4cce-4e3f-bfa6-d33e91cd7061",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee request and notify the approver.<br><br> Requires role context of `idn:nesr:create` or the user must own the source."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "7fd74f7e-031e-481a-895e-82e8ae968a9f",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"manager\": \"<string>\",\n  \"sourceId\": \"<string>\",\n  \"startDate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"data\": {\n    \"ipsumf\": \"<string>\",\n    \"nisi_08_\": \"<string>\",\n    \"dolor_eb8\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee request and notify the approver.<br><br> Requires role context of `idn:nesr:create` or the user must own the source."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List Non-Employee Requests",
					"id": "906cea48-4e40-43bb-ae74-ee5fba31b22c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/non-employee-requests?limit=250&offset=0&count=false&requested-for=<string>&sorters=<comma-separated>&filters=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-requests"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate**"
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a list of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list non-employee requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the non-employee requests in the source(s) he or she manages."
					},
					"response": [
						{
							"id": "5a9e2c20-ca3b-4553-8180-eef0787f15ba",
							"name": "List of non-employee request objects.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests?limit=250&offset=0&count=false&requested-for=<string>&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list non-employee requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the non-employee requests in the source(s) he or she manages."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n    \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"Retail\",\n    \"description\": \"Source description\",\n    \"accountName\": \"william.smith\",\n    \"firstName\": \"William\",\n    \"lastName\": \"Smith\",\n    \"email\": \"william.smith@example.com\",\n    \"phone\": \"5555555555\",\n    \"manager\": \"jane.doe\",\n    \"nonEmployeeSource\": {\n      \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n      \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"Retail\",\n      \"description\": \"Source description\"\n    },\n    \"data\": {\n      \"nostrud_971\": \"fugiat exercitation dolor laboris sint\",\n      \"elit9\": \"consectetur\",\n      \"in_79\": \"Duis dolore occaecat\",\n      \"eiusmodcf\": \"Excepteur ad pariatur \"\n    },\n    \"approvalItems\": [\n      {\n        \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n        \"approver\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\"\n        },\n        \"accountName\": \"test.account\",\n        \"approvalStatus\": \"APPROVED\",\n        \"approvalOrder\": 1,\n        \"comment\": \"anim commodo\",\n        \"modified\": \"2019-08-23T18:52:59.162Z\",\n        \"created\": \"2019-08-23T18:40:35.772Z\"\n      },\n      {\n        \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n        \"approver\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\"\n        },\n        \"accountName\": \"test.account\",\n        \"approvalStatus\": \"REJECTED\",\n        \"approvalOrder\": 1,\n        \"comment\": \"cillum\",\n        \"modified\": \"2019-08-23T18:52:59.162Z\",\n        \"created\": \"2019-08-23T18:40:35.772Z\"\n      }\n    ],\n    \"approvalStatus\": \"PENDING\",\n    \"comment\": \"Lorem laborum amet consequat\",\n    \"completionDate\": \"2020-03-24T11:11:41.139-05:00\",\n    \"startDate\": \"2020-03-24T00:00:00-05:00\",\n    \"endDate\": \"2021-03-25T00:00:00-05:00\",\n    \"modified\": \"2020-03-24T11:11:41.139-05:00\",\n    \"created\": \"2020-03-24T11:11:41.139-05:00\"\n  },\n  {\n    \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n    \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"Retail\",\n    \"description\": \"Source description\",\n    \"accountName\": \"william.smith\",\n    \"firstName\": \"William\",\n    \"lastName\": \"Smith\",\n    \"email\": \"william.smith@example.com\",\n    \"phone\": \"5555555555\",\n    \"manager\": \"jane.doe\",\n    \"nonEmployeeSource\": {\n      \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n      \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"Retail\",\n      \"description\": \"Source description\"\n    },\n    \"data\": {\n      \"amet_f\": \"sit ad ex\",\n      \"laboris0\": \"enim sed ullamco\",\n      \"labore_de\": \"reprehenderit in\"\n    },\n    \"approvalItems\": [\n      {\n        \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n        \"approver\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\"\n        },\n        \"accountName\": \"test.account\",\n        \"approvalStatus\": \"CANCELLED\",\n        \"approvalOrder\": 1,\n        \"comment\": \"deserunt nostrud amet Duis\",\n        \"modified\": \"2019-08-23T18:52:59.162Z\",\n        \"created\": \"2019-08-23T18:40:35.772Z\"\n      },\n      {\n        \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n        \"approver\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"5168015d32f890ca15812c9180835d2e\"\n        },\n        \"accountName\": \"test.account\",\n        \"approvalStatus\": \"PENDING\",\n        \"approvalOrder\": 1,\n        \"comment\": \"commodo dolor\",\n        \"modified\": \"2019-08-23T18:52:59.162Z\",\n        \"created\": \"2019-08-23T18:40:35.772Z\"\n      }\n    ],\n    \"approvalStatus\": \"PENDING\",\n    \"comment\": \"consectetur mollit\",\n    \"completionDate\": \"2020-03-24T11:11:41.139-05:00\",\n    \"startDate\": \"2020-03-24T00:00:00-05:00\",\n    \"endDate\": \"2021-03-25T00:00:00-05:00\",\n    \"modified\": \"2020-03-24T11:11:41.139-05:00\",\n    \"created\": \"2020-03-24T11:11:41.139-05:00\"\n  }\n]"
						},
						{
							"id": "d8b95e54-228f-4f03-9538-1b145394e1e1",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests?limit=250&offset=0&count=false&requested-for=<string>&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list non-employee requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "d52093c1-9eaf-425e-beae-656bee43cbdc",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests?limit=250&offset=0&count=false&requested-for=<string>&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list non-employee requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "ea12b5a4-0e8a-4a57-a86b-06c7e3236a0a",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests?limit=250&offset=0&count=false&requested-for=<string>&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list non-employee requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "dbfccdb6-1abe-4883-9903-0f16b8d04d1e",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests?limit=250&offset=0&count=false&requested-for=<string>&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list non-employee requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "d6b15f8b-c41a-4c50-8a20-6c4dc0a9c088",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests?limit=250&offset=0&count=false&requested-for=<string>&sorters=<comma-separated>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate**"
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **sourceId**: *eq* <br/><br/> *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list non-employee requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Summary of Non-Employee Requests",
					"id": "ba8dce6b-c33d-429c-8796-98fbda719273",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/non-employee-requests/summary/:requested-for",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-requests",
								"summary",
								":requested-for"
							],
							"variable": [
								{
									"key": "requested-for",
									"value": "<uuid (if user is Org Admin)>",
									"description": "(Required) The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This request will retrieve a summary of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a summary of the non-employee requests in the source(s) he or she manages."
					},
					"response": [
						{
							"id": "a19b4d0e-eb7f-4ea4-ac5a-52797cbcd9d8",
							"name": "Non-Employee request summary object.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<uuid (if user is Org Admin)>",
											"description": "(Required) The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a summary of the non-employee requests in the source(s) he or she manages."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"approved\": -90390224.77491999,\n  \"rejected\": -75439592.33978713,\n  \"pending\": 7999560.483102024,\n  \"nonEmployeeCount\": -22110628.703315347\n}"
						},
						{
							"id": "dbabaa40-be16-4792-bc54-00dc7eaebb1c",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<uuid (if user is Org Admin)>",
											"description": "(Required) The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a summary of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "32df9320-a7a1-4adb-92ee-451bd224b6d7",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<uuid (if user is Org Admin)>",
											"description": "(Required) The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a summary of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "d112f814-722c-42e6-bb56-7948a5b3c6ff",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<uuid (if user is Org Admin)>",
											"description": "(Required) The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a summary of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "2b1023a0-8da1-480e-be78-74bb6c6a13cc",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<uuid (if user is Org Admin)>",
											"description": "(Required) The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a summary of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "2eb4f73f-4e43-4b1b-9343-05891783599b",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-requests/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-requests",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<uuid (if user is Org Admin)>",
											"description": "(Required) The identity (UUID) of the non-employee account manager for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a summary of the non-employee requests in the source(s) he or she manages."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "9a73213d-3d45-4a61-bcdf-c08723ceee37"
		},
		{
			"name": "non-employee-sources",
			"item": [
				{
					"name": "{source Id}",
					"item": [
						{
							"name": "schema-attributes",
							"item": [
								{
									"name": "{attribute Id}",
									"item": [
										{
											"name": "Get Schema Attribute Non-Employee Source",
											"id": "c4dbd185-36e6-4840-8d5f-f8f5abebd69a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes",
														":attributeId"
													],
													"variable": [
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) The Schema Attribute Id (UUID)"
														},
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API gets a schema attribute by Id for the specified Non-Employee SourceId.<br><br> Requires role context of `idn:nesr:read` or the user must be an account manager of the source."
											},
											"response": [
												{
													"id": "1f9d076a-df39-4fbc-a021-8e87e3816ec8",
													"name": "The Schema Attribute",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API gets a schema attribute by Id for the specified Non-Employee SourceId.<br><br> Requires role context of `idn:nesr:read` or the user must be an account manager of the source."
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"TEXT\",\n  \"technicalName\": \"account.name\",\n  \"label\": \"Account Name\",\n  \"id\": \"ac110005-7156-1150-8171-5b292e3e0084\",\n  \"system\": true,\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\",\n  \"helpText\": \"The unique identifier for the account\",\n  \"placeholder\": \"Enter a unique user name for this account.\",\n  \"required\": true\n}"
												},
												{
													"id": "2858cd81-d70a-4a75-9dfd-9c14c823a61d",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API gets a schema attribute by Id for the specified Non-Employee SourceId.<br><br> Requires role context of `idn:nesr:read` or the user must be an account manager of the source."
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "48a5832b-6a89-4958-a97f-c652e929b31f",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API gets a schema attribute by Id for the specified Non-Employee SourceId.<br><br> Requires role context of `idn:nesr:read` or the user must be an account manager of the source."
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "dd470a52-e4a4-4eb0-a531-13326a074ae4",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API gets a schema attribute by Id for the specified Non-Employee SourceId.<br><br> Requires role context of `idn:nesr:read` or the user must be an account manager of the source."
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "8539ef70-4eb7-479a-86fe-23c6456bc0bf",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API gets a schema attribute by Id for the specified Non-Employee SourceId.<br><br> Requires role context of `idn:nesr:read` or the user must be an account manager of the source."
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Patch a Schema Attribute for Non-Employee Source",
											"id": "dcb1ea41-f5e0-43cd-a63c-63512d287b9e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json-patch+json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[object Object],[object Object]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes",
														":attributeId"
													],
													"variable": [
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) The Schema Attribute Id (UUID)"
														},
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point patches a specific schema attribute for a non-employee SourceId.<br><br>\nRequires role context of `idn:nesr:update`\n"
											},
											"response": [
												{
													"id": "283c02b7-51b4-446c-8cf8-7ba9de1a40b4",
													"name": "The Schema Attribute was successfully patched.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point patches a specific schema attribute for a non-employee SourceId.<br><br>\nRequires role context of `idn:nesr:update`\n"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"TEXT\",\n  \"technicalName\": \"account.name\",\n  \"label\": \"Account Name\",\n  \"id\": \"ac110005-7156-1150-8171-5b292e3e0084\",\n  \"system\": true,\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\",\n  \"helpText\": \"The unique identifier for the account\",\n  \"placeholder\": \"Enter a unique user name for this account.\",\n  \"required\": true\n}"
												},
												{
													"id": "0fd37d76-03d6-4e82-afde-016530ee1423",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point patches a specific schema attribute for a non-employee SourceId.<br><br>\nRequires role context of `idn:nesr:update`\n"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "fcf63219-fc32-4b0d-abdf-5c1fbb0a4e8b",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point patches a specific schema attribute for a non-employee SourceId.<br><br>\nRequires role context of `idn:nesr:update`\n"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "fd431cd5-13d9-42db-b80c-529eaf73d6e0",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point patches a specific schema attribute for a non-employee SourceId.<br><br>\nRequires role context of `idn:nesr:update`\n"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "2dd0a3d2-7884-45bd-9329-431f925adafc",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point patches a specific schema attribute for a non-employee SourceId.<br><br>\nRequires role context of `idn:nesr:update`\n"
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "74c16009-3ff3-4f0c-ac9f-3aefb1ad9d65",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point patches a specific schema attribute for a non-employee SourceId.<br><br>\nRequires role context of `idn:nesr:update`\n"
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "3f91078b-b4d7-425d-b653-113bee8744d9",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point patches a specific schema attribute for a non-employee SourceId.<br><br>\nRequires role context of `idn:nesr:update`\n"
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete a Schema Attribute for Non-Employee Source",
											"id": "afe463ff-3017-4c40-9500-b8f1cd551e0d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes",
														":attributeId"
													],
													"variable": [
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) The Schema Attribute Id (UUID)"
														},
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point deletes a specific schema attribute for a non-employee source.<br><br>\nRequires role context of `idn:nesr:delete`\n"
											},
											"response": [
												{
													"id": "9cfd4fd8-055d-4315-8c01-02000d0dc7ff",
													"name": "The Schema Attribute was successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point deletes a specific schema attribute for a non-employee source.<br><br>\nRequires role context of `idn:nesr:delete`\n"
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "93e667a3-d400-41ae-a668-d8baf27c0dd0",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point deletes a specific schema attribute for a non-employee source.<br><br>\nRequires role context of `idn:nesr:delete`\n"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "f5919702-c8f7-49a8-9171-b56b83a3e261",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point deletes a specific schema attribute for a non-employee source.<br><br>\nRequires role context of `idn:nesr:delete`\n"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "d566db88-5baa-4c2f-b291-e85e417ae8b1",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point deletes a specific schema attribute for a non-employee source.<br><br>\nRequires role context of `idn:nesr:delete`\n"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "2e3b8793-00a8-478e-9429-50396300c0f0",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point deletes a specific schema attribute for a non-employee source.<br><br>\nRequires role context of `idn:nesr:delete`\n"
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "394c5b7f-c6b2-4b55-a60d-99f47d514ae6",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes/:attributeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"non-employee-sources",
																":sourceId",
																"schema-attributes",
																":attributeId"
															],
															"variable": [
																{
																	"key": "attributeId",
																	"value": "<string>",
																	"description": "(Required) The Schema Attribute Id (UUID)"
																},
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point deletes a specific schema attribute for a non-employee source.<br><br>\nRequires role context of `idn:nesr:delete`\n"
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "cfa9102e-def5-4292-9f83-950017780eb9"
								},
								{
									"name": "List Schema Attributes Non-Employee Source",
									"id": "826d2610-2a87-4e28-91bd-025c669a7747",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId",
												"schema-attributes"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API gets the list of schema attributes for the specified Non-Employee SourceId. There are 8 mandatory attributes added to each new Non-Employee Source automatically. Additionaly, user can add up to 10 custom attributes. This interface returns all the mandatory attributes followed by any custom attributes. At most, a total of 18 attributes will be returned.<br><br>\nRequires role context of `idn:nesr:read` or the user must be an account manager of the source."
									},
									"response": [
										{
											"id": "8d7d22d8-4467-4ced-9d96-f1b8f7ddee14",
											"name": "A list of Schema Attributes",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API gets the list of schema attributes for the specified Non-Employee SourceId. There are 8 mandatory attributes added to each new Non-Employee Source automatically. Additionaly, user can add up to 10 custom attributes. This interface returns all the mandatory attributes followed by any custom attributes. At most, a total of 18 attributes will be returned.<br><br>\nRequires role context of `idn:nesr:read` or the user must be an account manager of the source."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"type\": \"DATE\",\n    \"technicalName\": \"account.name\",\n    \"label\": \"Account Name\",\n    \"id\": \"ac110005-7156-1150-8171-5b292e3e0084\",\n    \"system\": true,\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\",\n    \"helpText\": \"The unique identifier for the account\",\n    \"placeholder\": \"Enter a unique user name for this account.\",\n    \"required\": true\n  },\n  {\n    \"type\": \"TEXT\",\n    \"technicalName\": \"account.name\",\n    \"label\": \"Account Name\",\n    \"id\": \"ac110005-7156-1150-8171-5b292e3e0084\",\n    \"system\": true,\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\",\n    \"helpText\": \"The unique identifier for the account\",\n    \"placeholder\": \"Enter a unique user name for this account.\",\n    \"required\": true\n  }\n]"
										},
										{
											"id": "c08cf463-8c1f-4291-b848-07bf5e13cbfa",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API gets the list of schema attributes for the specified Non-Employee SourceId. There are 8 mandatory attributes added to each new Non-Employee Source automatically. Additionaly, user can add up to 10 custom attributes. This interface returns all the mandatory attributes followed by any custom attributes. At most, a total of 18 attributes will be returned.<br><br>\nRequires role context of `idn:nesr:read` or the user must be an account manager of the source."
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "defbaed3-fc51-4c03-82d0-0d54c2427a79",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API gets the list of schema attributes for the specified Non-Employee SourceId. There are 8 mandatory attributes added to each new Non-Employee Source automatically. Additionaly, user can add up to 10 custom attributes. This interface returns all the mandatory attributes followed by any custom attributes. At most, a total of 18 attributes will be returned.<br><br>\nRequires role context of `idn:nesr:read` or the user must be an account manager of the source."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "ba54e210-2890-4bcc-901b-d75330a21f80",
											"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API gets the list of schema attributes for the specified Non-Employee SourceId. There are 8 mandatory attributes added to each new Non-Employee Source automatically. Additionaly, user can add up to 10 custom attributes. This interface returns all the mandatory attributes followed by any custom attributes. At most, a total of 18 attributes will be returned.<br><br>\nRequires role context of `idn:nesr:read` or the user must be an account manager of the source."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
										},
										{
											"id": "dd1cd10f-9503-49f6-81df-08a980caf9d1",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API gets the list of schema attributes for the specified Non-Employee SourceId. There are 8 mandatory attributes added to each new Non-Employee Source automatically. Additionaly, user can add up to 10 custom attributes. This interface returns all the mandatory attributes followed by any custom attributes. At most, a total of 18 attributes will be returned.<br><br>\nRequires role context of `idn:nesr:read` or the user must be an account manager of the source."
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "0ae540e8-4201-4657-9dac-f7ae9c4073ac",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API gets the list of schema attributes for the specified Non-Employee SourceId. There are 8 mandatory attributes added to each new Non-Employee Source automatically. Additionaly, user can add up to 10 custom attributes. This interface returns all the mandatory attributes followed by any custom attributes. At most, a total of 18 attributes will be returned.<br><br>\nRequires role context of `idn:nesr:read` or the user must be an account manager of the source."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a new Schema Attribute for Non-Employee Source",
									"id": "29162b0a-1d7e-42a1-818d-a5316ee7e0d7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"label\": \"<string>\",\n  \"helpText\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"required\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId",
												"schema-attributes"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API creates a new schema attribute for Non-Employee Source. The schema technical name must be unique in the source. Attempts to create a schema attribute with an existing name will result in a \"400.1.409 Reference conflict\" response. At most, 10 custom attributes can be created per schema. Attempts to create more than 10 will result in a \"400.1.4 Limit violation\" response.<br><br>\nRequires role context of `idn:nesr:create`"
									},
									"response": [
										{
											"id": "59485b6a-fd79-4459-8f71-0ea0b48d82ea",
											"name": "Schema Attribute created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"label\": \"<string>\",\n  \"helpText\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"required\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new schema attribute for Non-Employee Source. The schema technical name must be unique in the source. Attempts to create a schema attribute with an existing name will result in a \"400.1.409 Reference conflict\" response. At most, 10 custom attributes can be created per schema. Attempts to create more than 10 will result in a \"400.1.4 Limit violation\" response.<br><br>\nRequires role context of `idn:nesr:create`"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"TEXT\",\n  \"technicalName\": \"account.name\",\n  \"label\": \"Account Name\",\n  \"id\": \"ac110005-7156-1150-8171-5b292e3e0084\",\n  \"system\": true,\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\",\n  \"helpText\": \"The unique identifier for the account\",\n  \"placeholder\": \"Enter a unique user name for this account.\",\n  \"required\": true\n}"
										},
										{
											"id": "c2fde99f-48c1-4177-8f70-fdb77af67c73",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"label\": \"<string>\",\n  \"helpText\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"required\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new schema attribute for Non-Employee Source. The schema technical name must be unique in the source. Attempts to create a schema attribute with an existing name will result in a \"400.1.409 Reference conflict\" response. At most, 10 custom attributes can be created per schema. Attempts to create more than 10 will result in a \"400.1.4 Limit violation\" response.<br><br>\nRequires role context of `idn:nesr:create`"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "9f390cb8-73b1-4012-9e76-3f5482e64989",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"label\": \"<string>\",\n  \"helpText\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"required\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new schema attribute for Non-Employee Source. The schema technical name must be unique in the source. Attempts to create a schema attribute with an existing name will result in a \"400.1.409 Reference conflict\" response. At most, 10 custom attributes can be created per schema. Attempts to create more than 10 will result in a \"400.1.4 Limit violation\" response.<br><br>\nRequires role context of `idn:nesr:create`"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "38eca9dd-a031-4936-a224-897d49253799",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"label\": \"<string>\",\n  \"helpText\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"required\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new schema attribute for Non-Employee Source. The schema technical name must be unique in the source. Attempts to create a schema attribute with an existing name will result in a \"400.1.409 Reference conflict\" response. At most, 10 custom attributes can be created per schema. Attempts to create more than 10 will result in a \"400.1.4 Limit violation\" response.<br><br>\nRequires role context of `idn:nesr:create`"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "20db6252-4150-44e3-b780-1e683f06b201",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"label\": \"<string>\",\n  \"helpText\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"required\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new schema attribute for Non-Employee Source. The schema technical name must be unique in the source. Attempts to create a schema attribute with an existing name will result in a \"400.1.409 Reference conflict\" response. At most, 10 custom attributes can be created per schema. Attempts to create more than 10 will result in a \"400.1.4 Limit violation\" response.<br><br>\nRequires role context of `idn:nesr:create`"
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "ddff4496-a1b4-401b-8e05-f1d9db4eec9a",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"technicalName\": \"<string>\",\n  \"label\": \"<string>\",\n  \"helpText\": \"<string>\",\n  \"placeholder\": \"<string>\",\n  \"required\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API creates a new schema attribute for Non-Employee Source. The schema technical name must be unique in the source. Attempts to create a schema attribute with an existing name will result in a \"400.1.409 Reference conflict\" response. At most, 10 custom attributes can be created per schema. Attempts to create more than 10 will result in a \"400.1.4 Limit violation\" response.<br><br>\nRequires role context of `idn:nesr:create`"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete all custom schema attributes for Non-Employee Source",
									"id": "f79e2e79-1afb-4d05-a5d1-401e8c03fc89",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId",
												"schema-attributes"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point deletes all custom schema attributes for a non-employee source.<br><br> Requires role context of `idn:nesr:delete`"
									},
									"response": [
										{
											"id": "2e603ec3-d4d2-4473-9f87-7e1e2d10eeb6",
											"name": "All custon Schema Attributes were successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point deletes all custom schema attributes for a non-employee source.<br><br> Requires role context of `idn:nesr:delete`"
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "44773ef2-b20f-4c32-a01c-4b5595c5d074",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point deletes all custom schema attributes for a non-employee source.<br><br> Requires role context of `idn:nesr:delete`"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "5b24fffb-bed4-4d3b-9d54-50d01d704bf2",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point deletes all custom schema attributes for a non-employee source.<br><br> Requires role context of `idn:nesr:delete`"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "6fa3a153-c083-4f17-a8a9-0f761814d9d2",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point deletes all custom schema attributes for a non-employee source.<br><br> Requires role context of `idn:nesr:delete`"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "4a66d598-37da-411b-ae65-908be1b73b15",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point deletes all custom schema attributes for a non-employee source.<br><br> Requires role context of `idn:nesr:delete`"
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "973fb993-6d63-4f8a-9db3-8a0818d985cb",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:sourceId/schema-attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":sourceId",
														"schema-attributes"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point deletes all custom schema attributes for a non-employee source.<br><br> Requires role context of `idn:nesr:delete`"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "3cfd4c83-0877-45ae-9ff0-a5358c28b3c3"
						},
						{
							"name": "Get a Non-Employee Source",
							"id": "5fdbe307-115a-46d9-84f2-9eb93336558c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources",
										":sourceId"
									],
									"variable": [
										{
											"key": "sourceId",
											"value": "<string>",
											"description": "(Required) Source Id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a non-employee source.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request any source.<br>\n  2. The current user is an account manager, in which case the user can only request sources that they own."
							},
							"response": [
								{
									"id": "c360ab61-37ed-42db-88cf-bf9a1cb67ed5",
									"name": "Non-Employee source object.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee source.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request any source.<br>\n  2. The current user is an account manager, in which case the user can only request sources that they own."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"name\": \"Retail\",\n  \"description\": \"Source description\",\n  \"approvers\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    }\n  ],\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\"\n}"
								},
								{
									"id": "1b7f9b6d-5edf-4c1b-9331-577387ea9ac1",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee source.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request any source.<br>\n  2. The current user is an account manager, in which case the user can only request sources that they own."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "f0dc5e31-3dab-4783-be27-98648a75309f",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee source.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request any source.<br>\n  2. The current user is an account manager, in which case the user can only request sources that they own."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "7783fe0a-b797-4560-af1a-41a0ec83a737",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee source.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request any source.<br>\n  2. The current user is an account manager, in which case the user can only request sources that they own."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "97a7f792-eb9d-4a15-88d8-69d470b7ffb1",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee source.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request any source.<br>\n  2. The current user is an account manager, in which case the user can only request sources that they own."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "423268a6-0302-4b85-9b07-2a43061d6218",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a non-employee source.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request any source.<br>\n  2. The current user is an account manager, in which case the user can only request sources that they own."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Patch a Non-Employee Source",
							"id": "f1be6efa-2505-46d3-91f2-e2bb8ad81ccf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[object Object],[object Object]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources",
										":sourceId"
									],
									"variable": [
										{
											"key": "sourceId",
											"value": "<string>",
											"description": "(Required) Source Id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "patch a non-employee source. (partial update) <br/> Patchable field: **name, description, approvers, accountManagers**<br><br> Requires role context of `idn:nesr:update`."
							},
							"response": [
								{
									"id": "dee7c995-cbce-413c-9a8f-d659e6fbc86f",
									"name": "A patched non-employee source object.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "patch a non-employee source. (partial update) <br/> Patchable field: **name, description, approvers, accountManagers**<br><br> Requires role context of `idn:nesr:update`."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"name\": \"Retail\",\n  \"description\": \"Source description\",\n  \"approvers\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    }\n  ],\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\"\n}"
								},
								{
									"id": "4a36376f-d43e-422f-a77e-5f969690982b",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "patch a non-employee source. (partial update) <br/> Patchable field: **name, description, approvers, accountManagers**<br><br> Requires role context of `idn:nesr:update`."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "12ef695d-f1e5-4305-b2b4-282c0de498db",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "patch a non-employee source. (partial update) <br/> Patchable field: **name, description, approvers, accountManagers**<br><br> Requires role context of `idn:nesr:update`."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "e5ffbad0-d6aa-4a16-81e7-bb58f9d2e6fc",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "patch a non-employee source. (partial update) <br/> Patchable field: **name, description, approvers, accountManagers**<br><br> Requires role context of `idn:nesr:update`."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "556dde4b-17e6-4607-8863-477b9c0b10aa",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "patch a non-employee source. (partial update) <br/> Patchable field: **name, description, approvers, accountManagers**<br><br> Requires role context of `idn:nesr:update`."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "0d8c1923-6441-421d-a858-b030471cc63a",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "patch a non-employee source. (partial update) <br/> Patchable field: **name, description, approvers, accountManagers**<br><br> Requires role context of `idn:nesr:update`."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Non-Employee Source",
							"id": "0c3e595b-a501-493b-b3ea-81b6f530b701",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources",
										":sourceId"
									],
									"variable": [
										{
											"key": "sourceId",
											"value": "<string>",
											"description": "(Required) Source Id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will delete a non-employee source.<br><br> Requires role context of `idn:nesr:delete`."
							},
							"response": [
								{
									"id": "d897c1f5-be89-4821-a0aa-5e5d1aaaae75",
									"name": "No content - indicates the request was successful but there is no content to be returned in the response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee source.<br><br> Requires role context of `idn:nesr:delete`."
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "645141e2-061a-4beb-ab86-4d79833564f0",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee source.<br><br> Requires role context of `idn:nesr:delete`."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "71ad8214-eed5-4a57-9833-faa05630d3e3",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee source.<br><br> Requires role context of `idn:nesr:delete`."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "7bd297b2-e15c-45ea-9ed1-9660f5aeef50",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee source.<br><br> Requires role context of `idn:nesr:delete`."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "3096e6e1-a014-44b7-a2c2-5690b374445e",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee source.<br><br> Requires role context of `idn:nesr:delete`."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "3af025d5-6830-4cd5-9cc4-15510befdf98",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:sourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":sourceId"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) Source Id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This request will delete a non-employee source.<br><br> Requires role context of `idn:nesr:delete`."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "061a8874-0d35-48f6-be1d-923b8591d077"
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "non-employee-bulk-upload",
							"item": [
								{
									"name": "Imports, or Updates, Non-Employee Records",
									"id": "bcf4da72-fe1a-4832-8f17-95ff25b42f22",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "data",
													"value": "<base64>",
													"type": "text",
													"description": "(Required) "
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"non-employee-bulk-upload"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This post will import, or update, Non-Employee records found in the CSV.<br><br> Requires role context of `idn:nesr:create`"
									},
									"response": [
										{
											"id": "48a70fc4-5630-4d27-a548-129af737867e",
											"name": "The CSV was accepted to be bulk inserted now or at a later time.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "data",
															"value": "<base64>",
															"type": "text",
															"description": "(Required) "
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source Id (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This post will import, or update, Non-Employee records found in the CSV.<br><br> Requires role context of `idn:nesr:create`"
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"2c91808568c529c60168cca6f90cffff\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"created\": \"2019-08-23T18:52:59.162Z\",\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"status\": \"PENDING\"\n}"
										},
										{
											"id": "b289515f-8409-4c36-8c01-ee1c004b3f43",
											"name": "Client Error - Returned if the request body is invalid.\nThe response body will contain the list of specific errors with one on each line.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "data",
															"value": "<base64>",
															"type": "text",
															"description": "(Required) "
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source Id (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This post will import, or update, Non-Employee records found in the CSV.<br><br> Requires role context of `idn:nesr:create`"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "fc9fb70d-1c69-4535-b643-3d92dd21c376",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "data",
															"value": "<base64>",
															"type": "text",
															"description": "(Required) "
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source Id (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This post will import, or update, Non-Employee records found in the CSV.<br><br> Requires role context of `idn:nesr:create`"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "76c174b1-182e-4031-a2d9-a47d749389f4",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "data",
															"value": "<base64>",
															"type": "text",
															"description": "(Required) "
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source Id (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This post will import, or update, Non-Employee records found in the CSV.<br><br> Requires role context of `idn:nesr:create`"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "7bf9cd62-789c-4318-bea6-8621fd5e17cf",
											"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "data",
															"value": "<base64>",
															"type": "text",
															"description": "(Required) "
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source Id (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This post will import, or update, Non-Employee records found in the CSV.<br><br> Requires role context of `idn:nesr:create`"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
										},
										{
											"id": "5f8e69a6-107d-416e-8576-db014e4db880",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "data",
															"value": "<base64>",
															"type": "text",
															"description": "(Required) "
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source Id (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This post will import, or update, Non-Employee records found in the CSV.<br><br> Requires role context of `idn:nesr:create`"
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "555f32d1-45a3-439d-b417-a39783b522d4",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "data",
															"value": "<base64>",
															"type": "text",
															"description": "(Required) "
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source Id (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This post will import, or update, Non-Employee records found in the CSV.<br><br> Requires role context of `idn:nesr:create`"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Obtain the status of bulk upload on the source",
									"id": "9eaea8c7-dcab-401d-8e0b-4152214faa17",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"non-employee-bulk-upload",
												"status"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source ID (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.<br><br>\nRequires role context of `idn:nesr:read`\n"
									},
									"response": [
										{
											"id": "c63ff545-cc4f-4a2f-9be8-13e6687039e1",
											"name": "Status of the newest bulk-upload job, if any.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload",
														"status"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source ID (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.<br><br>\nRequires role context of `idn:nesr:read`\n"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"PENDING\"\n}"
										},
										{
											"id": "8c33012d-bbbf-4f30-ab47-78f38725e7cc",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload",
														"status"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source ID (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.<br><br>\nRequires role context of `idn:nesr:read`\n"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "7cdf2874-7267-403e-8e51-c1bc7291357b",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload",
														"status"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source ID (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.<br><br>\nRequires role context of `idn:nesr:read`\n"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "a3bafc5d-1a26-4bdd-a0a8-e7bf681c1a66",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload",
														"status"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source ID (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.<br><br>\nRequires role context of `idn:nesr:read`\n"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "3378e2fa-1d9b-4894-960f-715618e37485",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload",
														"status"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source ID (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.<br><br>\nRequires role context of `idn:nesr:read`\n"
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "95d7beec-f1b2-4708-a285-2093faf825e5",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/non-employee-sources/:id/non-employee-bulk-upload/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"non-employee-sources",
														":id",
														"non-employee-bulk-upload",
														"status"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Source ID (UUID)"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.<br><br>\nRequires role context of `idn:nesr:read`\n"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "85aa20d4-9626-45d3-a10b-87f202666871"
						},
						{
							"name": "Exports Non-Employee Records to CSV",
							"id": "90ac7136-1ce6-4b51-bc0e-f817ed117e25",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/csv"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources/:id/non-employees/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources",
										":id",
										"non-employees",
										"download"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Source Id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This requests a CSV download for all non-employees from a provided source.<br><br> Requires role context of `idn:nesr:read`"
							},
							"response": [
								{
									"id": "3aee0862-5063-4a67-b826-1483e600e87d",
									"name": "Exported CSV",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/non-employees/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"non-employees",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a CSV download for all non-employees from a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/csv"
										}
									],
									"cookie": [],
									"body": "accountName,firstName,lastName,phone,email,manager,startDate,endDate\nJon.Smith, Jon, Smith, 555-555-5555, jon@jon.doe.nope.com, Jim Smith, 2020-04-05T08:00:00-10:00,2020-08-07T19:00:00-10:00\nWilliam.Chaffin, William, Chaffin, 555-555-5555, william@chaffins.nope.com, Bertram Chaffin, 2020-04-05T08:00:00-10:00,2020-08-07T19:00:00-10:00\n"
								},
								{
									"id": "0df65467-b564-4f5f-b7f8-0f6b056a57d8",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/non-employees/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"non-employees",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a CSV download for all non-employees from a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "22e04cb8-eb64-4a13-8d73-1f6f01f5cb4e",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/non-employees/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"non-employees",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a CSV download for all non-employees from a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "063879f2-4a9e-410e-bdfc-8c15f194b67d",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/non-employees/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"non-employees",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a CSV download for all non-employees from a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "3aa651bc-7e35-4276-af98-3b466b4ce8cd",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/non-employees/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"non-employees",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a CSV download for all non-employees from a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "29669ef6-3b1d-4ae6-93c3-972fb2023ffb",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/non-employees/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"non-employees",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a CSV download for all non-employees from a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "e8cd33bc-1aea-4b13-80b2-490f1559000c",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/non-employees/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"non-employees",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a CSV download for all non-employees from a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Exports Source Schema Template",
							"id": "9dc3f9aa-a5fa-4e4b-8af4-8ec446d490ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/csv"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources/:id/schema-attributes-template/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources",
										":id",
										"schema-attributes-template",
										"download"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Source Id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This requests a download for the Source Schema Template for a provided source.<br><br> Requires role context of `idn:nesr:read`"
							},
							"response": [
								{
									"id": "1c101898-4e39-4383-9e84-b236f50ed04d",
									"name": "Exported Source Schema Template",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/schema-attributes-template/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"schema-attributes-template",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a download for the Source Schema Template for a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/csv"
										}
									],
									"cookie": [],
									"body": "accountName,firstName,lastName,phone,email,manager,startDate,endDate\n"
								},
								{
									"id": "bc80316b-0f13-48cb-a219-578fea23d6eb",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/schema-attributes-template/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"schema-attributes-template",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a download for the Source Schema Template for a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "189db3ef-03b6-4625-8cde-e200fc340e31",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/schema-attributes-template/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"schema-attributes-template",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a download for the Source Schema Template for a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "d1453624-223d-4524-b597-2c01abdfb0f4",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/schema-attributes-template/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"schema-attributes-template",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a download for the Source Schema Template for a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "7ff40ca2-ea12-47c4-9937-a917c54c6ab5",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/schema-attributes-template/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"schema-attributes-template",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a download for the Source Schema Template for a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "eadf0b75-82f7-4a11-bfa0-b087f128f08d",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/schema-attributes-template/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"schema-attributes-template",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a download for the Source Schema Template for a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "bd289e65-3a02-431d-a43d-140971174559",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-sources/:id/schema-attributes-template/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-sources",
												":id",
												"schema-attributes-template",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Source Id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This requests a download for the Source Schema Template for a provided source.<br><br> Requires role context of `idn:nesr:read`"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "a7f6d0fd-160f-45cd-a732-65d7e1a81f6f"
				},
				{
					"name": "Create Non-Employee Source",
					"id": "0f930b85-61a6-4154-8eca-a69763b23b57",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"owner\": {\n    \"id\": \"<UUID>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"managementWorkgroup\": \"<string>\",\n  \"approvers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/non-employee-sources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-sources"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This request will create a non-employee source.<br><br> Requires role context of `idn:nesr:create`"
					},
					"response": [
						{
							"id": "46ef6301-5643-4e5c-9572-a066c5aaf1ca",
							"name": "Created non-employee source.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"owner\": {\n    \"id\": \"<UUID>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"managementWorkgroup\": \"<string>\",\n  \"approvers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee source.<br><br> Requires role context of `idn:nesr:create`"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n  \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n  \"name\": \"Retail\",\n  \"description\": \"Source description\",\n  \"approvers\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    }\n  ],\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\",\n  \"cloudExternalId\": \"99999\"\n}"
						},
						{
							"id": "627769ce-df4c-4065-8d86-97b0eccf3bc0",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"owner\": {\n    \"id\": \"<UUID>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"managementWorkgroup\": \"<string>\",\n  \"approvers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee source.<br><br> Requires role context of `idn:nesr:create`"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "40715b3e-54a6-42a9-b4f6-6cd0df99e64c",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"owner\": {\n    \"id\": \"<UUID>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"managementWorkgroup\": \"<string>\",\n  \"approvers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee source.<br><br> Requires role context of `idn:nesr:create`"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "d3c0bd13-c936-4a51-a6a4-5a8f86286559",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"owner\": {\n    \"id\": \"<UUID>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"managementWorkgroup\": \"<string>\",\n  \"approvers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee source.<br><br> Requires role context of `idn:nesr:create`"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "b255f4f1-2ce1-47bf-90f8-ae31989ea153",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"owner\": {\n    \"id\": \"<UUID>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"managementWorkgroup\": \"<string>\",\n  \"approvers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee source.<br><br> Requires role context of `idn:nesr:create`"
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "ba589fcf-b9a4-4bf4-a3c8-a01a11bf1a97",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"owner\": {\n    \"id\": \"<UUID>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"managementWorkgroup\": \"<string>\",\n  \"approvers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ],\n  \"accountManagers\": [\n    {\n      \"id\": \"<UUID>\"\n    },\n    {\n      \"id\": \"<UUID>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will create a non-employee source.<br><br> Requires role context of `idn:nesr:create`"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List Non-Employee Sources",
					"id": "6d55ca0f-d5e6-4142-8267-4b21bc0e92a3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/non-employee-sources?limit=250&offset=0&count=false&requested-for=<string>&non-employee-count=<boolean>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-sources"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
								},
								{
									"key": "non-employee-count",
									"value": "<boolean>",
									"description": "The flag to determine whether return a non-employee count associate with source."
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **name, created**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a list of non-employee sources.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list sources assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the sources that he or she owns."
					},
					"response": [
						{
							"id": "13c43319-1f7d-4a68-b24e-b0fe41545757",
							"name": "List of non-employee sources objects.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources?limit=250&offset=0&count=false&requested-for=<string>&non-employee-count=<boolean>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "non-employee-count",
											"value": "<boolean>",
											"description": "The flag to determine whether return a non-employee count associate with source."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **name, created**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee sources.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list sources assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the sources that he or she owns."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n    \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"Retail\",\n    \"description\": \"Source description\",\n    \"approvers\": [\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      },\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      }\n    ],\n    \"accountManagers\": [\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      },\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      }\n    ],\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\",\n    \"nonEmployeeCount\": -43693470.9679881\n  },\n  {\n    \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n    \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"Retail\",\n    \"description\": \"Source description\",\n    \"approvers\": [\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      },\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      }\n    ],\n    \"accountManagers\": [\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      },\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"5168015d32f890ca15812c9180835d2e\"\n      }\n    ],\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\",\n    \"nonEmployeeCount\": 19143594.548671454\n  }\n]"
						},
						{
							"id": "042b09ed-127c-4a2a-8443-10c947bedd0e",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources?limit=250&offset=0&count=false&requested-for=<string>&non-employee-count=<boolean>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "non-employee-count",
											"value": "<boolean>",
											"description": "The flag to determine whether return a non-employee count associate with source."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **name, created**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee sources.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list sources assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the sources that he or she owns."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "f21477fe-40c3-4b72-af73-4157687ba499",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources?limit=250&offset=0&count=false&requested-for=<string>&non-employee-count=<boolean>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "non-employee-count",
											"value": "<boolean>",
											"description": "The flag to determine whether return a non-employee count associate with source."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **name, created**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee sources.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list sources assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the sources that he or she owns."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "d4849fe4-e4e0-4717-8f57-14283ec1fcee",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources?limit=250&offset=0&count=false&requested-for=<string>&non-employee-count=<boolean>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "non-employee-count",
											"value": "<boolean>",
											"description": "The flag to determine whether return a non-employee count associate with source."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **name, created**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee sources.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list sources assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the sources that he or she owns."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "edb2ef7a-40e3-4b0c-b3b6-3dfa9fc96b1c",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources?limit=250&offset=0&count=false&requested-for=<string>&non-employee-count=<boolean>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "non-employee-count",
											"value": "<boolean>",
											"description": "The flag to determine whether return a non-employee count associate with source."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **name, created**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee sources.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list sources assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the sources that he or she owns."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "2de87560-b76e-4ad3-8c21-e50414c1ed84",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-sources?limit=250&offset=0&count=false&requested-for=<string>&non-employee-count=<boolean>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "non-employee-count",
											"value": "<boolean>",
											"description": "The flag to determine whether return a non-employee count associate with source."
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **name, created**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee sources.<br><br> There are two contextual uses for the requested-for path parameter: <br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a list sources assigned to a particular account manager by passing in that manager's id.<br>\n  2. The current user is an account manager, in which case \"me\" should be provided as the `requested-for` value. This will provide the user with a list of the sources that he or she owns."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "2eed4efa-2a38-42aa-a0d6-1430e7359318"
		},
		{
			"name": "non-employee-approvals",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a non-employee approval item detail",
							"id": "c7d2315a-2656-4a2d-99b7-1110b768c16c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals/:id?include-detail=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals",
										":id"
									],
									"query": [
										{
											"key": "include-detail",
											"value": "<string>",
											"description": "The object nonEmployeeRequest will not be included detail when set to false. *Default value is true*"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Non-Employee approval item id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Gets a non-employee approval item detail.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get any approval.<br>\n  2. The user owns the requested approval. "
							},
							"response": [
								{
									"id": "c04b13fa-2271-4548-bee1-095df10266e2",
									"name": "Non-Employee approval item object.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id?include-detail=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id"
											],
											"query": [
												{
													"key": "include-detail",
													"value": "<string>",
													"description": "The object nonEmployeeRequest will not be included detail when set to false. *Default value is true*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Gets a non-employee approval item detail.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get any approval.<br>\n  2. The user owns the requested approval. "
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n  \"approver\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"5168015d32f890ca15812c9180835d2e\"\n  },\n  \"accountName\": \"test.account\",\n  \"approvalStatus\": \"CANCELLED\",\n  \"approvalOrder\": 1,\n  \"comment\": \"deserunt in\",\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\",\n  \"nonEmployeeRequest\": {\n    \"id\": \"consequat commodo Excepteur labore officia\",\n    \"requester\": {\n      \"type\": \"IDENTITY\",\n      \"name\": \"William Smith\"\n    },\n    \"accountName\": \"william.smith\",\n    \"firstName\": \"William\",\n    \"lastName\": \"Smith\",\n    \"email\": \"william.smith@example.com\",\n    \"phone\": \"5555555555\",\n    \"manager\": \"jane.doe\",\n    \"nonEmployeeSource\": {\n      \"id\": \"a0303682-5e4a-44f7-bdc2-6ce6112549c1\",\n      \"sourceId\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"Retail\",\n      \"description\": \"Source description\",\n      \"schemaAttributes\": [\n        {\n          \"type\": \"IDENTITY\",\n          \"technicalName\": \"account.name\",\n          \"label\": \"Account Name\",\n          \"id\": \"ac110005-7156-1150-8171-5b292e3e0084\",\n          \"system\": true,\n          \"modified\": \"2019-08-23T18:52:59.162Z\",\n          \"created\": \"2019-08-23T18:40:35.772Z\",\n          \"helpText\": \"The unique identifier for the account\",\n          \"placeholder\": \"Enter a unique user name for this account.\",\n          \"required\": true\n        },\n        {\n          \"type\": \"TEXT\",\n          \"technicalName\": \"account.name\",\n          \"label\": \"Account Name\",\n          \"id\": \"ac110005-7156-1150-8171-5b292e3e0084\",\n          \"system\": true,\n          \"modified\": \"2019-08-23T18:52:59.162Z\",\n          \"created\": \"2019-08-23T18:40:35.772Z\",\n          \"helpText\": \"The unique identifier for the account\",\n          \"placeholder\": \"Enter a unique user name for this account.\",\n          \"required\": true\n        }\n      ]\n    },\n    \"data\": {\n      \"fugiat4\": \"dolore est\"\n    },\n    \"approvalStatus\": \"CANCELLED\",\n    \"comment\": \"laborum anim labore cillum\",\n    \"completionDate\": \"2020-03-24T11:11:41.139-05:00\",\n    \"startDate\": \"2020-03-24\",\n    \"endDate\": \"2021-03-25\",\n    \"modified\": \"2020-03-24T11:11:41.139-05:00\",\n    \"created\": \"2020-03-24T11:11:41.139-05:00\"\n  }\n}"
								},
								{
									"id": "e4769a72-3c17-486d-815c-a6aeb1753258",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id?include-detail=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id"
											],
											"query": [
												{
													"key": "include-detail",
													"value": "<string>",
													"description": "The object nonEmployeeRequest will not be included detail when set to false. *Default value is true*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Gets a non-employee approval item detail.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get any approval.<br>\n  2. The user owns the requested approval. "
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "169e7915-6285-46a8-95a9-ab639e4bbf8d",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id?include-detail=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id"
											],
											"query": [
												{
													"key": "include-detail",
													"value": "<string>",
													"description": "The object nonEmployeeRequest will not be included detail when set to false. *Default value is true*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Gets a non-employee approval item detail.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get any approval.<br>\n  2. The user owns the requested approval. "
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "5b911bd4-36e0-4a39-a136-265bf6eb92c1",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id?include-detail=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id"
											],
											"query": [
												{
													"key": "include-detail",
													"value": "<string>",
													"description": "The object nonEmployeeRequest will not be included detail when set to false. *Default value is true*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Gets a non-employee approval item detail.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get any approval.<br>\n  2. The user owns the requested approval. "
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "48c272c7-8434-4cff-9fa6-e888f83ad736",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id?include-detail=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id"
											],
											"query": [
												{
													"key": "include-detail",
													"value": "<string>",
													"description": "The object nonEmployeeRequest will not be included detail when set to false. *Default value is true*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Gets a non-employee approval item detail.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get any approval.<br>\n  2. The user owns the requested approval. "
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "7884b3d8-4712-4f5c-8ebf-2fd70cc52eec",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id?include-detail=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id"
											],
											"query": [
												{
													"key": "include-detail",
													"value": "<string>",
													"description": "The object nonEmployeeRequest will not be included detail when set to false. *Default value is true*"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Gets a non-employee approval item detail.<br><br> There are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can get any approval.<br>\n  2. The user owns the requested approval. "
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Approve a Non-Employee Request",
							"id": "9a4d7e94-25b8-433e-bf48-f72efa9b117e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals/:id/approve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals",
										":id",
										"approve"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Non-Employee approval item id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Approves a non-employee approval request and notifies the next approver.<br><br> The current user must be the requested approver."
							},
							"response": [
								{
									"id": "5cde67e0-59d0-403c-ba2a-fc659a8f402f",
									"name": "Non-Employee approval item object.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"approve"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Approves a non-employee approval request and notifies the next approver.<br><br> The current user must be the requested approver."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n  \"approver\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"5168015d32f890ca15812c9180835d2e\"\n  },\n  \"accountName\": \"test.account\",\n  \"approvalStatus\": \"PENDING\",\n  \"approvalOrder\": 1,\n  \"comment\": \"ad occaecat laboris\",\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\",\n  \"nonEmployeeRequest\": {\n    \"id\": \"culpa sunt ea c\",\n    \"requester\": {\n      \"type\": \"IDENTITY\",\n      \"name\": \"William Smith\"\n    }\n  }\n}"
								},
								{
									"id": "0cfa7c88-fb75-44e4-9989-39a879d41ebd",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"approve"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Approves a non-employee approval request and notifies the next approver.<br><br> The current user must be the requested approver."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "bd83ef7c-099b-46d4-b2b2-288d0993d442",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"approve"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Approves a non-employee approval request and notifies the next approver.<br><br> The current user must be the requested approver."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "0572ab57-3e46-4dd4-ad78-b194d5b7a931",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"approve"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Approves a non-employee approval request and notifies the next approver.<br><br> The current user must be the requested approver."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "4cf820db-8cc3-4859-96ee-6583ceed2db6",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"approve"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Approves a non-employee approval request and notifies the next approver.<br><br> The current user must be the requested approver."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "20d579fe-7895-4e3d-99b3-be2be11f3922",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/approve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"approve"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Approves a non-employee approval request and notifies the next approver.<br><br> The current user must be the requested approver."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Reject a Non-Employee Request",
							"id": "1ad51c95-20a4-40bf-9d16-3bc634b5a2f7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals/:id/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals",
										":id",
										"reject"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Non-Employee approval item id (UUID)"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint will reject an approval item request and notify user.<br><br> The current user must be the requested approver."
							},
							"response": [
								{
									"id": "7da22a5a-6653-49b1-a316-e8870ed40896",
									"name": "Non-Employee approval item object.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"reject"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint will reject an approval item request and notify user.<br><br> The current user must be the requested approver."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n  \"approver\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"5168015d32f890ca15812c9180835d2e\"\n  },\n  \"accountName\": \"test.account\",\n  \"approvalStatus\": \"PENDING\",\n  \"approvalOrder\": 1,\n  \"comment\": \"ad occaecat laboris\",\n  \"modified\": \"2019-08-23T18:52:59.162Z\",\n  \"created\": \"2019-08-23T18:40:35.772Z\",\n  \"nonEmployeeRequest\": {\n    \"id\": \"culpa sunt ea c\",\n    \"requester\": {\n      \"type\": \"IDENTITY\",\n      \"name\": \"William Smith\"\n    }\n  }\n}"
								},
								{
									"id": "cefafb93-6201-47d5-aa3e-d9a0f8abcfff",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"reject"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint will reject an approval item request and notify user.<br><br> The current user must be the requested approver."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "ddf7413d-a7bc-4af6-8f9a-80e8f2ac035d",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"reject"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint will reject an approval item request and notify user.<br><br> The current user must be the requested approver."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "3e7e1475-9aad-4256-8bb1-e81b3e02094c",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"reject"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint will reject an approval item request and notify user.<br><br> The current user must be the requested approver."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "11945374-61c1-43db-b458-e8677123b1fd",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"reject"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint will reject an approval item request and notify user.<br><br> The current user must be the requested approver."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "183ab85c-e933-4915-bfd1-4fe962be26d4",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/non-employee-approvals/:id/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"non-employee-approvals",
												":id",
												"reject"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Non-Employee approval item id (UUID)"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint will reject an approval item request and notify user.<br><br> The current user must be the requested approver."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "acbb0542-f990-4908-b29f-d26659983d35"
				},
				{
					"name": "Get List of Non-Employee Approval Requests",
					"id": "669fdd25-d480-4c41-bf4c-978bf1932c80",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/non-employee-approvals?requested-for=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-approvals"
							],
							"query": [
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "The identity for whom the request was made. *me* indicates the current user."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **approvalStatus**: *eq* <br/><br/> *Example:* approvalStatus eq \"PENDING\""
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, modified**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a list of non-employee approval requests.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can list the approvals for any approver.<br>\n  2. The user owns the requested approval. "
					},
					"response": [
						{
							"id": "7287c70e-9a0a-4c18-bea7-22be9857192d",
							"name": "List of approval items.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals?requested-for=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **approvalStatus**: *eq* <br/><br/> *Example:* approvalStatus eq \"PENDING\""
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee approval requests.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can list the approvals for any approver.<br>\n  2. The user owns the requested approval. "
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n    \"approver\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    },\n    \"accountName\": \"test.account\",\n    \"approvalStatus\": \"NOT_READY\",\n    \"approvalOrder\": 1,\n    \"comment\": \"aliqua sunt commodo\",\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\",\n    \"nonEmployeeRequest\": {\n      \"id\": \"pariatur commodo nulla sit\",\n      \"requester\": {\n        \"type\": \"IDENTITY\",\n        \"name\": \"William Smith\"\n      }\n    }\n  },\n  {\n    \"id\": \"2c1e388b-1e55-4b0a-ab5c-897f1204159c\",\n    \"approver\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\"\n    },\n    \"accountName\": \"test.account\",\n    \"approvalStatus\": \"NOT_READY\",\n    \"approvalOrder\": 1,\n    \"comment\": \"aliqua ullamco e\",\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\",\n    \"nonEmployeeRequest\": {\n      \"id\": \"officia \",\n      \"requester\": {\n        \"type\": \"IDENTITY\",\n        \"name\": \"William Smith\"\n      }\n    }\n  }\n]"
						},
						{
							"id": "778f2c88-1808-489e-a02b-36fb1eccc374",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals?requested-for=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **approvalStatus**: *eq* <br/><br/> *Example:* approvalStatus eq \"PENDING\""
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee approval requests.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can list the approvals for any approver.<br>\n  2. The user owns the requested approval. "
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "a9490bd6-1f95-4399-b047-052dd67c1480",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals?requested-for=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **approvalStatus**: *eq* <br/><br/> *Example:* approvalStatus eq \"PENDING\""
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee approval requests.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can list the approvals for any approver.<br>\n  2. The user owns the requested approval. "
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "c36258bb-51d3-4c44-87ba-7c0dc495d34b",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals?requested-for=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **approvalStatus**: *eq* <br/><br/> *Example:* approvalStatus eq \"PENDING\""
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee approval requests.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can list the approvals for any approver.<br>\n  2. The user owns the requested approval. "
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "da13a9eb-7309-4303-b92b-84e359b5866d",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals?requested-for=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **approvalStatus**: *eq* <br/><br/> *Example:* approvalStatus eq \"PENDING\""
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee approval requests.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can list the approvals for any approver.<br>\n  2. The user owns the requested approval. "
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "88a7e680-6598-4dc4-a54b-e72304abee5e",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals?requested-for=<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals"
									],
									"query": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "The identity for whom the request was made. *me* indicates the current user."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)<br/><br/> Filtering is supported for the following fields and operators:<br/><br/> **approvalStatus**: *eq* <br/><br/> *Example:* approvalStatus eq \"PENDING\""
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)<br/><br/> Sorting is supported for the following fields: **created, modified**"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of non-employee approval requests.<br><br>\nThere are two contextual uses for this endpoint:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case they can list the approvals for any approver.<br>\n  2. The user owns the requested approval. "
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Summary of Non-Employee Approval Requests",
					"id": "191dcfc8-ec78-468c-8db2-bfa4ab84ef04",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/non-employee-approvals/summary/:requested-for",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"non-employee-approvals",
								"summary",
								":requested-for"
							],
							"variable": [
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "(Required) The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This request will retrieve a summary of non-employee approval requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular approver by passing in that approver's id.<br>\n  2. The current user is an approver, in which case \"me\" should be provided as the `requested-for` value. This will provide the approver with a summary of the approval items assigned to him or her."
					},
					"response": [
						{
							"id": "cca16c3d-8dfe-4908-b1d7-925ede283565",
							"name": "summary of non-employee approval requests",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee approval requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular approver by passing in that approver's id.<br>\n  2. The current user is an approver, in which case \"me\" should be provided as the `requested-for` value. This will provide the approver with a summary of the approval items assigned to him or her."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"approved\": -24194719.53831947,\n  \"pending\": 72641349.17448005,\n  \"rejected\": 1373631.2093291879\n}"
						},
						{
							"id": "297722f7-7eeb-465c-af50-3e662aff51c9",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee approval requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular approver by passing in that approver's id.<br>\n  2. The current user is an approver, in which case \"me\" should be provided as the `requested-for` value. This will provide the approver with a summary of the approval items assigned to him or her."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "564591f7-5e1d-4528-87bb-cd94a4d26daa",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee approval requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular approver by passing in that approver's id.<br>\n  2. The current user is an approver, in which case \"me\" should be provided as the `requested-for` value. This will provide the approver with a summary of the approval items assigned to him or her."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "63adbe8b-fe23-49f7-804e-c0cc82e9d3b4",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee approval requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular approver by passing in that approver's id.<br>\n  2. The current user is an approver, in which case \"me\" should be provided as the `requested-for` value. This will provide the approver with a summary of the approval items assigned to him or her."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "df81883d-53da-484d-8aff-b3ed7b0856a6",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee approval requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular approver by passing in that approver's id.<br>\n  2. The current user is an approver, in which case \"me\" should be provided as the `requested-for` value. This will provide the approver with a summary of the approval items assigned to him or her."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "2897a894-1a5e-4edd-b946-6c4292a94f1e",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/non-employee-approvals/summary/:requested-for",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"non-employee-approvals",
										"summary",
										":requested-for"
									],
									"variable": [
										{
											"key": "requested-for",
											"value": "<string>",
											"description": "(Required) The identity (UUID) of the approver for whom for whom the summary is being retrieved. Use \"me\" instead to indicate the current user."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This request will retrieve a summary of non-employee approval requests.<br><br> There are two contextual uses for the `requested-for` path parameter:<br>\n  1. The user has the role context of `idn:nesr:read`, in which case he or she may request a summary of all non-employee approval requests assigned to a particular approver by passing in that approver's id.<br>\n  2. The current user is an approver, in which case \"me\" should be provided as the `requested-for` value. This will provide the approver with a summary of the approval items assigned to him or her."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "61637b37-d52c-4468-ab9e-6c68354c51ce"
		},
		{
			"name": "oauth-clients",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get OAuth Client",
							"id": "ffc9fe20-80c1-49b0-8916-c9a836f9819e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The OAuth client id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets details of an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:read'"
							},
							"response": [
								{
									"id": "f386323a-e098-4398-b85a-87f6d74e291b",
									"name": "Request succeeded.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets details of an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:read'"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"businessName\": \"Acme-Solar\",\n  \"homepageUrl\": \"http://localhost:12345\",\n  \"name\": \"Demo API Client\",\n  \"description\": \"An API client used for the authorization_code, refresh_token, and client_credentials flows\",\n  \"accessTokenValiditySeconds\": \"ipsum cupidatat\",\n  \"refreshTokenValiditySeconds\": \"dolor\",\n  \"redirectUris\": [\n    \"http://localhost:12345\"\n  ],\n  \"grantTypes\": [\n    \"AUTHORIZATION_CODE\",\n    \"CLIENT_CREDENTIALS\",\n    \"REFRESH_TOKEN\"\n  ],\n  \"accessType\": \"OFFLINE\",\n  \"type\": \"CONFIDENTIAL\",\n  \"internal\": false,\n  \"enabled\": true,\n  \"strongAuthSupported\": false,\n  \"claimsSupported\": false,\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\"\n}"
								},
								{
									"id": "2b259c29-da70-47d6-83ce-986e54f53c4a",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets details of an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:read'"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "a2d5fc5d-5dba-4f7f-9409-a77b7a787d64",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets details of an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:read'"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "7eb8befe-c3f5-417f-8734-35a52ff5db59",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets details of an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:read'"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "0d1c4a99-bd12-48f2-9c89-0f896110a50b",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets details of an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:read'"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "0d41883b-13c3-4e84-8dd0-ac8d14fc783b",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets details of an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:read'"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "157490b4-115d-45b3-8399-82233cac65be",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets details of an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:read'"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete OAuth Client",
							"id": "19bef0d1-c722-47a6-aa49-73ca24adcf9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The OAuth client id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This deletes an OAuth client.\nRequest will require the following security scopes:\n- 'idn:oathkeeper-client:delete' - 'idn:oathkeeper-internal-client:delete'"
							},
							"response": [
								{
									"id": "c4909f76-c9fa-4904-bd34-cde45ec75fc3",
									"name": "No content.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This deletes an OAuth client.\nRequest will require the following security scopes:\n- 'idn:oathkeeper-client:delete' - 'idn:oathkeeper-internal-client:delete'"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2776c651-5469-4a2c-b1bf-f5cb2f970fd1",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This deletes an OAuth client.\nRequest will require the following security scopes:\n- 'idn:oathkeeper-client:delete' - 'idn:oathkeeper-internal-client:delete'"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "3a1a6dd5-fa85-43f0-8940-f6f1742b53de",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This deletes an OAuth client.\nRequest will require the following security scopes:\n- 'idn:oathkeeper-client:delete' - 'idn:oathkeeper-internal-client:delete'"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "a823ae00-f6c9-4b6b-b178-92ba5fac737f",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This deletes an OAuth client.\nRequest will require the following security scopes:\n- 'idn:oathkeeper-client:delete' - 'idn:oathkeeper-internal-client:delete'"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "198917a1-cbff-48e3-aa6c-ae35bc6e08bb",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This deletes an OAuth client.\nRequest will require the following security scopes:\n- 'idn:oathkeeper-client:delete' - 'idn:oathkeeper-internal-client:delete'"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "ef13cb1a-0417-4872-870f-acc171341f0c",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This deletes an OAuth client.\nRequest will require the following security scopes:\n- 'idn:oathkeeper-client:delete' - 'idn:oathkeeper-internal-client:delete'"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "c6095dd1-4c99-4f4e-8278-14439a1a60e2",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This deletes an OAuth client.\nRequest will require the following security scopes:\n- 'idn:oathkeeper-client:delete' - 'idn:oathkeeper-internal-client:delete'"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Patch OAuth Client",
							"id": "72bd7cf4-7863-45d4-bfd9-7c04c214afde",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[object Object],[object Object]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth-clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The OAuth client id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This performs a targeted update to the field(s) of an OAuth client.\nRequest will require a security scope of\n'idn:oathkeeper-client:update'"
							},
							"response": [
								{
									"id": "291e0a66-2a36-4299-b679-3d6d71a8ecae",
									"name": "Indicates the PATCH operation succeeded, and returns the OAuth client's new representation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This performs a targeted update to the field(s) of an OAuth client.\nRequest will require a security scope of\n'idn:oathkeeper-client:update'"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"businessName\": \"Acme-Solar\",\n  \"homepageUrl\": \"http://localhost:12345\",\n  \"name\": \"Demo API Client\",\n  \"description\": \"An API client used for the authorization_code, refresh_token, and client_credentials flows\",\n  \"accessTokenValiditySeconds\": \"ipsum cupidatat\",\n  \"refreshTokenValiditySeconds\": \"dolor\",\n  \"redirectUris\": [\n    \"http://localhost:12345\"\n  ],\n  \"grantTypes\": [\n    \"AUTHORIZATION_CODE\",\n    \"CLIENT_CREDENTIALS\",\n    \"REFRESH_TOKEN\"\n  ],\n  \"accessType\": \"OFFLINE\",\n  \"type\": \"CONFIDENTIAL\",\n  \"internal\": false,\n  \"enabled\": true,\n  \"strongAuthSupported\": false,\n  \"claimsSupported\": false,\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\"\n}"
								},
								{
									"id": "d99dbec6-4039-442d-9d21-b88d595c714d",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This performs a targeted update to the field(s) of an OAuth client.\nRequest will require a security scope of\n'idn:oathkeeper-client:update'"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "80b45c66-870e-4325-8efe-6114f2f29909",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This performs a targeted update to the field(s) of an OAuth client.\nRequest will require a security scope of\n'idn:oathkeeper-client:update'"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "56e4115c-2b62-43f8-917e-272e608cb67c",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This performs a targeted update to the field(s) of an OAuth client.\nRequest will require a security scope of\n'idn:oathkeeper-client:update'"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "d99a0ede-7f75-43b5-905a-ef9736e5b4f4",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This performs a targeted update to the field(s) of an OAuth client.\nRequest will require a security scope of\n'idn:oathkeeper-client:update'"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "4f45471f-67e2-4edb-8009-3179c4360ae6",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This performs a targeted update to the field(s) of an OAuth client.\nRequest will require a security scope of\n'idn:oathkeeper-client:update'"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "763d3926-a019-4013-b979-544e5e8cfdf3",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth-clients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth-clients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The OAuth client id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This performs a targeted update to the field(s) of an OAuth client.\nRequest will require a security scope of\n'idn:oathkeeper-client:update'"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "ed8156b8-0522-415a-8239-40a2f41d769f"
				},
				{
					"name": "List OAuth Clients",
					"id": "28ecdaa9-ad7e-4546-9002-afd7caf7eb51",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth-clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth-clients"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a list of OAuth clients.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client-list:read'"
					},
					"response": [
						{
							"id": "39ecd055-2854-452a-a42c-7791cb82663e",
							"name": "List of OAuth clients.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of OAuth clients.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client-list:read'"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"businessName\": \"Acme-Solar\",\n    \"homepageUrl\": \"http://localhost:12345\",\n    \"name\": \"Demo API Client\",\n    \"description\": \"An API client used for the authorization_code, refresh_token, and client_credentials flows\",\n    \"accessTokenValiditySeconds\": \"ullamco enim anim Ut commodo\",\n    \"refreshTokenValiditySeconds\": \"exercitation veniam esse\",\n    \"redirectUris\": [\n      \"http://localhost:12345\"\n    ],\n    \"grantTypes\": [\n      \"AUTHORIZATION_CODE\",\n      \"CLIENT_CREDENTIALS\",\n      \"REFRESH_TOKEN\"\n    ],\n    \"accessType\": \"OFFLINE\",\n    \"type\": \"CONFIDENTIAL\",\n    \"internal\": false,\n    \"enabled\": true,\n    \"strongAuthSupported\": false,\n    \"claimsSupported\": false,\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\"\n  },\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"businessName\": \"Acme-Solar\",\n    \"homepageUrl\": \"http://localhost:12345\",\n    \"name\": \"Demo API Client\",\n    \"description\": \"An API client used for the authorization_code, refresh_token, and client_credentials flows\",\n    \"accessTokenValiditySeconds\": \"minim\",\n    \"refreshTokenValiditySeconds\": \"eu anim aute occaecat mollit\",\n    \"redirectUris\": [\n      \"http://localhost:12345\"\n    ],\n    \"grantTypes\": [\n      \"AUTHORIZATION_CODE\",\n      \"CLIENT_CREDENTIALS\",\n      \"REFRESH_TOKEN\"\n    ],\n    \"accessType\": \"OFFLINE\",\n    \"type\": \"CONFIDENTIAL\",\n    \"internal\": false,\n    \"enabled\": true,\n    \"strongAuthSupported\": false,\n    \"claimsSupported\": false,\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\"\n  }\n]"
						},
						{
							"id": "508f325f-6e66-4058-adc6-0face3eb7dc9",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of OAuth clients.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client-list:read'"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "d222685d-5a60-40ea-9091-072521cb7234",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of OAuth clients.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client-list:read'"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "22b73e53-5f58-456c-953d-06f6779e6402",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of OAuth clients.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client-list:read'"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "5c78480b-b432-4bab-85f2-29ba71a241dd",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of OAuth clients.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client-list:read'"
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "7f9c8604-e99c-4bec-99a2-3f203066df37",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a list of OAuth clients.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client-list:read'"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create OAuth Client",
					"id": "e10e2180-0030-4a99-ac2d-1c4fdbec1ad3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"accessTokenValiditySeconds\": \"<string>\",\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"accessType\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"businessName\": \"<string>\",\n  \"homepageUrl\": \"<string>\",\n  \"refreshTokenValiditySeconds\": \"<string>\",\n  \"redirectUris\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"internal\": \"<boolean>\",\n  \"strongAuthSupported\": \"<boolean>\",\n  \"claimsSupported\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/oauth-clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth-clients"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This creates an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:create' - 'idn:oathkeeper-internal-client:create'"
					},
					"response": [
						{
							"id": "effc10b1-96dd-48ed-b698-9db159f4d186",
							"name": "Request succeeded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"accessTokenValiditySeconds\": \"<string>\",\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"accessType\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"businessName\": \"<string>\",\n  \"homepageUrl\": \"<string>\",\n  \"refreshTokenValiditySeconds\": \"<string>\",\n  \"redirectUris\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"internal\": \"<boolean>\",\n  \"strongAuthSupported\": \"<boolean>\",\n  \"claimsSupported\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:create' - 'idn:oathkeeper-internal-client:create'"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"secret\": \"5c32dd9b21adb51c77794d46e71de117a1d0ddb36a7ff941fa28014ab7de2cf3\",\n  \"businessName\": \"Acme-Solar\",\n  \"homepageUrl\": \"http://localhost:12345\",\n  \"name\": \"Demo API Client\",\n  \"description\": \"An API client used for the authorization_code, refresh_token, and client_credentials flows\",\n  \"accessTokenValiditySeconds\": \"ullamco reprehenderit anim dolor\",\n  \"refreshTokenValiditySeconds\": \"Duis dolor\",\n  \"redirectUris\": [\n    \"http://localhost:12345\"\n  ],\n  \"grantTypes\": [\n    \"AUTHORIZATION_CODE\",\n    \"CLIENT_CREDENTIALS\",\n    \"REFRESH_TOKEN\"\n  ],\n  \"accessType\": \"OFFLINE\",\n  \"type\": \"CONFIDENTIAL\",\n  \"internal\": false,\n  \"enabled\": true,\n  \"strongAuthSupported\": false,\n  \"claimsSupported\": false,\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\"\n}"
						},
						{
							"id": "16b4644f-5491-43a1-8eab-3f52bdf995b0",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"accessTokenValiditySeconds\": \"<string>\",\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"accessType\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"businessName\": \"<string>\",\n  \"homepageUrl\": \"<string>\",\n  \"refreshTokenValiditySeconds\": \"<string>\",\n  \"redirectUris\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"internal\": \"<boolean>\",\n  \"strongAuthSupported\": \"<boolean>\",\n  \"claimsSupported\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:create' - 'idn:oathkeeper-internal-client:create'"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "f503889c-ca9b-4bc1-a850-d185781434cf",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"accessTokenValiditySeconds\": \"<string>\",\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"accessType\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"businessName\": \"<string>\",\n  \"homepageUrl\": \"<string>\",\n  \"refreshTokenValiditySeconds\": \"<string>\",\n  \"redirectUris\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"internal\": \"<boolean>\",\n  \"strongAuthSupported\": \"<boolean>\",\n  \"claimsSupported\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:create' - 'idn:oathkeeper-internal-client:create'"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "0160b0cc-7823-4a3c-9924-7a3217cd7493",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"accessTokenValiditySeconds\": \"<string>\",\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"accessType\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"businessName\": \"<string>\",\n  \"homepageUrl\": \"<string>\",\n  \"refreshTokenValiditySeconds\": \"<string>\",\n  \"redirectUris\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"internal\": \"<boolean>\",\n  \"strongAuthSupported\": \"<boolean>\",\n  \"claimsSupported\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:create' - 'idn:oathkeeper-internal-client:create'"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "c595cfa9-0297-4dc3-882f-7909d4c52df1",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"accessTokenValiditySeconds\": \"<string>\",\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"accessType\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"businessName\": \"<string>\",\n  \"homepageUrl\": \"<string>\",\n  \"refreshTokenValiditySeconds\": \"<string>\",\n  \"redirectUris\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"internal\": \"<boolean>\",\n  \"strongAuthSupported\": \"<boolean>\",\n  \"claimsSupported\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:create' - 'idn:oathkeeper-internal-client:create'"
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "8dc18465-5708-4fe2-8145-8de9a1a500ea",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"accessTokenValiditySeconds\": \"<string>\",\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"accessType\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"businessName\": \"<string>\",\n  \"homepageUrl\": \"<string>\",\n  \"refreshTokenValiditySeconds\": \"<string>\",\n  \"redirectUris\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"internal\": \"<boolean>\",\n  \"strongAuthSupported\": \"<boolean>\",\n  \"claimsSupported\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth-clients"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates an OAuth client.\nRequest will require the following security scope:\n- 'idn:oathkeeper-client:create' - 'idn:oathkeeper-internal-client:create'"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "dcd4ce5e-b7bc-47df-9f23-21f1e183187f"
		},
		{
			"name": "personal-access-tokens",
			"item": [
				{
					"name": "List Personal Access Tokens",
					"id": "93b32b20-2928-486a-a5c6-2a491a33d7f7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personal-access-tokens?owner-id=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personal-access-tokens"
							],
							"query": [
								{
									"key": "owner-id",
									"value": "",
									"description": "The identity ID of the owner whose personal access tokens should be listed. </br> If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'</br> </br> If an actual owner ID or if the <code>owner-id</code> parameter is omitted in the request, </br> the caller should have the following right: 'idn:all-personal-access-tokens:read'. </br> </br> If the caller has the following right, then managed personal access tokens associated with <code>owner-id</code> </br> will be retrieved: 'idn:managed-personal-access-tokens:read'"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a collection of personal access tokens associated with the optional <code>owner-id</code>. </br> query parameter. If the <code>owner-id</code> query parameter is omitted, all personal access tokens </br> for a tenant will be retrieved, but the caller must have the 'idn:all-personal-access-tokens:read' right. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:read</li>\n  <li>idn:all-personal-access-tokens:read</li>\n  <li>idn:managed-personal-access-tokens:read</li>\n</ul>"
					},
					"response": [
						{
							"id": "6d7a52c2-ee86-4481-8369-53851e5e0232",
							"name": "List of personal access tokens.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens?owner-id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "",
											"description": "The identity ID of the owner whose personal access tokens should be listed. </br> If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'</br> </br> If an actual owner ID or if the <code>owner-id</code> parameter is omitted in the request, </br> the caller should have the following right: 'idn:all-personal-access-tokens:read'. </br> </br> If the caller has the following right, then managed personal access tokens associated with <code>owner-id</code> </br> will be retrieved: 'idn:managed-personal-access-tokens:read'"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of personal access tokens associated with the optional <code>owner-id</code>. </br> query parameter. If the <code>owner-id</code> query parameter is omitted, all personal access tokens </br> for a tenant will be retrieved, but the caller must have the 'idn:all-personal-access-tokens:read' right. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:read</li>\n  <li>idn:all-personal-access-tokens:read</li>\n  <li>idn:managed-personal-access-tokens:read</li>\n</ul>"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"86f1dc6fe8f54414950454cbb11278fa\",\n    \"name\": \"NodeJS Integration\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"created\": \"2017-07-11T18:45:37.098Z\"\n  },\n  {\n    \"id\": \"86f1dc6fe8f54414950454cbb11278fa\",\n    \"name\": \"NodeJS Integration\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"created\": \"2017-07-11T18:45:37.098Z\"\n  }\n]"
						},
						{
							"id": "377f7da4-0fda-422d-a86b-797def0cf1a1",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens?owner-id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "",
											"description": "The identity ID of the owner whose personal access tokens should be listed. </br> If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'</br> </br> If an actual owner ID or if the <code>owner-id</code> parameter is omitted in the request, </br> the caller should have the following right: 'idn:all-personal-access-tokens:read'. </br> </br> If the caller has the following right, then managed personal access tokens associated with <code>owner-id</code> </br> will be retrieved: 'idn:managed-personal-access-tokens:read'"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of personal access tokens associated with the optional <code>owner-id</code>. </br> query parameter. If the <code>owner-id</code> query parameter is omitted, all personal access tokens </br> for a tenant will be retrieved, but the caller must have the 'idn:all-personal-access-tokens:read' right. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:read</li>\n  <li>idn:all-personal-access-tokens:read</li>\n  <li>idn:managed-personal-access-tokens:read</li>\n</ul>"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "b45c0b30-7ebe-4d03-a2ed-0246168fb4cb",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens?owner-id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "",
											"description": "The identity ID of the owner whose personal access tokens should be listed. </br> If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'</br> </br> If an actual owner ID or if the <code>owner-id</code> parameter is omitted in the request, </br> the caller should have the following right: 'idn:all-personal-access-tokens:read'. </br> </br> If the caller has the following right, then managed personal access tokens associated with <code>owner-id</code> </br> will be retrieved: 'idn:managed-personal-access-tokens:read'"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of personal access tokens associated with the optional <code>owner-id</code>. </br> query parameter. If the <code>owner-id</code> query parameter is omitted, all personal access tokens </br> for a tenant will be retrieved, but the caller must have the 'idn:all-personal-access-tokens:read' right. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:read</li>\n  <li>idn:all-personal-access-tokens:read</li>\n  <li>idn:managed-personal-access-tokens:read</li>\n</ul>"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "47d2afc2-2ed7-4599-9ccf-7e07460a6e7a",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens?owner-id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "",
											"description": "The identity ID of the owner whose personal access tokens should be listed. </br> If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'</br> </br> If an actual owner ID or if the <code>owner-id</code> parameter is omitted in the request, </br> the caller should have the following right: 'idn:all-personal-access-tokens:read'. </br> </br> If the caller has the following right, then managed personal access tokens associated with <code>owner-id</code> </br> will be retrieved: 'idn:managed-personal-access-tokens:read'"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of personal access tokens associated with the optional <code>owner-id</code>. </br> query parameter. If the <code>owner-id</code> query parameter is omitted, all personal access tokens </br> for a tenant will be retrieved, but the caller must have the 'idn:all-personal-access-tokens:read' right. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:read</li>\n  <li>idn:all-personal-access-tokens:read</li>\n  <li>idn:managed-personal-access-tokens:read</li>\n</ul>"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "8d3e988c-05dc-4258-9cef-f9ebb826113d",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens?owner-id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "",
											"description": "The identity ID of the owner whose personal access tokens should be listed. </br> If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'</br> </br> If an actual owner ID or if the <code>owner-id</code> parameter is omitted in the request, </br> the caller should have the following right: 'idn:all-personal-access-tokens:read'. </br> </br> If the caller has the following right, then managed personal access tokens associated with <code>owner-id</code> </br> will be retrieved: 'idn:managed-personal-access-tokens:read'"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of personal access tokens associated with the optional <code>owner-id</code>. </br> query parameter. If the <code>owner-id</code> query parameter is omitted, all personal access tokens </br> for a tenant will be retrieved, but the caller must have the 'idn:all-personal-access-tokens:read' right. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:read</li>\n  <li>idn:all-personal-access-tokens:read</li>\n  <li>idn:managed-personal-access-tokens:read</li>\n</ul>"
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "6244c0e3-e3c1-4ead-b770-6ddb12022f53",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens?owner-id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"query": [
										{
											"key": "owner-id",
											"value": "",
											"description": "The identity ID of the owner whose personal access tokens should be listed. </br> If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'</br> </br> If an actual owner ID or if the <code>owner-id</code> parameter is omitted in the request, </br> the caller should have the following right: 'idn:all-personal-access-tokens:read'. </br> </br> If the caller has the following right, then managed personal access tokens associated with <code>owner-id</code> </br> will be retrieved: 'idn:managed-personal-access-tokens:read'"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of personal access tokens associated with the optional <code>owner-id</code>. </br> query parameter. If the <code>owner-id</code> query parameter is omitted, all personal access tokens </br> for a tenant will be retrieved, but the caller must have the 'idn:all-personal-access-tokens:read' right. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:read</li>\n  <li>idn:all-personal-access-tokens:read</li>\n  <li>idn:managed-personal-access-tokens:read</li>\n</ul>"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Personal Access Token",
					"id": "18a5a228-7bde-49cd-b339-cdf2ab765f29",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/personal-access-tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personal-access-tokens"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This creates a personal access token. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:create</li>\n  <li>idn:all-personal-access-tokens:create</li>\n  <li>idn:managed-personal-access-tokens:create</li>\n</ul>"
					},
					"response": [
						{
							"id": "25378d7a-f75c-4cda-ba23-0f7e1ee20217",
							"name": "Created. Note - this is the only time Personal Access Tokens' secret attribute will be displayed.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a personal access token. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:create</li>\n  <li>idn:all-personal-access-tokens:create</li>\n  <li>idn:managed-personal-access-tokens:create</li>\n</ul>"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"86f1dc6fe8f54414950454cbb11278fa\",\n  \"secret\": \"1d1bef2b9f426383447f64f69349fc7cac176042578d205c256ba3f37c59adb9\",\n  \"name\": \"NodeJS Integration\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"created\": \"2017-07-11T18:45:37.098Z\"\n}"
						},
						{
							"id": "87c3e75f-8e22-4f7b-8ee7-4ccd1f91b648",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a personal access token. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:create</li>\n  <li>idn:all-personal-access-tokens:create</li>\n  <li>idn:managed-personal-access-tokens:create</li>\n</ul>"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "7a360599-db2d-4102-8bd6-7b3afeb3476e",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a personal access token. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:create</li>\n  <li>idn:all-personal-access-tokens:create</li>\n  <li>idn:managed-personal-access-tokens:create</li>\n</ul>"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "087b3887-7e7e-498c-b365-0c39247af7bc",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a personal access token. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:create</li>\n  <li>idn:all-personal-access-tokens:create</li>\n  <li>idn:managed-personal-access-tokens:create</li>\n</ul>"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "1ce8b1fd-63fb-4eb1-9c8e-352fd7c9cfb8",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a personal access token. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:create</li>\n  <li>idn:all-personal-access-tokens:create</li>\n  <li>idn:managed-personal-access-tokens:create</li>\n</ul>"
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "a5f5a214-3b70-4054-89d3-028801227b2d",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a personal access token. </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:create</li>\n  <li>idn:all-personal-access-tokens:create</li>\n  <li>idn:managed-personal-access-tokens:create</li>\n</ul>"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Personal Access Token",
					"id": "b69fc883-6172-4cd9-9471-d35dc878e65a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/personal-access-tokens/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"personal-access-tokens",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The personal access token id"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This deletes a personal access token </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:delete</li>\n  <li>idn:all-personal-access-tokens:delete</li>\n  <li>idn:managed-personal-access-tokens:delete</li>\n</ul>"
					},
					"response": [
						{
							"id": "c630e0d4-e592-43ba-8da6-292ab9dedc43",
							"name": "No content.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The personal access token id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This deletes a personal access token </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:delete</li>\n  <li>idn:all-personal-access-tokens:delete</li>\n  <li>idn:managed-personal-access-tokens:delete</li>\n</ul>"
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "662dafa0-dd8e-4d5f-9a9a-1909037dccc1",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The personal access token id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This deletes a personal access token </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:delete</li>\n  <li>idn:all-personal-access-tokens:delete</li>\n  <li>idn:managed-personal-access-tokens:delete</li>\n</ul>"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "0d120f56-c2de-4422-b9f2-c0f22b12b845",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The personal access token id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This deletes a personal access token </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:delete</li>\n  <li>idn:all-personal-access-tokens:delete</li>\n  <li>idn:managed-personal-access-tokens:delete</li>\n</ul>"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "f26082ff-6ca3-4863-91c2-baa3b0ce053b",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The personal access token id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This deletes a personal access token </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:delete</li>\n  <li>idn:all-personal-access-tokens:delete</li>\n  <li>idn:managed-personal-access-tokens:delete</li>\n</ul>"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "41d387a3-2a77-46af-9aa4-449b52e93e1b",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The personal access token id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This deletes a personal access token </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:delete</li>\n  <li>idn:all-personal-access-tokens:delete</li>\n  <li>idn:managed-personal-access-tokens:delete</li>\n</ul>"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "aec6c3c1-895c-4f52-b59e-2b880d706642",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The personal access token id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This deletes a personal access token </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:delete</li>\n  <li>idn:all-personal-access-tokens:delete</li>\n  <li>idn:managed-personal-access-tokens:delete</li>\n</ul>"
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "1d9f022e-bb37-43b9-8f66-faa2d806e2e6",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/personal-access-tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"personal-access-tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The personal access token id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This deletes a personal access token </br> </br> Any of the following rights are required to access this resource: <ul>\n  <li>idn:my-personal-access-tokens:delete</li>\n  <li>idn:all-personal-access-tokens:delete</li>\n  <li>idn:managed-personal-access-tokens:delete</li>\n</ul>"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "894ea2f3-af0c-49b6-a2a6-60bcc8d6ab1a"
		},
		{
			"name": "public-identities-config",
			"item": [
				{
					"name": "Get the Public Identities Configuration",
					"id": "de5cf5da-5654-48aa-b4e9-2a0549781f19",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/public-identities-config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-identities-config"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Returns the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
					},
					"response": [
						{
							"id": "25d9bed5-dc8c-4331-add3-745dc6eed006",
							"name": "Request succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attributes\": [\n    {\n      \"key\": \"country\",\n      \"name\": \"Country\"\n    },\n    {\n      \"key\": \"country\",\n      \"name\": \"Country\"\n    }\n  ],\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"modifiedBy\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c9180a46faadee4016fb4e018c20639\",\n    \"name\": \"Thomas Edison\"\n  }\n}"
						},
						{
							"id": "af0a33ce-4da8-4712-b703-002575d9e136",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "e2fecb64-04a6-400d-8fa1-84d7a0803912",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "9d3b1365-8a51-446b-95df-a4fd78e15cb4",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "fedb8184-b389-4a3b-b837-3302b9e8e56d",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Update the Public Identities Configuration",
					"id": "1906d816-fa48-4104-ba01-051442d9847e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributes\": [\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"modified\": \"<dateTime>\",\n  \"modifiedBy\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/public-identities-config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-identities-config"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Updates the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
					},
					"response": [
						{
							"id": "4a568b24-849b-45ae-a4cf-ec052826ac62",
							"name": "Request succeeded.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": [\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"modified\": \"<dateTime>\",\n  \"modifiedBy\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Updates the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attributes\": [\n    {\n      \"key\": \"country\",\n      \"name\": \"Country\"\n    },\n    {\n      \"key\": \"country\",\n      \"name\": \"Country\"\n    }\n  ],\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"modifiedBy\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c9180a46faadee4016fb4e018c20639\",\n    \"name\": \"Thomas Edison\"\n  }\n}"
						},
						{
							"id": "b4ea376b-59fe-4aba-9c76-47545dc00ff2",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": [\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"modified\": \"<dateTime>\",\n  \"modifiedBy\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Updates the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "065729d6-fb53-458b-a3ec-7fbbdfe3e25d",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": [\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"modified\": \"<dateTime>\",\n  \"modifiedBy\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Updates the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "da7b00f8-d504-4084-9877-5e9bccbb8db0",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": [\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"modified\": \"<dateTime>\",\n  \"modifiedBy\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Updates the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "be1d51d3-ec72-4151-bd1d-f610374d2bd9",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": [\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"modified\": \"<dateTime>\",\n  \"modifiedBy\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Updates the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "9fa3e175-308f-4abc-8e7f-cfee6673cb54",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": [\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"modified\": \"<dateTime>\",\n  \"modifiedBy\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/public-identities-config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public-identities-config"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Updates the publicly visible attributes of an identity available to request approvers for Access Requests and Certification Campaigns. A token with ORG ADMIN authority is required to call this API."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "89146d48-abb6-4114-8839-97664a2ec727"
		},
		{
			"name": "saved-searches",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Updates an existing saved search\n",
							"id": "405cbbe1-10aa-4adf-864b-4c8170aa25c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"query\": \"<string>\",\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"public\": false,\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"columns\": {\n    \"dolore73\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ],\n    \"dolore_6e9\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": \"<object>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-searches/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Updates an existing saved search.\n"
							},
							"response": [
								{
									"id": "08be8177-ee3d-4db0-a1ad-961b4cf823e1",
									"name": "The persisted saved search.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"query\": \"<string>\",\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"public\": false,\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"columns\": {\n    \"dolore73\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ],\n    \"dolore_6e9\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Updates an existing saved search.\n"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"indices\": [\n    \"identities\"\n  ],\n  \"query\": \"@accounts(disabled:true)\",\n  \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\"\n  },\n  \"name\": \"Disabled accounts\",\n  \"description\": \"Disabled accounts\",\n  \"public\": false,\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"columns\": {\n    \"sed_186\": [\n      {\n        \"field\": \"dolor\",\n        \"header\": \"officia mollit irure est ex\"\n      },\n      {\n        \"field\": \"ex \",\n        \"header\": \"irure consectetur id\"\n      }\n    ],\n    \"mollit1\": [\n      {\n        \"field\": \"consequat veniam proident qui\",\n        \"header\": \"ex \"\n      },\n      {\n        \"field\": \"dolore laboris sit\",\n        \"header\": \"culpa est Lorem Ut do\"\n      }\n    ],\n    \"adipisicingd5\": [\n      {\n        \"field\": \"culpa ex deserunt\",\n        \"header\": \"officia culpa\"\n      },\n      {\n        \"field\": \"ullamco amet\",\n        \"header\": \"sit occaecat aliquip\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"disabled\"\n  ],\n  \"sort\": [\n    \"displayName\"\n  ],\n  \"filters\": {\n    \"attributes.cloudAuthoritativeSource\": {\n      \"type\": \"EXISTS\",\n      \"exclude\": true\n    },\n    \"accessCount\": {\n      \"type\": \"RANGE\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"3\"\n        }\n      }\n    },\n    \"created\": {\n      \"type\": \"RANGE\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"2019-12-01\",\n          \"inclusive\": true\n        },\n        \"upper\": {\n          \"value\": \"2020-01-01\"\n        }\n      }\n    },\n    \"source.name\": {\n      \"type\": \"TERMS\",\n      \"terms\": [\n        \"HR Employees\",\n        \"Corporate Active Directory\"\n      ],\n      \"exclude\": true\n    },\n    \"protected\": {\n      \"type\": \"TERMS\",\n      \"terms\": [\n        \"true\"\n      ]\n    }\n  }\n}"
								},
								{
									"id": "e24227b9-53c2-43c6-a5c7-1b9360fb477a",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"query\": \"<string>\",\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"public\": false,\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"columns\": {\n    \"dolore73\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ],\n    \"dolore_6e9\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Updates an existing saved search.\n"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "c74b5635-64c3-4fe6-a847-3331f0694cf5",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"query\": \"<string>\",\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"public\": false,\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"columns\": {\n    \"dolore73\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ],\n    \"dolore_6e9\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Updates an existing saved search.\n"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Return a saved search by ID",
							"id": "fc134bf4-d40c-474b-9ccc-73a6a24e17ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-searches/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns the specified saved search.\n"
							},
							"response": [
								{
									"id": "a7b6a463-2c14-4d75-ac59-ae3ee5739353",
									"name": "The requested saved search.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Returns the specified saved search.\n"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"indices\": [\n    \"identities\"\n  ],\n  \"query\": \"@accounts(disabled:true)\",\n  \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\"\n  },\n  \"name\": \"Disabled accounts\",\n  \"description\": \"Disabled accounts\",\n  \"public\": false,\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"columns\": {\n    \"sed_186\": [\n      {\n        \"field\": \"dolor\",\n        \"header\": \"officia mollit irure est ex\"\n      },\n      {\n        \"field\": \"ex \",\n        \"header\": \"irure consectetur id\"\n      }\n    ],\n    \"mollit1\": [\n      {\n        \"field\": \"consequat veniam proident qui\",\n        \"header\": \"ex \"\n      },\n      {\n        \"field\": \"dolore laboris sit\",\n        \"header\": \"culpa est Lorem Ut do\"\n      }\n    ],\n    \"adipisicingd5\": [\n      {\n        \"field\": \"culpa ex deserunt\",\n        \"header\": \"officia culpa\"\n      },\n      {\n        \"field\": \"ullamco amet\",\n        \"header\": \"sit occaecat aliquip\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"disabled\"\n  ],\n  \"sort\": [\n    \"displayName\"\n  ],\n  \"filters\": {\n    \"attributes.cloudAuthoritativeSource\": {\n      \"type\": \"EXISTS\",\n      \"exclude\": true\n    },\n    \"accessCount\": {\n      \"type\": \"RANGE\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"3\"\n        }\n      }\n    },\n    \"created\": {\n      \"type\": \"RANGE\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"2019-12-01\",\n          \"inclusive\": true\n        },\n        \"upper\": {\n          \"value\": \"2020-01-01\"\n        }\n      }\n    },\n    \"source.name\": {\n      \"type\": \"TERMS\",\n      \"terms\": [\n        \"HR Employees\",\n        \"Corporate Active Directory\"\n      ],\n      \"exclude\": true\n    },\n    \"protected\": {\n      \"type\": \"TERMS\",\n      \"terms\": [\n        \"true\"\n      ]\n    }\n  }\n}"
								},
								{
									"id": "9dc4e05f-8e49-481f-84b6-edf3fe35fdad",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Returns the specified saved search.\n"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a document by ID",
							"id": "3911dcba-578d-47bb-a3e9-16a8088cc12d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-searches/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Deletes the specified saved search.\n"
							},
							"response": [
								{
									"id": "1ab73b6a-d783-41f4-88b2-93159a8f0cfa",
									"name": "No Content - Indicates the request was successful but there is no content to be returned in the response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the specified saved search.\n"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "d3e19323-6674-49aa-8066-097fd6754749",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the specified saved search.\n"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "c5544477-4579-4174-be8c-f193e8cd4eb7",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the specified saved search.\n"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "12c63e8d-4c7b-4e22-b177-7e8245b3771f",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the specified saved search.\n"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Execute a saved search by ID",
							"id": "12b395b4-8fe9-412c-b064-ce6e7d391dca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scheduleId\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-searches/:id/execute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches",
										":id",
										"execute"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Executes the specified saved search.\n"
							},
							"response": [
								{
									"id": "f7347153-4f19-4a05-a7c3-7d05526bf3f1",
									"name": "Accepted - Returned if the request was successfully accepted into the system.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleId\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Executes the specified saved search.\n"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2a4418b4-9077-47c7-9c7e-2f3adaccd983",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleId\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Executes the specified saved search.\n"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "75a94f26-aff9-41e6-980a-4d8e4067a938",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleId\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Executes the specified saved search.\n"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "8c5296de-fcd7-4fec-b488-274ed1475112",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleId\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Executes the specified saved search.\n"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "00a485c7-734d-439c-bd82-47d7ef8e4ba0",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleId\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Executes the specified saved search.\n"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "c9b73e7b-fa1e-4a33-82ea-115f05746932",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleId\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Executes the specified saved search.\n"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "3b136a4a-f384-4625-b2ca-c0204cb16043",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheduleId\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saved-searches/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saved-searches",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Executes the specified saved search.\n"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "fd2c6874-5420-4e37-8c3f-6238bfd89ef3"
				},
				{
					"name": "Create a saved search",
					"id": "891779ac-d64e-40c8-9a26-0047f84b5d73",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"query\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"public\": false,\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"columns\": {\n    \"Excepteur5\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ],\n    \"deseruntd\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": \"<object>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/saved-searches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saved-searches"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Creates a new saved search.\n"
					},
					"response": [
						{
							"id": "cdd2f279-9ab3-4bf0-b221-7ae36ae7361c",
							"name": "The persisted saved search.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"query\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"public\": false,\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"columns\": {\n    \"Excepteur5\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ],\n    \"deseruntd\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": \"<object>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new saved search.\n"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"indices\": [\n    \"identities\"\n  ],\n  \"query\": \"@accounts(disabled:true)\",\n  \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\"\n  },\n  \"name\": \"Disabled accounts\",\n  \"description\": \"Disabled accounts\",\n  \"public\": false,\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"columns\": {\n    \"sed_186\": [\n      {\n        \"field\": \"dolor\",\n        \"header\": \"officia mollit irure est ex\"\n      },\n      {\n        \"field\": \"ex \",\n        \"header\": \"irure consectetur id\"\n      }\n    ],\n    \"mollit1\": [\n      {\n        \"field\": \"consequat veniam proident qui\",\n        \"header\": \"ex \"\n      },\n      {\n        \"field\": \"dolore laboris sit\",\n        \"header\": \"culpa est Lorem Ut do\"\n      }\n    ],\n    \"adipisicingd5\": [\n      {\n        \"field\": \"culpa ex deserunt\",\n        \"header\": \"officia culpa\"\n      },\n      {\n        \"field\": \"ullamco amet\",\n        \"header\": \"sit occaecat aliquip\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"disabled\"\n  ],\n  \"sort\": [\n    \"displayName\"\n  ],\n  \"filters\": {\n    \"attributes.cloudAuthoritativeSource\": {\n      \"type\": \"EXISTS\",\n      \"exclude\": true\n    },\n    \"accessCount\": {\n      \"type\": \"RANGE\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"3\"\n        }\n      }\n    },\n    \"created\": {\n      \"type\": \"RANGE\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"2019-12-01\",\n          \"inclusive\": true\n        },\n        \"upper\": {\n          \"value\": \"2020-01-01\"\n        }\n      }\n    },\n    \"source.name\": {\n      \"type\": \"TERMS\",\n      \"terms\": [\n        \"HR Employees\",\n        \"Corporate Active Directory\"\n      ],\n      \"exclude\": true\n    },\n    \"protected\": {\n      \"type\": \"TERMS\",\n      \"terms\": [\n        \"true\"\n      ]\n    }\n  }\n}"
						},
						{
							"id": "576a39e8-2a50-4942-874e-f6e0ea1da60b",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"query\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"public\": false,\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"columns\": {\n    \"Excepteur5\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ],\n    \"deseruntd\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": \"<object>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new saved search.\n"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "75f3ab3a-ffe3-441c-8add-5178bfdb2c49",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"query\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"public\": false,\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"columns\": {\n    \"Excepteur5\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ],\n    \"deseruntd\": [\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"header\": \"<string>\"\n      }\n    ]\n  },\n  \"fields\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": \"<object>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new saved search.\n"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Return a list of Saved Searches",
					"id": "c37b3739-5ecd-47f2-850b-fbd861a6644f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/saved-searches?offset=0&limit=250&count=false&filters=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saved-searches"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).\n\nAllowed filter properties: *owner.id*, *public*\n\nAllowed filter operator: *eq*\n\n**Example filters**:\n\n```owner.id eq \"0de46054-fe90-434a-b84e-c6b3359d0c64\"``` -- returns saved searches for the specified owner ID\n\n```public eq true``` -- returns all public saved searches\n\n```owner.id eq me or public eq true``` -- returns all of the current user's saved searches as well as all public saved searches belonging to other users in the current org\n"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Returns a list of saved searches.\n"
					},
					"response": [
						{
							"id": "cd321960-1ae4-49fc-93c6-0004b268b333",
							"name": "The list of requested saved searches.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-searches?offset=0&limit=250&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).\n\nAllowed filter properties: *owner.id*, *public*\n\nAllowed filter operator: *eq*\n\n**Example filters**:\n\n```owner.id eq \"0de46054-fe90-434a-b84e-c6b3359d0c64\"``` -- returns saved searches for the specified owner ID\n\n```public eq true``` -- returns all public saved searches\n\n```owner.id eq me or public eq true``` -- returns all of the current user's saved searches as well as all public saved searches belonging to other users in the current org\n"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns a list of saved searches.\n"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The total result count (returned only if the *count* parameter is specified as *true*).",
									"key": "X-Total-Count",
									"value": "-80779502"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"indices\": [\n      \"identities\"\n    ],\n    \"query\": \"@accounts(disabled:true)\",\n    \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    },\n    \"name\": \"Disabled accounts\",\n    \"description\": \"Disabled accounts\",\n    \"public\": false,\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"columns\": {\n      \"in_1a5\": [\n        {\n          \"field\": \"in culpa pr\",\n          \"header\": \"eiusmod velit\"\n        },\n        {\n          \"field\": \"nisi commodo\",\n          \"header\": \"est q\"\n        }\n      ]\n    },\n    \"fields\": [\n      \"disabled\"\n    ],\n    \"sort\": [\n      \"displayName\"\n    ],\n    \"filters\": {\n      \"attributes.cloudAuthoritativeSource\": {\n        \"type\": \"EXISTS\",\n        \"exclude\": true\n      },\n      \"accessCount\": {\n        \"type\": \"RANGE\",\n        \"range\": {\n          \"lower\": {\n            \"value\": \"3\"\n          }\n        }\n      },\n      \"created\": {\n        \"type\": \"RANGE\",\n        \"range\": {\n          \"lower\": {\n            \"value\": \"2019-12-01\",\n            \"inclusive\": true\n          },\n          \"upper\": {\n            \"value\": \"2020-01-01\"\n          }\n        }\n      },\n      \"source.name\": {\n        \"type\": \"TERMS\",\n        \"terms\": [\n          \"HR Employees\",\n          \"Corporate Active Directory\"\n        ],\n        \"exclude\": true\n      },\n      \"protected\": {\n        \"type\": \"TERMS\",\n        \"terms\": [\n          \"true\"\n        ]\n      }\n    }\n  },\n  {\n    \"indices\": [\n      \"identities\"\n    ],\n    \"query\": \"@accounts(disabled:true)\",\n    \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    },\n    \"name\": \"Disabled accounts\",\n    \"description\": \"Disabled accounts\",\n    \"public\": false,\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"columns\": {\n      \"labore_5\": [\n        {\n          \"field\": \"et esse eiusmod\",\n          \"header\": \"cupidatat proident\"\n        },\n        {\n          \"field\": \"Ut non\",\n          \"header\": \"tempor minim\"\n        }\n      ],\n      \"eu_37\": [\n        {\n          \"field\": \"nisi adipisicing\",\n          \"header\": \"aute et magna officia\"\n        },\n        {\n          \"field\": \"elit sunt pariatur eu\",\n          \"header\": \"ut adipisicing id Duis\"\n        }\n      ],\n      \"quis2\": [\n        {\n          \"field\": \"aliquip esse\",\n          \"header\": \"ex ut cupidatat voluptate\"\n        },\n        {\n          \"field\": \"tempor occaecat Duis\",\n          \"header\": \"nisi\"\n        }\n      ]\n    },\n    \"fields\": [\n      \"disabled\"\n    ],\n    \"sort\": [\n      \"displayName\"\n    ],\n    \"filters\": {\n      \"attributes.cloudAuthoritativeSource\": {\n        \"type\": \"EXISTS\",\n        \"exclude\": true\n      },\n      \"accessCount\": {\n        \"type\": \"RANGE\",\n        \"range\": {\n          \"lower\": {\n            \"value\": \"3\"\n          }\n        }\n      },\n      \"created\": {\n        \"type\": \"RANGE\",\n        \"range\": {\n          \"lower\": {\n            \"value\": \"2019-12-01\",\n            \"inclusive\": true\n          },\n          \"upper\": {\n            \"value\": \"2020-01-01\"\n          }\n        }\n      },\n      \"source.name\": {\n        \"type\": \"TERMS\",\n        \"terms\": [\n          \"HR Employees\",\n          \"Corporate Active Directory\"\n        ],\n        \"exclude\": true\n      },\n      \"protected\": {\n        \"type\": \"TERMS\",\n        \"terms\": [\n          \"true\"\n        ]\n      }\n    }\n  }\n]"
						},
						{
							"id": "c2ff3f51-527f-4e28-95cb-e6a5cc8d100f",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-searches?offset=0&limit=250&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).\n\nAllowed filter properties: *owner.id*, *public*\n\nAllowed filter operator: *eq*\n\n**Example filters**:\n\n```owner.id eq \"0de46054-fe90-434a-b84e-c6b3359d0c64\"``` -- returns saved searches for the specified owner ID\n\n```public eq true``` -- returns all public saved searches\n\n```owner.id eq me or public eq true``` -- returns all of the current user's saved searches as well as all public saved searches belonging to other users in the current org\n"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns a list of saved searches.\n"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "7a349405-02b9-4e4a-868d-9214bc3187e8",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-searches?offset=0&limit=250&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-searches"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).\n\nAllowed filter properties: *owner.id*, *public*\n\nAllowed filter operator: *eq*\n\n**Example filters**:\n\n```owner.id eq \"0de46054-fe90-434a-b84e-c6b3359d0c64\"``` -- returns saved searches for the specified owner ID\n\n```public eq true``` -- returns all public saved searches\n\n```owner.id eq me or public eq true``` -- returns all of the current user's saved searches as well as all public saved searches belonging to other users in the current org\n"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns a list of saved searches.\n"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "28f23390-625c-4883-ac69-e7d82690a019"
		},
		{
			"name": "scheduled-searches",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Update an existing Scheduled Search",
							"id": "16233c61-0b56-4b12-9fd9-66286a9d56be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"savedSearchId\": \"<string>\",\n  \"schedule\": {\n    \"type\": \"<string>\",\n    \"hours\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"months\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"days\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"expiration\": \"<dateTime>\",\n    \"timeZoneId\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false,\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"ownerId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Updates an existing scheduled search.\n"
							},
							"response": [
								{
									"id": "16e60e2d-b4ae-4afc-abc8-a7f289b56fc2",
									"name": "The persisted scheduled search.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"savedSearchId\": \"<string>\",\n  \"schedule\": {\n    \"type\": \"<string>\",\n    \"hours\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"months\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"days\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"expiration\": \"<dateTime>\",\n    \"timeZoneId\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false,\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"ownerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Updates an existing scheduled search.\n"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"savedSearchId\": \"554f1511-f0a1-4744-ab14-599514d3e57c\",\n  \"schedule\": {\n    \"type\": \"WEEKLY\",\n    \"hours\": {\n      \"type\": \"RANGE\",\n      \"values\": [\n        \"9\",\n        \"18\"\n      ],\n      \"interval\": 3\n    },\n    \"months\": {\n      \"type\": \"LIST\",\n      \"values\": [\n        \"MON\",\n        \"WED\"\n      ],\n      \"interval\": 3\n    },\n    \"days\": {\n      \"type\": \"LIST\",\n      \"values\": [\n        \"MON\",\n        \"WED\"\n      ],\n      \"interval\": 3\n    },\n    \"expiration\": \"2018-06-25T20:22:28.104Z\",\n    \"timeZoneId\": \"GMT-06:00\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    }\n  ],\n  \"name\": \"Daily disabled accounts\",\n  \"description\": \"Daily disabled accounts\",\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false,\n  \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\"\n  },\n  \"ownerId\": \"2c9180867624cbd7017642d8c8c81f67\"\n}"
								},
								{
									"id": "513dd2c6-8be6-47bd-9c87-f5106b0fca49",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"savedSearchId\": \"<string>\",\n  \"schedule\": {\n    \"type\": \"<string>\",\n    \"hours\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"months\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"days\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"expiration\": \"<dateTime>\",\n    \"timeZoneId\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false,\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"ownerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Updates an existing scheduled search.\n"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "56efb01f-6dea-40bb-86f6-c068bcf2fbb6",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"savedSearchId\": \"<string>\",\n  \"schedule\": {\n    \"type\": \"<string>\",\n    \"hours\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"months\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"days\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"expiration\": \"<dateTime>\",\n    \"timeZoneId\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false,\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"ownerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Updates an existing scheduled search.\n"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "b4ed0811-2031-4946-a1af-11c85a1aaf31",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"savedSearchId\": \"<string>\",\n  \"schedule\": {\n    \"type\": \"<string>\",\n    \"hours\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"months\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"days\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"expiration\": \"<dateTime>\",\n    \"timeZoneId\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false,\n  \"id\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  \"ownerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Updates an existing scheduled search.\n"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Return a Scheduled Search by ID",
							"id": "aac33ba5-5abf-4c77-a563-4feac2281774",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns the specified scheduled search.\n"
							},
							"response": [
								{
									"id": "017c68a3-7f72-4a68-8e05-70b6439d6a47",
									"name": "The requested scheduled search.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Returns the specified scheduled search.\n"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"savedSearchId\": \"554f1511-f0a1-4744-ab14-599514d3e57c\",\n  \"schedule\": {\n    \"type\": \"WEEKLY\",\n    \"hours\": {\n      \"type\": \"RANGE\",\n      \"values\": [\n        \"9\",\n        \"18\"\n      ],\n      \"interval\": 3\n    },\n    \"months\": {\n      \"type\": \"LIST\",\n      \"values\": [\n        \"MON\",\n        \"WED\"\n      ],\n      \"interval\": 3\n    },\n    \"days\": {\n      \"type\": \"LIST\",\n      \"values\": [\n        \"MON\",\n        \"WED\"\n      ],\n      \"interval\": 3\n    },\n    \"expiration\": \"2018-06-25T20:22:28.104Z\",\n    \"timeZoneId\": \"GMT-06:00\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    }\n  ],\n  \"name\": \"Daily disabled accounts\",\n  \"description\": \"Daily disabled accounts\",\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false,\n  \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\"\n  },\n  \"ownerId\": \"2c9180867624cbd7017642d8c8c81f67\"\n}"
								},
								{
									"id": "5712f8d2-1f49-4e3e-801f-6356e9f9f54c",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Returns the specified scheduled search.\n"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a Scheduled Search by ID",
							"id": "740625b7-84ba-43a0-acd3-e4b71bb6a47c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Deletes the specified scheduled search.\n"
							},
							"response": [
								{
									"id": "b9c9e20e-1247-43ef-8eee-a7531770288c",
									"name": "No Content - Indicates the request was successful but there is no content to be returned in the response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the specified scheduled search.\n"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2150e2ca-6ca5-45b2-8ea0-e4a3c1a7958e",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the specified scheduled search.\n"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "20aa0c9d-fec1-4378-87d3-d7b47a98612e",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the specified scheduled search.\n"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Unsubscribe a recipient from Scheduled Search",
							"id": "378277e4-f939-4ef7-b76b-b7e0cd77e200",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"<string>\",\n  \"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches/:id/unsubscribe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches",
										":id",
										"unsubscribe"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Unsubscribes a recipient from the specified scheduled search.\n"
							},
							"response": [
								{
									"id": "ae7c5733-36d6-4a7e-a2f8-e48f151a3226",
									"name": "No Content - Indicates the request was successful but there is no content to be returned in the response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<string>\",\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id/unsubscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id",
												"unsubscribe"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Unsubscribes a recipient from the specified scheduled search.\n"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "066a0527-7379-4399-93ff-7f14af4d8977",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<string>\",\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id/unsubscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id",
												"unsubscribe"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Unsubscribes a recipient from the specified scheduled search.\n"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "361603f8-338c-4324-b763-5f7d129decaa",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<string>\",\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id/unsubscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id",
												"unsubscribe"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Unsubscribes a recipient from the specified scheduled search.\n"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "edcf6dbe-cbd1-4e54-a547-a339f1ad9f55",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<string>\",\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scheduled-searches/:id/unsubscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scheduled-searches",
												":id",
												"unsubscribe"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the requested document."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Unsubscribes a recipient from the specified scheduled search.\n"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "c4574339-0763-42a2-bbd4-c5993126396a"
				},
				{
					"name": "Create a new scheduled search",
					"id": "a953f849-79d0-4f0e-8215-883c3783b3a6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"savedSearchId\": \"<string>\",\n  \"schedule\": {\n    \"type\": \"<string>\",\n    \"hours\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"months\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"days\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"expiration\": \"<dateTime>\",\n    \"timeZoneId\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/scheduled-searches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scheduled-searches"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Creates a new scheduled search.\n"
					},
					"response": [
						{
							"id": "ab004b8b-c4f5-4ac4-a0b9-2ccc3d7a5466",
							"name": "The persisted scheduled search.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"savedSearchId\": \"<string>\",\n  \"schedule\": {\n    \"type\": \"<string>\",\n    \"hours\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"months\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"days\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"expiration\": \"<dateTime>\",\n    \"timeZoneId\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new scheduled search.\n"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"savedSearchId\": \"554f1511-f0a1-4744-ab14-599514d3e57c\",\n  \"schedule\": {\n    \"type\": \"WEEKLY\",\n    \"hours\": {\n      \"type\": \"RANGE\",\n      \"values\": [\n        \"9\",\n        \"18\"\n      ],\n      \"interval\": 3\n    },\n    \"months\": {\n      \"type\": \"LIST\",\n      \"values\": [\n        \"MON\",\n        \"WED\"\n      ],\n      \"interval\": 3\n    },\n    \"days\": {\n      \"type\": \"LIST\",\n      \"values\": [\n        \"MON\",\n        \"WED\"\n      ],\n      \"interval\": 3\n    },\n    \"expiration\": \"2018-06-25T20:22:28.104Z\",\n    \"timeZoneId\": \"GMT-06:00\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    },\n    {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    }\n  ],\n  \"name\": \"Daily disabled accounts\",\n  \"description\": \"Daily disabled accounts\",\n  \"created\": \"2018-06-25T20:22:28.104Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false,\n  \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\"\n  },\n  \"ownerId\": \"2c9180867624cbd7017642d8c8c81f67\"\n}"
						},
						{
							"id": "90d3a0da-34fa-4b3f-a5b2-1014c5cd40d6",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"savedSearchId\": \"<string>\",\n  \"schedule\": {\n    \"type\": \"<string>\",\n    \"hours\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"months\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"days\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"expiration\": \"<dateTime>\",\n    \"timeZoneId\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new scheduled search.\n"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "48420bee-c9dd-41c0-8d4b-065a997a572e",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"savedSearchId\": \"<string>\",\n  \"schedule\": {\n    \"type\": \"<string>\",\n    \"hours\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"months\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"days\": {\n      \"type\": \"<string>\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"interval\": \"<integer>\"\n    },\n    \"expiration\": \"<dateTime>\",\n    \"timeZoneId\": \"<string>\"\n  },\n  \"recipients\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\",\n  \"enabled\": false,\n  \"emailEmptyResults\": false,\n  \"displayQueryDetails\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new scheduled search.\n"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Return a list of scheduled searches",
					"id": "6902b588-59d4-4316-a6f4-f0581256552c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scheduled-searches?offset=0&limit=250&count=false&filters=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scheduled-searches"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).\n\nAllowed filter properties: *owner.id*, *savedSearchId*\n\nAllowed filter operator: *eq*\n\n**Example filters**:\n\n```owner.id eq \"0de46054-fe90-434a-b84e-c6b3359d0c64\"``` -- returns scheduled searches for the specified owner ID\n\n```savedSearchId eq \"6cc0945d-9eeb-4948-9033-72d066e1153e\"``` -- returns scheduled searches that reference the specified saved search\n\n```owner.id eq me or savedSearchId eq \"6cc0945d-9eeb-4948-9033-72d066e1153e\"``` -- returns all of the current user's scheduled searches as well as all scheduled searches that reference the specified saved search\n"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Returns a list of scheduled searches.\n"
					},
					"response": [
						{
							"id": "7599ec6a-a82b-428c-b5c7-b2db7887be14",
							"name": "The list of requested scheduled searches.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches?offset=0&limit=250&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).\n\nAllowed filter properties: *owner.id*, *savedSearchId*\n\nAllowed filter operator: *eq*\n\n**Example filters**:\n\n```owner.id eq \"0de46054-fe90-434a-b84e-c6b3359d0c64\"``` -- returns scheduled searches for the specified owner ID\n\n```savedSearchId eq \"6cc0945d-9eeb-4948-9033-72d066e1153e\"``` -- returns scheduled searches that reference the specified saved search\n\n```owner.id eq me or savedSearchId eq \"6cc0945d-9eeb-4948-9033-72d066e1153e\"``` -- returns all of the current user's scheduled searches as well as all scheduled searches that reference the specified saved search\n"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns a list of scheduled searches.\n"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The total result count (returned only if the *count* parameter is specified as *true*).",
									"key": "X-Total-Count",
									"value": "-80779502"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"savedSearchId\": \"554f1511-f0a1-4744-ab14-599514d3e57c\",\n    \"schedule\": {\n      \"type\": \"WEEKLY\",\n      \"hours\": {\n        \"type\": \"RANGE\",\n        \"values\": [\n          \"9\",\n          \"18\"\n        ],\n        \"interval\": 3\n      },\n      \"months\": {\n        \"type\": \"LIST\",\n        \"values\": [\n          \"MON\",\n          \"WED\"\n        ],\n        \"interval\": 3\n      },\n      \"days\": {\n        \"type\": \"LIST\",\n        \"values\": [\n          \"MON\",\n          \"WED\"\n        ],\n        \"interval\": 3\n      },\n      \"expiration\": \"2018-06-25T20:22:28.104Z\",\n      \"timeZoneId\": \"GMT-06:00\"\n    },\n    \"recipients\": [\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\"\n      },\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\"\n      }\n    ],\n    \"name\": \"Daily disabled accounts\",\n    \"description\": \"Daily disabled accounts\",\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"enabled\": false,\n    \"emailEmptyResults\": false,\n    \"displayQueryDetails\": false,\n    \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    },\n    \"ownerId\": \"2c9180867624cbd7017642d8c8c81f67\"\n  },\n  {\n    \"savedSearchId\": \"554f1511-f0a1-4744-ab14-599514d3e57c\",\n    \"schedule\": {\n      \"type\": \"WEEKLY\",\n      \"hours\": {\n        \"type\": \"RANGE\",\n        \"values\": [\n          \"9\",\n          \"18\"\n        ],\n        \"interval\": 3\n      },\n      \"months\": {\n        \"type\": \"LIST\",\n        \"values\": [\n          \"MON\",\n          \"WED\"\n        ],\n        \"interval\": 3\n      },\n      \"days\": {\n        \"type\": \"LIST\",\n        \"values\": [\n          \"MON\",\n          \"WED\"\n        ],\n        \"interval\": 3\n      },\n      \"expiration\": \"2018-06-25T20:22:28.104Z\",\n      \"timeZoneId\": \"GMT-06:00\"\n    },\n    \"recipients\": [\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\"\n      },\n      {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\"\n      }\n    ],\n    \"name\": \"Daily disabled accounts\",\n    \"description\": \"Daily disabled accounts\",\n    \"created\": \"2018-06-25T20:22:28.104Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"enabled\": false,\n    \"emailEmptyResults\": false,\n    \"displayQueryDetails\": false,\n    \"id\": \"0de46054-fe90-434a-b84e-c6b3359d0c64\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\"\n    },\n    \"ownerId\": \"2c9180867624cbd7017642d8c8c81f67\"\n  }\n]"
						},
						{
							"id": "80dab90a-7aae-4f84-98af-f2790d2bded1",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches?offset=0&limit=250&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).\n\nAllowed filter properties: *owner.id*, *savedSearchId*\n\nAllowed filter operator: *eq*\n\n**Example filters**:\n\n```owner.id eq \"0de46054-fe90-434a-b84e-c6b3359d0c64\"``` -- returns scheduled searches for the specified owner ID\n\n```savedSearchId eq \"6cc0945d-9eeb-4948-9033-72d066e1153e\"``` -- returns scheduled searches that reference the specified saved search\n\n```owner.id eq me or savedSearchId eq \"6cc0945d-9eeb-4948-9033-72d066e1153e\"``` -- returns all of the current user's scheduled searches as well as all scheduled searches that reference the specified saved search\n"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns a list of scheduled searches.\n"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "779221a6-f59c-47bd-9f41-901e57fd70ee",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scheduled-searches?offset=0&limit=250&count=false&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scheduled-searches"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).\n\nAllowed filter properties: *owner.id*, *savedSearchId*\n\nAllowed filter operator: *eq*\n\n**Example filters**:\n\n```owner.id eq \"0de46054-fe90-434a-b84e-c6b3359d0c64\"``` -- returns scheduled searches for the specified owner ID\n\n```savedSearchId eq \"6cc0945d-9eeb-4948-9033-72d066e1153e\"``` -- returns scheduled searches that reference the specified saved search\n\n```owner.id eq me or savedSearchId eq \"6cc0945d-9eeb-4948-9033-72d066e1153e\"``` -- returns all of the current user's scheduled searches as well as all scheduled searches that reference the specified saved search\n"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Returns a list of scheduled searches.\n"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "ba694730-5d1d-44bd-8bba-05bac8f5c915"
		},
		{
			"name": "search",
			"item": [
				{
					"name": "Perform Search",
					"id": "59c8078c-be3b-4931-9a4d-82f06cf1f7bb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search?offset=0&limit=250&count=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Performs a search with the provided query and returns a matching result collection."
					},
					"response": [
						{
							"id": "a7cb46c3-84a6-4341-bc33-5b45d71b57f8",
							"name": "List of matching documents.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search?offset=0&limit=250&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search with the provided query and returns a matching result collection."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The total result count (returned only if the *count* parameter is specified as *true*).",
									"key": "X-Total-Count",
									"value": "-80779502"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"2c9180825a6c1adc015a71c9023f0818\",\n    \"name\": \"Cloud Eng\",\n    \"_type\": \"accessprofile\",\n    \"description\": \"Cloud Eng\",\n    \"created\": \"2017-02-24T20:21:23.145Z\",\n    \"modified\": \"2019-05-24T20:36:04.312Z\",\n    \"synced\": \"2020-02-18T05:30:20.414Z\",\n    \"enabled\": true,\n    \"requestable\": true,\n    \"requestCommentsRequired\": false,\n    \"owner\": {\n      \"id\": \"ff8081815757d36a015757d42e56031e\",\n      \"name\": \"SailPoint Support\",\n      \"type\": \"IDENTITY\",\n      \"email\": \"cloud-support@sailpoint.com\"\n    },\n    \"source\": {\n      \"id\": \"ff8081815757d4fb0157588f3d9d008f\",\n      \"name\": \"Employees\"\n    },\n    \"entitlements\": [\n      {\n        \"id\": \"2c918084575812550157589064f33b89\",\n        \"name\": \"CN=Cloud Engineering,DC=sailpoint,DC=COM\",\n        \"description\": \"mull\",\n        \"attribute\": \"memberOf\",\n        \"value\": \"CN=Cloud Engineering,DC=sailpoint,DC=COM\"\n      }\n    ],\n    \"entitlementCount\": 1,\n    \"tags\": [\n      \"TAG_1\",\n      \"TAG_2\"\n    ]\n  }\n]"
						},
						{
							"id": "014aa5c0-225b-4fa9-a411-f2c5bce2e165",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search?offset=0&limit=250&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search with the provided query and returns a matching result collection."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "90926fa4-ee69-4833-8dfa-042191f70258",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search?offset=0&limit=250&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search with the provided query and returns a matching result collection."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "ff8f72db-95b9-4a49-99dd-7042db0a4402",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search?offset=0&limit=250&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search with the provided query and returns a matching result collection."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "f80c041c-6ddc-48ff-9b22-db2c19da9908",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search?offset=0&limit=250&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search with the provided query and returns a matching result collection."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "d66f51d3-3d74-4a76-b36d-562a25f77a3d",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search?offset=0&limit=250&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search with the provided query and returns a matching result collection."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Count the number of Documents satisfying a Query",
					"id": "00dbcef4-16e7-4846-bfff-6357313a4e56",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"count"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Performs a search with provided query and returns count of results in the X-Total-Count header."
					},
					"response": [
						{
							"id": "c5f612ab-bd33-48c9-a5b5-5ded52e8b1fd",
							"name": "No content - indicates the request was successful but there is no content to be returned in the response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"count"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search with provided query and returns count of results in the X-Total-Count header."
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"disabled": false,
									"description": "The total result count.",
									"key": "X-Total-Count",
									"value": "-80779502"
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "10e0cbf3-15a0-4bb5-89d8-8f1ae4d7d5df",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"count"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search with provided query and returns count of results in the X-Total-Count header."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "2f638aad-7da0-400a-8363-d5cb43fd6c3c",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"count"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search with provided query and returns count of results in the X-Total-Count header."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Perform a Search Query Aggregation",
					"id": "cf8ac01b-1c02-4d4a-b777-5a1d8e06ea55",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/aggregate?offset=0&limit=250&count=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"aggregate"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Performs a search query aggregation and returns aggregation result."
					},
					"response": [
						{
							"id": "4610ce04-1d96-407b-bec7-cc2ff1cb8c08",
							"name": "Aggregation results.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/aggregate?offset=0&limit=250&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"aggregate"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search query aggregation and returns aggregation result."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "The total result count (returned only if the *count* parameter is specified as *true*).",
									"key": "X-Total-Count",
									"value": "-80779502"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"aggregations\": {\n    \"Identity Locations\": {\n      \"buckets\": [\n        {\n          \"key\": \"Austin\",\n          \"doc_count\": 109\n        },\n        {\n          \"key\": \"London\",\n          \"doc_count\": 64\n        },\n        {\n          \"key\": \"San Jose\",\n          \"doc_count\": 27\n        },\n        {\n          \"key\": \"Brussels\",\n          \"doc_count\": 26\n        },\n        {\n          \"key\": \"Sao Paulo\",\n          \"doc_count\": 24\n        },\n        {\n          \"key\": \"Munich\",\n          \"doc_count\": 23\n        },\n        {\n          \"key\": \"Singapore\",\n          \"doc_count\": 22\n        },\n        {\n          \"key\": \"Tokyo\",\n          \"doc_count\": 20\n        },\n        {\n          \"key\": \"Taipei\",\n          \"doc_count\": 16\n        }\n      ]\n    }\n  },\n  \"hits\": [\n    {\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"John Doe\",\n      \"_type\": \"accessprofile\",\n      \"description\": \"aute magna labo\",\n      \"created\": \"2018-06-25T20:22:28.104Z\",\n      \"modified\": \"2018-06-25T20:22:28.104Z\",\n      \"synced\": \"2018-06-25T20:22:28.104Z\",\n      \"enabled\": false,\n      \"requestable\": true,\n      \"requestCommentsRequired\": true,\n      \"owner\": {\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"John Doe\",\n        \"type\": \"IDENTITY\",\n        \"email\": \"sint consequat c\"\n      },\n      \"source\": {\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"John Doe\"\n      },\n      \"entitlements\": [\n        {\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"John Doe\",\n          \"description\": \"occaecat veniam dolore dolor\",\n          \"attribute\": \"ut in Excepteur non commodo\",\n          \"value\": \"anim deserunt\"\n        },\n        {\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"John Doe\",\n          \"description\": \"Excepteur occaecat fugiat \",\n          \"attribute\": \"nisi culpa ea repreh\",\n          \"value\": \"sunt in cillum\"\n        }\n      ],\n      \"entitlementCount\": -13585313,\n      \"tags\": [\n        \"TAG_1\",\n        \"TAG_2\"\n      ]\n    },\n    {\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"John Doe\",\n      \"_type\": \"accountactivity\",\n      \"description\": \"ex adipisicing\",\n      \"created\": \"2018-06-25T20:22:28.104Z\",\n      \"modified\": \"2018-06-25T20:22:28.104Z\",\n      \"synced\": \"2018-06-25T20:22:28.104Z\",\n      \"enabled\": true,\n      \"requestable\": true,\n      \"requestCommentsRequired\": false,\n      \"owner\": {\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"John Doe\",\n        \"type\": \"IDENTITY\",\n        \"email\": \"dolor Excepteur non esse\"\n      },\n      \"source\": {\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"John Doe\"\n      },\n      \"entitlements\": [\n        {\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"John Doe\",\n          \"description\": \"veniam culpa\",\n          \"attribute\": \"aliquip\",\n          \"value\": \"in laborum aute\"\n        },\n        {\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"John Doe\",\n          \"description\": \"do fugiat sint nisi\",\n          \"attribute\": \"sint anim Ut\",\n          \"value\": \"non id minim officia in\"\n        }\n      ],\n      \"entitlementCount\": -1045981,\n      \"tags\": [\n        \"TAG_1\",\n        \"TAG_2\"\n      ]\n    }\n  ]\n}"
						},
						{
							"id": "b84f8cbd-6b85-476d-bbf0-d96cd487897d",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/aggregate?offset=0&limit=250&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"aggregate"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search query aggregation and returns aggregation result."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "cce26f20-8b7e-468b-ac7a-cd7e10efacdc",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indices\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"queryType\": \"SAILPOINT\",\n  \"queryVersion\": \"5.2\",\n  \"query\": {\n    \"query\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"innerHit\": {\n      \"query\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"queryDsl\": \"<object>\",\n  \"typeAheadQuery\": {\n    \"query\": \"<string>\",\n    \"field\": \"<string>\",\n    \"nestedType\": \"<string>\",\n    \"maxExpansions\": 10\n  },\n  \"includeNested\": true,\n  \"queryResultFilter\": {\n    \"includes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludes\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"aggregationType\": \"DSL\",\n  \"aggregationsVersion\": \"5.2\",\n  \"aggregationsDsl\": \"<object>\",\n  \"aggregations\": {\n    \"nested\": {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"metric\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"UNIQUE_COUNT\"\n    },\n    \"filter\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"value\": \"<string>\",\n      \"type\": \"TERM\"\n    },\n    \"bucket\": {\n      \"name\": \"<string>\",\n      \"field\": \"<string>\",\n      \"type\": \"TERMS\",\n      \"size\": \"<integer>\",\n      \"minDocCount\": \"<integer>\"\n    },\n    \"subAggregation\": {\n      \"nested\": {\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"metric\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"UNIQUE_COUNT\"\n      },\n      \"filter\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"value\": \"<string>\",\n        \"type\": \"TERM\"\n      },\n      \"bucket\": {\n        \"name\": \"<string>\",\n        \"field\": \"<string>\",\n        \"type\": \"TERMS\",\n        \"size\": \"<integer>\",\n        \"minDocCount\": \"<integer>\"\n      },\n      \"subAggregation\": {\n        \"nested\": {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"metric\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"UNIQUE_COUNT\"\n        },\n        \"filter\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"value\": \"<string>\",\n          \"type\": \"TERM\"\n        },\n        \"bucket\": {\n          \"name\": \"<string>\",\n          \"field\": \"<string>\",\n          \"type\": \"TERMS\",\n          \"size\": \"<integer>\",\n          \"minDocCount\": \"<integer>\"\n        }\n      }\n    }\n  },\n  \"sort\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"searchAfter\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"laborum751\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"anim6\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    },\n    \"site78\": {\n      \"type\": \"<string>\",\n      \"range\": {\n        \"lower\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        },\n        \"upper\": {\n          \"value\": \"<string>\",\n          \"inclusive\": false\n        }\n      },\n      \"terms\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"exclude\": false\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/search/aggregate?offset=0&limit=250&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"aggregate"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Performs a search query aggregation and returns aggregation result."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a Document by ID",
					"id": "0e5ec1f0-651f-4ce1-aa6b-5be0ea8aa2b4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/search/:index/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								":index",
								":id"
							],
							"variable": [
								{
									"key": "index",
									"value": "<string>",
									"description": "(Required) The index from which to fetch the specified document.\n\nThe currently supported index names are: *accessprofiles*, *accountactivities*, *accounts*, *aggregations*, *entitlements*, *events*, *identities*, and *roles*.\n"
								},
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) ID of the requested document."
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Fetches a single document from the specified index using the specified document ID."
					},
					"response": [
						{
							"id": "8e60c217-51e5-44a6-a200-f480ff5ab927",
							"name": "The requested document.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/search/:index/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										":index",
										":id"
									],
									"variable": [
										{
											"key": "index",
											"value": "<string>",
											"description": "(Required) The index from which to fetch the specified document.\n\nThe currently supported index names are: *accessprofiles*, *accountactivities*, *accounts*, *aggregations*, *entitlements*, *events*, *identities*, and *roles*.\n"
										},
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Fetches a single document from the specified index using the specified document ID."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"2c9180825a6c1adc015a71c9023f0818\",\n  \"name\": \"Cloud Eng\",\n  \"_type\": \"accessprofile\",\n  \"description\": \"Cloud Eng\",\n  \"created\": \"2017-02-24T20:21:23.145Z\",\n  \"modified\": \"2019-05-24T20:36:04.312Z\",\n  \"synced\": \"2020-02-18T05:30:20.414Z\",\n  \"enabled\": true,\n  \"requestable\": true,\n  \"requestCommentsRequired\": false,\n  \"owner\": {\n    \"id\": \"ff8081815757d36a015757d42e56031e\",\n    \"name\": \"SailPoint Support\",\n    \"type\": \"IDENTITY\",\n    \"email\": \"cloud-support@sailpoint.com\"\n  },\n  \"source\": {\n    \"id\": \"ff8081815757d4fb0157588f3d9d008f\",\n    \"name\": \"Employees\"\n  },\n  \"entitlements\": [\n    {\n      \"id\": \"2c918084575812550157589064f33b89\",\n      \"name\": \"CN=Cloud Engineering,DC=sailpoint,DC=COM\",\n      \"description\": \"mull\",\n      \"attribute\": \"memberOf\",\n      \"value\": \"CN=Cloud Engineering,DC=sailpoint,DC=COM\"\n    }\n  ],\n  \"entitlementCount\": 1,\n  \"tags\": [\n    \"TAG_1\",\n    \"TAG_2\"\n  ]\n}"
						},
						{
							"id": "b774913e-8a0f-4477-b4df-d85e4efbe878",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/search/:index/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										":index",
										":id"
									],
									"variable": [
										{
											"key": "index",
											"value": "<string>",
											"description": "(Required) The index from which to fetch the specified document.\n\nThe currently supported index names are: *accessprofiles*, *accountactivities*, *accounts*, *aggregations*, *entitlements*, *events*, *identities*, and *roles*.\n"
										},
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Fetches a single document from the specified index using the specified document ID."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "43df2d80-dc90-40be-be24-3dd5103b7330",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/search/:index/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										":index",
										":id"
									],
									"variable": [
										{
											"key": "index",
											"value": "<string>",
											"description": "(Required) The index from which to fetch the specified document.\n\nThe currently supported index names are: *accessprofiles*, *accountactivities*, *accounts*, *aggregations*, *entitlements*, *events*, *identities*, and *roles*.\n"
										},
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the requested document."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Fetches a single document from the specified index using the specified document ID."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "f9b6efe8-1d8f-4a62-ae44-a4892b067e06"
		},
		{
			"name": "service-desk-integrations",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a Service Desk integration by ID",
							"id": "a47ca596-3c72-47b7-94a4-e72a0fe77109",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the Service Desk integration to get"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Get an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"response": [
								{
									"id": "547cb11d-6b61-4af7-8abf-4297942b9c7a",
									"name": "ServiceDeskIntegrationDto with the given ID",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to get"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributes\": {\n    \"in_7\": -50182579\n  },\n  \"description\": \"A very nice Service Desk integration\",\n  \"name\": \"aName\",\n  \"type\": \"ServiceNowSDIM\",\n  \"id\": \"id12345\",\n  \"created\": \"2015-05-28T14:07:17.000Z\",\n  \"modified\": \"2015-05-28T14:07:17.000Z\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"xyzzy999\",\n  \"managedSources\": [\n    \"cupidatat laborum voluptate\",\n    \"irure Ut elit\"\n  ],\n  \"provisioningConfig\": {\n    \"universalManager\": false,\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"in occaecat\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}"
								},
								{
									"id": "154040ba-f6b2-44d1-a680-02e591f6b2db",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to get"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "1aa8b55d-85fd-441a-8647-7ae470d55838",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to get"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "d145f245-9f63-42db-9703-eac833fe342e",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to get"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "5779a55e-682a-4ab8-997c-8334be6015e0",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to get"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "ef43a034-85e3-4d46-b5da-dae5c19db7c4",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to get"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "63101451-07fc-4fdb-8a11-e25be80ce794",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to get"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a Service Desk integration by ID",
							"id": "eb8c9783-bd03-45c9-b3b3-f889f548cf43",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the Service Desk integration to update"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Update an existing Service Desk integration by ID with updated value in JSON form as the request body.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"response": [
								{
									"id": "9486be37-44b1-4c1c-81ce-f507b03b8f47",
									"name": "ServiceDeskIntegrationDto as updated",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing Service Desk integration by ID with updated value in JSON form as the request body.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributes\": {\n    \"in_7\": -50182579\n  },\n  \"description\": \"A very nice Service Desk integration\",\n  \"name\": \"aName\",\n  \"type\": \"ServiceNowSDIM\",\n  \"id\": \"id12345\",\n  \"created\": \"2015-05-28T14:07:17.000Z\",\n  \"modified\": \"2015-05-28T14:07:17.000Z\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"xyzzy999\",\n  \"managedSources\": [\n    \"cupidatat laborum voluptate\",\n    \"irure Ut elit\"\n  ],\n  \"provisioningConfig\": {\n    \"universalManager\": false,\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"in occaecat\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}"
								},
								{
									"id": "7b4926a3-b422-4072-a67c-5503c5094a92",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing Service Desk integration by ID with updated value in JSON form as the request body.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "210d0021-1c69-4d8e-9ba6-f4e73487b8c1",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing Service Desk integration by ID with updated value in JSON form as the request body.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "265def95-41fd-47ac-910f-45f840ee4879",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing Service Desk integration by ID with updated value in JSON form as the request body.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "4284cb17-2893-4f29-9a08-43d235818e31",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing Service Desk integration by ID with updated value in JSON form as the request body.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "7d048aa9-9591-40a9-9838-2269d655c551",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing Service Desk integration by ID with updated value in JSON form as the request body.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "a9211fb5-cf9d-4465-8929-bd4a71d13736",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing Service Desk integration by ID with updated value in JSON form as the request body.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a Service Desk integration by ID",
							"id": "6396614d-a27b-4e08-844b-71e9d89834d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of Service Desk integration to delete"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Delete an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"response": [
								{
									"id": "4416ef4a-1463-4f25-aa1b-fc3cee6b809e",
									"name": "Service Desk integration with the given ID successfully deleted",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of Service Desk integration to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Delete an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2accc98c-a3f2-4999-bce0-063f89a83451",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of Service Desk integration to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Delete an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "50754983-dad2-42cd-b2be-7feb22c521d0",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of Service Desk integration to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Delete an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "23d3c7d8-d2dd-4cbe-b9dc-f0ea5cf8cb8b",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of Service Desk integration to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Delete an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "4d574608-8450-4f99-b250-d38a76a5b8e1",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of Service Desk integration to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Delete an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "b2e8388c-c445-42b2-bddd-d0de0de87d6b",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of Service Desk integration to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Delete an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "2eec3993-989c-4d47-b2f0-cc509838a933",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of Service Desk integration to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Delete an existing Service Desk integration by ID.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Service Desk Integration Update - PATCH",
							"id": "8ce88664-9b83-4be9-a69e-df8cc9bc00b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[object Object]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the Service Desk integration to update"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Update an existing ServiceDeskIntegration by ID with a PATCH request."
							},
							"response": [
								{
									"id": "1d9a8e42-a29c-412f-8525-bf1195919cbb",
									"name": "ServiceDeskIntegrationDto as updated",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing ServiceDeskIntegration by ID with a PATCH request."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributes\": {\n    \"in_7\": -50182579\n  },\n  \"description\": \"A very nice Service Desk integration\",\n  \"name\": \"aName\",\n  \"type\": \"ServiceNowSDIM\",\n  \"id\": \"id12345\",\n  \"created\": \"2015-05-28T14:07:17.000Z\",\n  \"modified\": \"2015-05-28T14:07:17.000Z\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"xyzzy999\",\n  \"managedSources\": [\n    \"cupidatat laborum voluptate\",\n    \"irure Ut elit\"\n  ],\n  \"provisioningConfig\": {\n    \"universalManager\": false,\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"in occaecat\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}"
								},
								{
									"id": "3af01ca2-7b6a-4491-8489-76fa8161e03c",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing ServiceDeskIntegration by ID with a PATCH request."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "7e4899ab-68c8-4b97-9790-1eb04d3da440",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing ServiceDeskIntegration by ID with a PATCH request."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "62f59f24-559c-4834-85e1-914f6f5dd495",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing ServiceDeskIntegration by ID with a PATCH request."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "627c6b4e-e0d1-42a5-8d43-a25af18a2389",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing ServiceDeskIntegration by ID with a PATCH request."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "74aeab67-42db-4ab7-8cff-0d02d7655c22",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing ServiceDeskIntegration by ID with a PATCH request."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "dbfe00df-721f-48f0-870c-1e92b067d122",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the Service Desk integration to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update an existing ServiceDeskIntegration by ID with a PATCH request."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "cd80bf48-1bf2-4493-89bd-89ff83a7d580"
				},
				{
					"name": "status-check-configuration",
					"item": [
						{
							"name": "Get the time check configuration of queued SDIM tickets",
							"id": "c0f281df-2dfd-4575-8cfe-4b6b7f7d996b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"status-check-configuration"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Get the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"response": [
								{
									"id": "2c52b62a-5714-435f-88e7-afa913291ee7",
									"name": "QueuedCheckConfigDetails containing the configured values",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"non Ut sint\",\n  \"provisioningMaxStatusCheckDays\": \"sint deserunt\"\n}"
								},
								{
									"id": "38efb784-da46-4bae-8258-973e35b940e5",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "4f531d96-5dcc-44af-8039-d45203d88aa8",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "21c8322a-f903-426d-a119-3a0299bc9da6",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "923616a7-f1c1-40c2-9bfa-9c8219e0c399",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "129e6ece-1d6a-44de-9f6e-4f24b9e2ca06",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "b83220c6-3be2-4727-8c40-4bed218e9243",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Get the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update the time check configuration of queued SDIM tickets",
							"id": "32a03140-166d-428c-b955-427d224a6ffb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"<string>\",\n  \"provisioningMaxStatusCheckDays\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"status-check-configuration"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Update the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"response": [
								{
									"id": "6ad851f6-49d3-4f1a-af73-21fba20d4098",
									"name": "QueuedCheckConfigDetails as updated",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"<string>\",\n  \"provisioningMaxStatusCheckDays\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"non Ut sint\",\n  \"provisioningMaxStatusCheckDays\": \"sint deserunt\"\n}"
								},
								{
									"id": "c28f7f58-da2f-42b9-bbd0-ceaa8bf08355",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"<string>\",\n  \"provisioningMaxStatusCheckDays\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "bda5bc19-4185-469c-bf6f-0dd942178657",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"<string>\",\n  \"provisioningMaxStatusCheckDays\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "c8fce8fc-a783-4fb2-bb6e-f66c8f6e848b",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"<string>\",\n  \"provisioningMaxStatusCheckDays\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "ab5049b4-7d6c-4d04-bafa-549ab65d1ad6",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"<string>\",\n  \"provisioningMaxStatusCheckDays\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "4b8e1c63-58a1-4353-b99c-6e2629fa54e1",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"<string>\",\n  \"provisioningMaxStatusCheckDays\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "5afb5077-a7ba-4615-b2bd-59f6d825ced7",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"provisioningStatusCheckIntervalMinutes\": \"<string>\",\n  \"provisioningMaxStatusCheckDays\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-desk-integrations/status-check-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-desk-integrations",
												"status-check-configuration"
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Update the time check configuration of queued SDIM tickets.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "b0b8f196-4d7d-484e-94b7-95de62dcc160"
				},
				{
					"name": "List existing Service Desk Integrations",
					"id": "2cea7649-5b24-4b6a-8da2-9a1517fe7a75",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/service-desk-integrations?offset=0&limit=250&sorters=<string>&filters=<comma-separated>&count=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service-desk-integrations"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "sorters",
									"value": "<string>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
								},
								{
									"key": "filters",
									"value": "<comma-separated>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq*\n\n**type**: *eq, in*\n\n**cluster**: *eq, in*"
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Get a list of ServiceDeskIntegrationDto for existing Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
					},
					"response": [
						{
							"id": "b5502bb6-6aa8-4245-8e4c-851febc1cfb7",
							"name": "List of ServiceDeskIntegrationDto",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations?offset=0&limit=250&sorters=<string>&filters=<comma-separated>&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<string>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
										},
										{
											"key": "filters",
											"value": "<comma-separated>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq*\n\n**type**: *eq, in*\n\n**cluster**: *eq, in*"
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Get a list of ServiceDeskIntegrationDto for existing Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"attributes\": {\n      \"ipsum_a04\": -69573990.20960975,\n      \"ea9a\": \"exercitation aliquip ut nisi\"\n    },\n    \"description\": \"A very nice Service Desk integration\",\n    \"name\": \"aName\",\n    \"type\": \"ServiceNowSDIM\",\n    \"id\": \"id12345\",\n    \"created\": \"2015-05-28T14:07:17.000Z\",\n    \"modified\": \"2015-05-28T14:07:17.000Z\",\n    \"ownerRef\": {\n      \"type\": \"IDENTITY\"\n    },\n    \"clusterRef\": {\n      \"type\": \"CLUSTER\"\n    },\n    \"cluster\": \"xyzzy999\",\n    \"managedSources\": [\n      \"cupidatat aute\",\n      \"laborum dolor veniam eiusmod\"\n    ],\n    \"provisioningConfig\": {\n      \"universalManager\": true,\n      \"managedResourceRefs\": [\n        {\n          \"type\": \"SOURCE\"\n        },\n        {\n          \"type\": \"SOURCE\"\n        }\n      ],\n      \"planInitializerScript\": {\n        \"source\": \"ut anim tempor elit aliquip\"\n      }\n    },\n    \"beforeProvisioningRule\": {\n      \"type\": \"RULE\"\n    }\n  },\n  {\n    \"attributes\": {\n      \"Excepteur8\": 62750213,\n      \"cillum_0\": -87583242\n    },\n    \"description\": \"A very nice Service Desk integration\",\n    \"name\": \"aName\",\n    \"type\": \"ServiceNowSDIM\",\n    \"id\": \"id12345\",\n    \"created\": \"2015-05-28T14:07:17.000Z\",\n    \"modified\": \"2015-05-28T14:07:17.000Z\",\n    \"ownerRef\": {\n      \"type\": \"IDENTITY\"\n    },\n    \"clusterRef\": {\n      \"type\": \"CLUSTER\"\n    },\n    \"cluster\": \"xyzzy999\",\n    \"managedSources\": [\n      \"\",\n      \"quis magna et sed laborum\"\n    ],\n    \"provisioningConfig\": {\n      \"universalManager\": false,\n      \"managedResourceRefs\": [\n        {\n          \"type\": \"SOURCE\"\n        },\n        {\n          \"type\": \"SOURCE\"\n        }\n      ],\n      \"planInitializerScript\": {\n        \"source\": \"in\"\n      }\n    },\n    \"beforeProvisioningRule\": {\n      \"type\": \"RULE\"\n    }\n  }\n]"
						},
						{
							"id": "697c1bdd-c723-4a3e-8c68-bc5426b55b28",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations?offset=0&limit=250&sorters=<string>&filters=<comma-separated>&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<string>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
										},
										{
											"key": "filters",
											"value": "<comma-separated>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq*\n\n**type**: *eq, in*\n\n**cluster**: *eq, in*"
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Get a list of ServiceDeskIntegrationDto for existing Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "34868e3f-858f-42c0-ad98-6cb40642fa87",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations?offset=0&limit=250&sorters=<string>&filters=<comma-separated>&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<string>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
										},
										{
											"key": "filters",
											"value": "<comma-separated>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq*\n\n**type**: *eq, in*\n\n**cluster**: *eq, in*"
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Get a list of ServiceDeskIntegrationDto for existing Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "bd7a1aa8-d648-432f-a080-8bd07d29af7b",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations?offset=0&limit=250&sorters=<string>&filters=<comma-separated>&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<string>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
										},
										{
											"key": "filters",
											"value": "<comma-separated>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq*\n\n**type**: *eq, in*\n\n**cluster**: *eq, in*"
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Get a list of ServiceDeskIntegrationDto for existing Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "a253efb6-4a0d-41db-8204-c4ca9b728453",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations?offset=0&limit=250&sorters=<string>&filters=<comma-separated>&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<string>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
										},
										{
											"key": "filters",
											"value": "<comma-separated>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq*\n\n**type**: *eq, in*\n\n**cluster**: *eq, in*"
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Get a list of ServiceDeskIntegrationDto for existing Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "4e53c0c4-96a9-44b5-8c01-72ee5ed4e4c1",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations?offset=0&limit=250&sorters=<string>&filters=<comma-separated>&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<string>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
										},
										{
											"key": "filters",
											"value": "<comma-separated>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq*\n\n**type**: *eq, in*\n\n**cluster**: *eq, in*"
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Get a list of ServiceDeskIntegrationDto for existing Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "f3b7dc1f-21b4-433a-8cc6-084e4b7140d9",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations?offset=0&limit=250&sorters=<string>&filters=<comma-separated>&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "sorters",
											"value": "<string>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
										},
										{
											"key": "filters",
											"value": "<comma-separated>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq*\n\n**type**: *eq, in*\n\n**cluster**: *eq, in*"
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Get a list of ServiceDeskIntegrationDto for existing Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new Service Desk integration",
					"id": "43525a54-1170-4a17-8309-24b60bec9515",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/service-desk-integrations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service-desk-integrations"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Create a new Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
					},
					"response": [
						{
							"id": "8b3555cd-f9ab-4e47-8c7d-58e79ce6d800",
							"name": "details of the created integration",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Create a new Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attributes\": {\n    \"in_7\": -50182579\n  },\n  \"description\": \"A very nice Service Desk integration\",\n  \"name\": \"aName\",\n  \"type\": \"ServiceNowSDIM\",\n  \"id\": \"id12345\",\n  \"created\": \"2015-05-28T14:07:17.000Z\",\n  \"modified\": \"2015-05-28T14:07:17.000Z\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"xyzzy999\",\n  \"managedSources\": [\n    \"cupidatat laborum voluptate\",\n    \"irure Ut elit\"\n  ],\n  \"provisioningConfig\": {\n    \"universalManager\": false,\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"in occaecat\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}"
						},
						{
							"id": "09cf884c-8f22-4568-93ba-67a5e62f0e92",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Create a new Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "5a312c4f-7124-40ed-91a9-b6bca6b0ca76",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Create a new Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "f285c3b6-392a-48ff-8030-f8838e3f2bb6",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Create a new Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "800b144e-70a4-4c80-b398-1f5a61790653",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Create a new Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "524d32eb-0962-4084-85ae-d1b83516b551",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Create a new Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "042e269d-ec38-42fa-b9ca-bde6313eebea",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\": {\n    \"ametf52\": false\n  },\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"ServiceNowSDIM\",\n  \"ownerRef\": {\n    \"type\": \"IDENTITY\"\n  },\n  \"clusterRef\": {\n    \"type\": \"CLUSTER\"\n  },\n  \"cluster\": \"<string>\",\n  \"managedSources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningConfig\": {\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"<string>\"\n    }\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"RULE\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Create a new Service Desk Integrations.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Service Desk Integration Types List.",
					"id": "703387cd-6542-4777-baa4-630fce400f7c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/service-desk-integrations/types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service-desk-integrations",
								"types"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API endpoint returns the current list of supported Service Desk integration types.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
					},
					"response": [
						{
							"id": "db5c0e04-7357-43fd-b0b8-2958c2e82934",
							"name": "Responds with an array of the currently supported Service Desk integration types.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"types"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns the current list of supported Service Desk integration types.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"type\": \"aType\",\n    \"scriptName\": \"aScriptName\",\n    \"name\": \"aName\"\n  },\n  {\n    \"type\": \"aType\",\n    \"scriptName\": \"aScriptName\",\n    \"name\": \"aName\"\n  }\n]"
						},
						{
							"id": "25a5f1b4-ccde-48ed-b55b-df2aee745a41",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"types"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns the current list of supported Service Desk integration types.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "00e3985a-a2f3-422c-b477-1db6eaf9b79c",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"types"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns the current list of supported Service Desk integration types.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "83a054b6-35a3-432e-a5f9-49eeb6dbac8b",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"types"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns the current list of supported Service Desk integration types.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "5a7a0a78-fe32-4e92-b7b4-fa37086b1074",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"types"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns the current list of supported Service Desk integration types.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "7a895cb9-674e-4d16-805f-6f5d0489adf4",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"types"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns the current list of supported Service Desk integration types.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "13bc4903-e036-45d7-a908-2a35da0da08f",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"types"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns the current list of supported Service Desk integration types.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Service Desk integration template by scriptName.",
					"id": "55697674-3d3b-49d1-b131-61f97b756364",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/service-desk-integrations/templates/:scriptName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service-desk-integrations",
								"templates",
								":scriptName"
							],
							"variable": [
								{
									"key": "scriptName",
									"value": "<string>",
									"description": "(Required) The scriptName value of the Service Desk integration template to get"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API endpoint returns an existing Service Desk integration template by scriptName.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
					},
					"response": [
						{
							"id": "0be9f989-ef6a-4005-9948-7345ac584501",
							"name": "Responds with the ServiceDeskIntegrationTemplateDto with the specified scriptName.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/templates/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"templates",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) The scriptName value of the Service Desk integration template to get"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns an existing Service Desk integration template by scriptName.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attributes\": {\n    \"amet_19\": true,\n    \"ullamco12a\": \"dolor elit\"\n  },\n  \"name\": \"aName\",\n  \"provisioningConfig\": {\n    \"universalManager\": true,\n    \"managedResourceRefs\": [\n      {\n        \"type\": \"SOURCE\"\n      },\n      {\n        \"type\": \"SOURCE\"\n      }\n    ],\n    \"planInitializerScript\": {\n      \"source\": \"laboris fugiat aute incididu\"\n    }\n  },\n  \"type\": \"Web Service SDIM\",\n  \"id\": \"id12345\",\n  \"created\": \"2015-05-28T14:07:17.000Z\",\n  \"modified\": \"2015-05-28T14:07:17.000Z\"\n}"
						},
						{
							"id": "59890f64-41a6-40e3-827a-4ebc92ca032c",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/templates/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"templates",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) The scriptName value of the Service Desk integration template to get"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns an existing Service Desk integration template by scriptName.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "2986d6c4-19e8-4e36-9fc3-8cab42a130bf",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/templates/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"templates",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) The scriptName value of the Service Desk integration template to get"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns an existing Service Desk integration template by scriptName.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "6966ff7a-d312-47ae-b17c-33ce0eb5e21e",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/templates/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"templates",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) The scriptName value of the Service Desk integration template to get"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns an existing Service Desk integration template by scriptName.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "346e1b1e-7a48-47e6-b7cf-4b59e1265360",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/templates/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"templates",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) The scriptName value of the Service Desk integration template to get"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns an existing Service Desk integration template by scriptName.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "23ab5678-8b4b-49a1-8a53-388ad65af23b",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/templates/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"templates",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) The scriptName value of the Service Desk integration template to get"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns an existing Service Desk integration template by scriptName.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "64ff78c1-8dc9-46a9-b997-f8984f02d2d4",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-desk-integrations/templates/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-desk-integrations",
										"templates",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) The scriptName value of the Service Desk integration template to get"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API endpoint returns an existing Service Desk integration template by scriptName.  A token with Org Admin or Service Desk Admin authority is required to access this endpoint."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "cc9ebe0b-46c4-48e6-a031-39e583de99a8"
		},
		{
			"name": "sources",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "schemas",
							"item": [
								{
									"name": "accounts",
									"item": [
										{
											"name": "Downloads source accounts schema template",
											"id": "4bb67c06-5750-4a3e-a98d-f96ad6681a6a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/csv"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":id",
														"schemas",
														"accounts"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API downloads the CSV schema that defines the account attributes on a source.\n>**NOTE: This API is designated only for Delimited File sources.**"
											},
											"response": [
												{
													"id": "9f7f0a74-2a02-4e98-af86-b1c9b9fde470",
													"name": "Successfully downloaded the file",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the account attributes on a source.\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/csv"
														}
													],
													"cookie": [],
													"body": "id,name,givenName,familyName,e-mail,location,manager,groups,startDate,endDate"
												},
												{
													"id": "580169ca-84e3-4b0a-9785-efbdcc0cf752",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the account attributes on a source.\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "e6c89a32-e701-444d-afbb-f98a64acfabb",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the account attributes on a source.\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "858365f3-7370-4484-ba63-d875175fff8d",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the account attributes on a source.\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "4fdf73e5-5c09-446c-b8f5-54a76e9064e3",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the account attributes on a source.\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "9077fbc1-2ab2-4f51-8c4b-1e0757ee3fda",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the account attributes on a source.\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "17b6fcca-72e8-4037-aee8-b1556ed87893",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the account attributes on a source.\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Uploads source accounts schema template",
											"id": "6dca20b6-26a0-48bb-ac77-75ca6ae8f091",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"value": null
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":id",
														"schemas",
														"accounts"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API uploads a source schema template file to configure a source's account attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Account Schema** -> **Options** -> **Download Schema**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
											},
											"response": [
												{
													"id": "044df50e-9bd0-4c9a-8796-b691e97dd847",
													"name": "Successfully uploaded the file",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's account attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Account Schema** -> **Options** -> **Download Schema**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"2c9180835d191a86015d28455b4a2329\",\n  \"name\": \"account\",\n  \"nativeObjectType\": \"User\",\n  \"identityAttribute\": \"sAMAccountName\",\n  \"displayAttribute\": \"distinguishedName\",\n  \"hierarchyAttribute\": \"memberOf\",\n  \"includePermissions\": false,\n  \"features\": [\n    \"PROVISIONING\",\n    \"NO_PERMISSIONS_PROVISIONING\",\n    \"GROUPS_HAVE_MEMBERS\"\n  ],\n  \"configuration\": {\n    \"groupMemberAttribute\": \"member\"\n  },\n  \"attributes\": [\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"INT\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"non Duis nostrud Lorem\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    },\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"LONG\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"enim tempor\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    }\n  ],\n  \"created\": \"2019-12-24T22:32:58.104Z\",\n  \"modified\": \"2019-12-31T20:22:28.104Z\"\n}"
												},
												{
													"id": "b946020d-aa64-429b-8c4e-0cd4fd6b9c6a",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's account attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Account Schema** -> **Options** -> **Download Schema**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "334fb2d7-d7e5-4647-bab9-29a2fafe0fe2",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's account attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Account Schema** -> **Options** -> **Download Schema**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "ca8a8320-2c56-4026-8e8f-7075c91a6ff8",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's account attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Account Schema** -> **Options** -> **Download Schema**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "1323d354-b654-4c87-8fcb-27c0748179fc",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's account attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Account Schema** -> **Options** -> **Download Schema**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "e13f5ae1-a284-423d-9b66-dca11a35932c",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"accounts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's account attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Account Schema** -> **Options** -> **Download Schema**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "db299d78-5b57-408f-9861-f6d06996c364"
								},
								{
									"name": "entitlements",
									"item": [
										{
											"name": "Downloads source entitlements schema template",
											"id": "e0266f42-389b-4fb0-a561-8a18d8dff963",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/csv"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":id",
														"schemas",
														"entitlements"
													],
													"query": [
														{
															"key": "schemaName",
															"value": "<string>",
															"description": "Name of entitlement schema"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API downloads the CSV schema that defines the entitlement attributes on a source.\n\n>**NOTE: This API is designated only for Delimited File sources.**"
											},
											"response": [
												{
													"id": "63502475-2c27-4869-92bb-3e79cf272f52",
													"name": "Successfully downloaded the file",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the entitlement attributes on a source.\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/csv"
														}
													],
													"cookie": [],
													"body": "id,name,displayName,created,description,modified,entitlements,groups,permissions"
												},
												{
													"id": "ac2a43e5-76d4-4d08-9422-3120ff3270bc",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the entitlement attributes on a source.\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "c1f8cec8-5349-41ec-a79b-012c83177ceb",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the entitlement attributes on a source.\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "bb56a95a-3565-446f-a79b-ab2f80c6ad84",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the entitlement attributes on a source.\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "68b248ae-d714-4c55-be0a-c8e839a66ea2",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the entitlement attributes on a source.\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "e70eca66-0fa4-4021-8c64-ce38c99d3853",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the entitlement attributes on a source.\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "ecc68cea-20f2-4e52-9508-138f2ad2c967",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/csv"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API downloads the CSV schema that defines the entitlement attributes on a source.\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Uploads source entitlements schema template",
											"id": "8fc96b94-2ca5-4284-8b97-b137faa8dade",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"value": null
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":id",
														"schemas",
														"entitlements"
													],
													"query": [
														{
															"key": "schemaName",
															"value": "<string>",
															"description": "Name of entitlement schema"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API uploads a source schema template file to configure a source's entitlement attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Import Entitlements** -> **Download**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
											},
											"response": [
												{
													"id": "a7935674-078e-4e49-bc6f-e997367877bf",
													"name": "Successfully uploaded the file",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's entitlement attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Import Entitlements** -> **Download**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"2c9180835d191a86015d28455b4a2329\",\n  \"name\": \"account\",\n  \"nativeObjectType\": \"User\",\n  \"identityAttribute\": \"sAMAccountName\",\n  \"displayAttribute\": \"distinguishedName\",\n  \"hierarchyAttribute\": \"memberOf\",\n  \"includePermissions\": false,\n  \"features\": [\n    \"PROVISIONING\",\n    \"NO_PERMISSIONS_PROVISIONING\",\n    \"GROUPS_HAVE_MEMBERS\"\n  ],\n  \"configuration\": {\n    \"groupMemberAttribute\": \"member\"\n  },\n  \"attributes\": [\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"INT\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"non Duis nostrud Lorem\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    },\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"LONG\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"enim tempor\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    }\n  ],\n  \"created\": \"2019-12-24T22:32:58.104Z\",\n  \"modified\": \"2019-12-31T20:22:28.104Z\"\n}"
												},
												{
													"id": "a022b413-a58e-4822-b338-6fb920712728",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's entitlement attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Import Entitlements** -> **Download**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "110ac2ec-f124-4414-89f3-b76812a26206",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's entitlement attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Import Entitlements** -> **Download**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "71b572ec-5d19-476f-8d0a-6dd93de763a5",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's entitlement attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Import Entitlements** -> **Download**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "72a224c2-9f86-4a27-8cea-f9a9be34f12e",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's entitlement attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Import Entitlements** -> **Download**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "3c5a478f-5663-4419-b508-fa94933f4052",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:id/schemas/entitlements?schemaName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":id",
																"schemas",
																"entitlements"
															],
															"query": [
																{
																	"key": "schemaName",
																	"value": "<string>",
																	"description": "Name of entitlement schema"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The Source id"
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API uploads a source schema template file to configure a source's entitlement attributes.\n\nTo retrieve the file to modify and upload, log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources** -> **`<SourceName>`** -> **Import Data** -> **Import Entitlements** -> **Download**\n\n>**NOTE: This API is designated only for Delimited File sources.**"
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "4ded550e-29b6-426d-91fe-d9d3c2c99bf0"
								}
							],
							"id": "6339ec44-c825-4d7e-86fa-33f90c3a54b7"
						},
						{
							"name": "Get Source by ID",
							"id": "ec957991-6552-4b69-848e-5ad808bc4372",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The Source id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This end-point gets a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "b38d792a-eb56-4d72-9929-52375fb29099",
									"name": "A Source object",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point gets a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808568c529c60168cca6f90c1324\",\n  \"description\": \"This is the corporate directory.\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"cluster\": {\n    \"type\": \"CLUSTER\",\n    \"name\": \"Corporate Cluster\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"ACCOUNT_CORRELATION_CONFIG\",\n    \"name\": \"Directory [source-62867] Account Correlation\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"manager\",\n    \"identityAttribute\": \"manager\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"account\"\n    },\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"group\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"PASSWORD_POLICY\",\n      \"name\": \"Corporate Password Policy\"\n    }\n  ],\n  \"features\": [\n    \"SYNC_PROVISIONING\",\n    \"MANAGER_LOOKUP\",\n    \"SEARCH\",\n    \"PROVISIONING\",\n    \"AUTHENTICATE\",\n    \"GROUP_PROVISIONING\",\n    \"PASSWORD\"\n  ],\n  \"type\": \"OpenLDAP - Direct\",\n  \"connector\": \"active-directory\",\n  \"connectorClass\": \"sailpoint.connector.LDAPConnector\",\n  \"connectorAttributes\": {\n    \"healthCheckTimeout\": 30,\n    \"authSearchAttributes\": [\n      \"cn\",\n      \"uid\",\n      \"mail\"\n    ]\n  },\n  \"deleteThreshold\": 10,\n  \"authoritative\": false,\n  \"managementWorkgroup\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"healthy\": true,\n  \"status\": \"SOURCE_STATE_HEALTHY\",\n  \"since\": \"2021-09-28T15:48:29.3801666300Z\",\n  \"connectorId\": \"active-directory\",\n  \"connectorName\": \"Active Directory\",\n  \"connectionType\": \"file\",\n  \"connectorImplementstionId\": \"delimited-file\"\n}"
								},
								{
									"id": "ce365a1c-7b8b-4d3e-926f-a8dd7e9bdd10",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point gets a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "91f1f510-c4d0-4f55-a337-a213ebbedc6d",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point gets a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "c30f19de-8d80-421c-a747-189ed11e0274",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point gets a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "9385b3cb-5d20-443c-9993-b0817256b9f5",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point gets a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "3c40f3f9-02d4-4de8-a0b1-8b4d1351c915",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point gets a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "1dbd6485-43c7-404d-a099-7dc77804747c",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point gets a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Source (Full)",
							"id": "01bec3cc-531b-43e7-af1c-4f0725c5ed60",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sources/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The Source id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source\nconfiguration is completely replaced.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\n"
							},
							"response": [
								{
									"id": "482e4c2e-db75-4bb1-b6ee-92f5637b06ee",
									"name": "Updated Source object. Any passwords will only show the the encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based services, per IdentityNow security design.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source\nconfiguration is completely replaced.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\n"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808568c529c60168cca6f90c1324\",\n  \"description\": \"This is the corporate directory.\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"cluster\": {\n    \"type\": \"CLUSTER\",\n    \"name\": \"Corporate Cluster\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"ACCOUNT_CORRELATION_CONFIG\",\n    \"name\": \"Directory [source-62867] Account Correlation\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"manager\",\n    \"identityAttribute\": \"manager\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"account\"\n    },\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"group\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"PASSWORD_POLICY\",\n      \"name\": \"Corporate Password Policy\"\n    }\n  ],\n  \"features\": [\n    \"SYNC_PROVISIONING\",\n    \"MANAGER_LOOKUP\",\n    \"SEARCH\",\n    \"PROVISIONING\",\n    \"AUTHENTICATE\",\n    \"GROUP_PROVISIONING\",\n    \"PASSWORD\"\n  ],\n  \"type\": \"OpenLDAP - Direct\",\n  \"connector\": \"active-directory\",\n  \"connectorClass\": \"sailpoint.connector.LDAPConnector\",\n  \"connectorAttributes\": {\n    \"healthCheckTimeout\": 30,\n    \"authSearchAttributes\": [\n      \"cn\",\n      \"uid\",\n      \"mail\"\n    ]\n  },\n  \"deleteThreshold\": 10,\n  \"authoritative\": false,\n  \"managementWorkgroup\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"healthy\": true,\n  \"status\": \"SOURCE_STATE_HEALTHY\",\n  \"since\": \"2021-09-28T15:48:29.3801666300Z\",\n  \"connectorId\": \"active-directory\",\n  \"connectorName\": \"Active Directory\",\n  \"connectionType\": \"file\",\n  \"connectorImplementstionId\": \"delimited-file\"\n}"
								},
								{
									"id": "027096dc-468d-4a3c-94de-5803cc2474df",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source\nconfiguration is completely replaced.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\n"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "669e1c98-8a4c-479f-9322-27d9a82690e0",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source\nconfiguration is completely replaced.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\n"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "3e63ad56-01df-45ba-8150-50a0c92942c0",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source\nconfiguration is completely replaced.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\n"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "81793df2-bc75-4859-9dc9-2ea5dfda326f",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source\nconfiguration is completely replaced.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\n"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "16c60a58-2464-49f0-b17a-945e97d659b1",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source\nconfiguration is completely replaced.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\n"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "70e7849a-621f-4989-a7f8-27dd158f1df6",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source\nconfiguration is completely replaced.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\n"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Source (Partial)",
							"id": "6bee5ff3-4bd7-47bf-bcfb-71036b5c0716",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json-patch+json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[object Object],[object Object]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sources/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The Source id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API partially updates a source in IdentityNow, using a list of patch operations according to the\n[JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* created\n* modified\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.\n"
							},
							"response": [
								{
									"id": "4deb8c9d-41ee-4297-b6f5-3ae89ee735c8",
									"name": "Updated Source object. Any passwords will only show the the encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based services, per IdentityNow security design.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API partially updates a source in IdentityNow, using a list of patch operations according to the\n[JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* created\n* modified\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.\n"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808568c529c60168cca6f90c1324\",\n  \"description\": \"This is the corporate directory.\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"cluster\": {\n    \"type\": \"CLUSTER\",\n    \"name\": \"Corporate Cluster\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"ACCOUNT_CORRELATION_CONFIG\",\n    \"name\": \"Directory [source-62867] Account Correlation\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"manager\",\n    \"identityAttribute\": \"manager\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"account\"\n    },\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"group\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"PASSWORD_POLICY\",\n      \"name\": \"Corporate Password Policy\"\n    }\n  ],\n  \"features\": [\n    \"SYNC_PROVISIONING\",\n    \"MANAGER_LOOKUP\",\n    \"SEARCH\",\n    \"PROVISIONING\",\n    \"AUTHENTICATE\",\n    \"GROUP_PROVISIONING\",\n    \"PASSWORD\"\n  ],\n  \"type\": \"OpenLDAP - Direct\",\n  \"connector\": \"active-directory\",\n  \"connectorClass\": \"sailpoint.connector.LDAPConnector\",\n  \"connectorAttributes\": {\n    \"healthCheckTimeout\": 30,\n    \"authSearchAttributes\": [\n      \"cn\",\n      \"uid\",\n      \"mail\"\n    ]\n  },\n  \"deleteThreshold\": 10,\n  \"authoritative\": false,\n  \"managementWorkgroup\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"healthy\": true,\n  \"status\": \"SOURCE_STATE_HEALTHY\",\n  \"since\": \"2021-09-28T15:48:29.3801666300Z\",\n  \"connectorId\": \"active-directory\",\n  \"connectorName\": \"Active Directory\",\n  \"connectionType\": \"file\",\n  \"connectorImplementstionId\": \"delimited-file\"\n}"
								},
								{
									"id": "c28487e4-dc86-44fd-9808-fe6ef8f59b72",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API partially updates a source in IdentityNow, using a list of patch operations according to the\n[JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* created\n* modified\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.\n"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "a4fed9a5-0523-4b3e-8817-1658799b2e47",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API partially updates a source in IdentityNow, using a list of patch operations according to the\n[JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* created\n* modified\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.\n"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "f8b7b6d5-1a59-442c-9c9b-b47fcc2c249f",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API partially updates a source in IdentityNow, using a list of patch operations according to the\n[JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* created\n* modified\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.\n"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "74b840dc-40bb-4e4e-9c2b-0f6189be9c7f",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API partially updates a source in IdentityNow, using a list of patch operations according to the\n[JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* created\n* modified\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.\n"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "d3994326-267b-4b1f-989b-f39954eca2f0",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API partially updates a source in IdentityNow, using a list of patch operations according to the\n[JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* created\n* modified\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.\n"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "d51fa2f0-523f-40bc-9bd8-48b09fe48c6c",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object],[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API partially updates a source in IdentityNow, using a list of patch operations according to the\n[JSON Patch](https://tools.ietf.org/html/rfc6902) standard.\n\nSome fields are immutable and cannot be changed, such as:\n\n* id\n* type\n* authoritative\n* created\n* modified\n* connector\n* connectorClass\n* passwordPolicies\n\nAttempts to modify these fields will result in a 400 error.\n\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.\n"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Source by ID",
							"id": "25f0d782-be63-447a-8f75-8ec49f62c267",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The Source id"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This end-point deletes a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\nAll of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`"
							},
							"response": [
								{
									"id": "3470be67-8503-4c56-895a-72436791f476",
									"name": "Accepted - Returned if the request was successfully accepted into the system.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point deletes a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\nAll of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`"
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"TASK_RESULT\",\n  \"id\": \"2c91808779ecf55b0179f720942f181a\",\n  \"name\": null\n}"
								},
								{
									"id": "73fa0288-dea7-4708-bf3e-620673d7bf6b",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point deletes a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\nAll of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "ed10176d-f0fa-483d-b83e-1a7f87d475cb",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point deletes a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\nAll of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "6beaad96-be5d-4b08-80ba-435890250d8d",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point deletes a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\nAll of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "f08d870d-5aad-4ab7-ae65-59d86ad8eeda",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point deletes a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\nAll of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "b545c3eb-b4be-4ef2-9fdb-31f5059385c1",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point deletes a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\nAll of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "b914bb06-da48-46dc-95ec-c646a9622339",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point deletes a specific source in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.\nAll of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "adda961d-1d15-4438-9761-8cb0ce6eb117"
				},
				{
					"name": "{source Id}",
					"item": [
						{
							"name": "provisioning-policies",
							"item": [
								{
									"name": "{usage Type}",
									"item": [
										{
											"name": "Get Provisioning Policy by UsageType",
											"id": "b5d2ce60-6e53-43c9-b21b-a7a920545c7a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														":usageType"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "usageType",
															"value": "<string>",
															"description": "(Required) The type of ProvisioningPolicy usage."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
											},
											"response": [
												{
													"id": "ab5656c3-5b8a-4128-b5d5-30b996f61fb2",
													"name": "The requested ProvisioningPolicyDto was successfully retrieved.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"in in laborum deserunt\",\n  \"description\": \"minim magna\",\n  \"usageType\": \"UPDATE\",\n  \"fields\": [\n    {\n      \"name\": \"userName\",\n      \"transform\": {\n        \"type\": \"rule\",\n        \"attributes\": {\n          \"name\": \"Create Unique LDAP Attribute\"\n        }\n      },\n      \"attributes\": {\n        \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n        \"cloudMaxUniqueChecks\": \"50\",\n        \"cloudMaxSize\": \"20\",\n        \"cloudRequired\": \"true\"\n      },\n      \"isRequired\": false,\n      \"type\": \"string\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"userName\",\n      \"transform\": {\n        \"type\": \"rule\",\n        \"attributes\": {\n          \"name\": \"Create Unique LDAP Attribute\"\n        }\n      },\n      \"attributes\": {\n        \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n        \"cloudMaxUniqueChecks\": \"50\",\n        \"cloudMaxSize\": \"20\",\n        \"cloudRequired\": \"true\"\n      },\n      \"isRequired\": false,\n      \"type\": \"string\",\n      \"isMultiValued\": false\n    }\n  ]\n}"
												},
												{
													"id": "aea16886-1957-4207-8b47-69aadcb4e149",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "403e9862-1139-480f-8e46-29cd009185af",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "c8e75b90-b079-4a80-942e-778134bc8e8e",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "9943f732-aade-43cb-97c5-890376ce634a",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "719e0eb9-456a-43d9-8628-0d3c6da9b033",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "370ba64f-0afc-4b91-b058-3371fe08b5d0",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update Provisioning Policy by UsageType",
											"id": "72775104-79f6-42b6-8c40-9bb89c4dd158",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														":usageType"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "usageType",
															"value": "<string>",
															"description": "(Required) The type of ProvisioningPolicy usage."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
											},
											"response": [
												{
													"id": "e88d6a4e-b365-4f2d-b373-b1c6b23f71dc",
													"name": "The ProvisioningPolicyDto was successfully replaced.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"in in laborum deserunt\",\n  \"description\": \"minim magna\",\n  \"usageType\": \"UPDATE\",\n  \"fields\": [\n    {\n      \"name\": \"userName\",\n      \"transform\": {\n        \"type\": \"rule\",\n        \"attributes\": {\n          \"name\": \"Create Unique LDAP Attribute\"\n        }\n      },\n      \"attributes\": {\n        \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n        \"cloudMaxUniqueChecks\": \"50\",\n        \"cloudMaxSize\": \"20\",\n        \"cloudRequired\": \"true\"\n      },\n      \"isRequired\": false,\n      \"type\": \"string\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"userName\",\n      \"transform\": {\n        \"type\": \"rule\",\n        \"attributes\": {\n          \"name\": \"Create Unique LDAP Attribute\"\n        }\n      },\n      \"attributes\": {\n        \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n        \"cloudMaxUniqueChecks\": \"50\",\n        \"cloudMaxSize\": \"20\",\n        \"cloudRequired\": \"true\"\n      },\n      \"isRequired\": false,\n      \"type\": \"string\",\n      \"isMultiValued\": false\n    }\n  ]\n}"
												},
												{
													"id": "1654ba21-9e1d-4027-8e3b-5b42a2345b10",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "361567da-8a90-4844-a74f-6efb22ffd98b",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "a9b61d0a-652b-4d11-94d8-d54c75ce2286",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "58210eea-49ae-4e4e-84c0-55fa0210ac0a",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "ddd8a036-8023-463d-b059-25dbb793fffb",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "5f8f4a51-7f14-406f-b0bb-66d57537a0a1",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Partial update of Provisioning Policy",
											"id": "ee667932-91ea-4f37-b8fa-dacd6f6d7708",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json-patch+json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[object Object],[object Object]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														":usageType"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "usageType",
															"value": "<string>",
															"description": "(Required) The type of ProvisioningPolicy usage."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API selectively updates an existing Provisioning Policy using a JSONPatch payload.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
											},
											"response": [
												{
													"id": "582e7097-d66e-470d-bf76-efbca1474997",
													"name": "The ProvisioningPolicyDto was successfully updated.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API selectively updates an existing Provisioning Policy using a JSONPatch payload.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"in in laborum deserunt\",\n  \"description\": \"minim magna\",\n  \"usageType\": \"UPDATE\",\n  \"fields\": [\n    {\n      \"name\": \"userName\",\n      \"transform\": {\n        \"type\": \"rule\",\n        \"attributes\": {\n          \"name\": \"Create Unique LDAP Attribute\"\n        }\n      },\n      \"attributes\": {\n        \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n        \"cloudMaxUniqueChecks\": \"50\",\n        \"cloudMaxSize\": \"20\",\n        \"cloudRequired\": \"true\"\n      },\n      \"isRequired\": false,\n      \"type\": \"string\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"userName\",\n      \"transform\": {\n        \"type\": \"rule\",\n        \"attributes\": {\n          \"name\": \"Create Unique LDAP Attribute\"\n        }\n      },\n      \"attributes\": {\n        \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n        \"cloudMaxUniqueChecks\": \"50\",\n        \"cloudMaxSize\": \"20\",\n        \"cloudRequired\": \"true\"\n      },\n      \"isRequired\": false,\n      \"type\": \"string\",\n      \"isMultiValued\": false\n    }\n  ]\n}"
												},
												{
													"id": "9d8b063a-c83f-45fa-afe9-bf382508d2d6",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API selectively updates an existing Provisioning Policy using a JSONPatch payload.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "dbfdf1ca-e135-4842-9f70-118488d2850d",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API selectively updates an existing Provisioning Policy using a JSONPatch payload.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "d6b3246d-c607-45c0-a96c-45696a556ae9",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API selectively updates an existing Provisioning Policy using a JSONPatch payload.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "898b1a0a-4853-4a34-bae2-0fa1677d4072",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API selectively updates an existing Provisioning Policy using a JSONPatch payload.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "ff4896f8-382d-47a0-b4bc-9ebb33e56194",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API selectively updates an existing Provisioning Policy using a JSONPatch payload.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "f3e1c5f7-e1d7-4e0b-80b0-d232a0a6f0e4",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API selectively updates an existing Provisioning Policy using a JSONPatch payload.\nA token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Provisioning Policy by UsageType",
											"id": "0406fac0-8f72-4c5d-8d6d-3b0cc528f739",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														":usageType"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "usageType",
															"value": "<string>",
															"description": "(Required) The type of ProvisioningPolicy usage."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Deletes the provisioning policy with the specified usage on an application.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"response": [
												{
													"id": "359e1e18-6fd1-4f06-aae9-f6f57f0aa1dd",
													"name": "The ProvisioningPolicyDto was successfully deleted.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Deletes the provisioning policy with the specified usage on an application.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "78c2128e-2d6f-4ef9-bdc6-51f2ac02e3f6",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Deletes the provisioning policy with the specified usage on an application.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "69c5d72c-b567-468a-b6f4-c4578f737cc8",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Deletes the provisioning policy with the specified usage on an application.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "af5cda46-1649-4c7c-a720-666377a8d050",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Deletes the provisioning policy with the specified usage on an application.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "84c94a90-1a2d-45e4-ab53-e34e3fdfa34e",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Deletes the provisioning policy with the specified usage on an application.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "85d6ad85-f8be-44a1-bc58-82e1f367caff",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Deletes the provisioning policy with the specified usage on an application.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "773c239d-9243-4291-9574-57246773d9fd",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "accessToken",
																	"type": "any"
																},
																{
																	"key": "addTokenTo",
																	"type": "any"
																},
																{
																	"key": "callBackUrl",
																	"type": "any"
																},
																{
																	"key": "authUrl",
																	"type": "any"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://tenant.api.identitynow.com/oauth/token",
																	"type": "string"
																},
																{
																	"key": "clientId",
																	"type": "any"
																},
																{
																	"key": "clientSecret",
																	"type": "any"
																},
																{
																	"key": "clientAuth",
																	"type": "any"
																},
																{
																	"key": "grantType",
																	"type": "any"
																},
																{
																	"key": "scope",
																	"value": "sp:scopes:default sp:scopes:all",
																	"type": "string"
																},
																{
																	"key": "username",
																	"type": "any"
																},
																{
																	"key": "password",
																	"type": "any"
																},
																{
																	"key": "tokenType",
																	"type": "any"
																},
																{
																	"key": "redirectUri",
																	"type": "any"
																},
																{
																	"key": "refreshToken",
																	"type": "any"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/:usageType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"provisioning-policies",
																":usageType"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source ID."
																},
																{
																	"key": "usageType",
																	"value": "<string>",
																	"description": "(Required) The type of ProvisioningPolicy usage."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Deletes the provisioning policy with the specified usage on an application.\nA token with API, or ORG_ADMIN authority is required to call this API."
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "0d8b0ddd-9af2-48f6-9b5f-0acd6d0011df"
								},
								{
									"name": "Lists ProvisioningPolicies",
									"id": "a99c116e-1a6b-443d-b725-6ad9be08e174",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"provisioning-policies"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point lists all the ProvisioningPolicies in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
									},
									"response": [
										{
											"id": "bb5fc3e0-c1fe-4c27-aeaa-7532799eba92",
											"name": "List of ProvisioningPolicyDto objects",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the ProvisioningPolicies in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"culpa consectetur Excepteur nulla ven\",\n    \"description\": \"do nisi\",\n    \"usageType\": \"DELETE_GROUP\",\n    \"fields\": [\n      {\n        \"name\": \"userName\",\n        \"transform\": {\n          \"type\": \"rule\",\n          \"attributes\": {\n            \"name\": \"Create Unique LDAP Attribute\"\n          }\n        },\n        \"attributes\": {\n          \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n          \"cloudMaxUniqueChecks\": \"50\",\n          \"cloudMaxSize\": \"20\",\n          \"cloudRequired\": \"true\"\n        },\n        \"isRequired\": false,\n        \"type\": \"string\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"userName\",\n        \"transform\": {\n          \"type\": \"rule\",\n          \"attributes\": {\n            \"name\": \"Create Unique LDAP Attribute\"\n          }\n        },\n        \"attributes\": {\n          \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n          \"cloudMaxUniqueChecks\": \"50\",\n          \"cloudMaxSize\": \"20\",\n          \"cloudRequired\": \"true\"\n        },\n        \"isRequired\": false,\n        \"type\": \"string\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"mollit velit non quis\",\n    \"description\": \"ad laborum mollit cupidatat eiusmod\",\n    \"usageType\": \"REGISTER\",\n    \"fields\": [\n      {\n        \"name\": \"userName\",\n        \"transform\": {\n          \"type\": \"rule\",\n          \"attributes\": {\n            \"name\": \"Create Unique LDAP Attribute\"\n          }\n        },\n        \"attributes\": {\n          \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n          \"cloudMaxUniqueChecks\": \"50\",\n          \"cloudMaxSize\": \"20\",\n          \"cloudRequired\": \"true\"\n        },\n        \"isRequired\": false,\n        \"type\": \"string\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"userName\",\n        \"transform\": {\n          \"type\": \"rule\",\n          \"attributes\": {\n            \"name\": \"Create Unique LDAP Attribute\"\n          }\n        },\n        \"attributes\": {\n          \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n          \"cloudMaxUniqueChecks\": \"50\",\n          \"cloudMaxSize\": \"20\",\n          \"cloudRequired\": \"true\"\n        },\n        \"isRequired\": false,\n        \"type\": \"string\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]"
										},
										{
											"id": "59fd5711-1322-4340-9026-843dce0cef5a",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the ProvisioningPolicies in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "5ed62a7b-fe57-473e-88c0-266566f254d5",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the ProvisioningPolicies in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "8b050755-a66a-4df6-84a4-087474f0e051",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the ProvisioningPolicies in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "6a505eac-204c-4277-b298-06610b3f64a2",
											"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the ProvisioningPolicies in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
										},
										{
											"id": "72b4dfd9-b3b1-4658-899c-657601f1a3c8",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the ProvisioningPolicies in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "532fd41f-a87c-4550-ac10-2e97327df123",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point lists all the ProvisioningPolicies in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Provisioning Policy",
									"id": "a1203d20-1660-4c0f-a158-b30b56cd1b0c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"provisioning-policies"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"response": [
										{
											"id": "d17f5740-551a-4ee5-a26c-66d9f0afd755",
											"name": "Created ProvisioningPolicyDto object",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.\nA token with ORG_ADMIN authority is required to call this API."
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"in in laborum deserunt\",\n  \"description\": \"minim magna\",\n  \"usageType\": \"UPDATE\",\n  \"fields\": [\n    {\n      \"name\": \"userName\",\n      \"transform\": {\n        \"type\": \"rule\",\n        \"attributes\": {\n          \"name\": \"Create Unique LDAP Attribute\"\n        }\n      },\n      \"attributes\": {\n        \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n        \"cloudMaxUniqueChecks\": \"50\",\n        \"cloudMaxSize\": \"20\",\n        \"cloudRequired\": \"true\"\n      },\n      \"isRequired\": false,\n      \"type\": \"string\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"userName\",\n      \"transform\": {\n        \"type\": \"rule\",\n        \"attributes\": {\n          \"name\": \"Create Unique LDAP Attribute\"\n        }\n      },\n      \"attributes\": {\n        \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n        \"cloudMaxUniqueChecks\": \"50\",\n        \"cloudMaxSize\": \"20\",\n        \"cloudRequired\": \"true\"\n      },\n      \"isRequired\": false,\n      \"type\": \"string\",\n      \"isMultiValued\": false\n    }\n  ]\n}"
										},
										{
											"id": "23caf68a-0fe8-4bf7-ae1c-6e5cc1732a96",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.\nA token with ORG_ADMIN authority is required to call this API."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "fb7073d4-9552-480a-bda3-066c63ed6580",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.\nA token with ORG_ADMIN authority is required to call this API."
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "b2648152-c761-49c8-af65-306bfc9d7e5e",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.\nA token with ORG_ADMIN authority is required to call this API."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "4b9f82a4-13dd-4a04-8d83-67065cab258d",
											"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.\nA token with ORG_ADMIN authority is required to call this API."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
										},
										{
											"id": "81a42e5a-1629-46f6-a2aa-0b27a8bad5ab",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.\nA token with ORG_ADMIN authority is required to call this API."
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "3d3f51ba-13e6-49b1-8703-a0de6a67c600",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"usageType\": \"<string>\",\n  \"fields\": [\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    },\n    {\n      \"name\": \"<string>\",\n      \"transform\": \"<object>\",\n      \"attributes\": \"<object>\",\n      \"type\": \"<string>\",\n      \"isMultiValued\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id"
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.\nA token with ORG_ADMIN authority is required to call this API."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Bulk Update Provisioning Policies",
									"id": "889e23cc-38c7-46cc-aba1-52b789775928",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/bulk-update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"provisioning-policies",
												"bulk-update"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This end-point updates a list of provisioning policies on the specified source in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
									},
									"response": [
										{
											"id": "32211728-73ce-4ac5-8f50-d9259bd7db46",
											"name": "A list of the ProvisioningPolicyDto was successfully replaced.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/bulk-update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														"bulk-update"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point updates a list of provisioning policies on the specified source in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"culpa consectetur Excepteur nulla ven\",\n    \"description\": \"do nisi\",\n    \"usageType\": \"DELETE_GROUP\",\n    \"fields\": [\n      {\n        \"name\": \"userName\",\n        \"transform\": {\n          \"type\": \"rule\",\n          \"attributes\": {\n            \"name\": \"Create Unique LDAP Attribute\"\n          }\n        },\n        \"attributes\": {\n          \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n          \"cloudMaxUniqueChecks\": \"50\",\n          \"cloudMaxSize\": \"20\",\n          \"cloudRequired\": \"true\"\n        },\n        \"isRequired\": false,\n        \"type\": \"string\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"userName\",\n        \"transform\": {\n          \"type\": \"rule\",\n          \"attributes\": {\n            \"name\": \"Create Unique LDAP Attribute\"\n          }\n        },\n        \"attributes\": {\n          \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n          \"cloudMaxUniqueChecks\": \"50\",\n          \"cloudMaxSize\": \"20\",\n          \"cloudRequired\": \"true\"\n        },\n        \"isRequired\": false,\n        \"type\": \"string\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"mollit velit non quis\",\n    \"description\": \"ad laborum mollit cupidatat eiusmod\",\n    \"usageType\": \"REGISTER\",\n    \"fields\": [\n      {\n        \"name\": \"userName\",\n        \"transform\": {\n          \"type\": \"rule\",\n          \"attributes\": {\n            \"name\": \"Create Unique LDAP Attribute\"\n          }\n        },\n        \"attributes\": {\n          \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n          \"cloudMaxUniqueChecks\": \"50\",\n          \"cloudMaxSize\": \"20\",\n          \"cloudRequired\": \"true\"\n        },\n        \"isRequired\": false,\n        \"type\": \"string\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"userName\",\n        \"transform\": {\n          \"type\": \"rule\",\n          \"attributes\": {\n            \"name\": \"Create Unique LDAP Attribute\"\n          }\n        },\n        \"attributes\": {\n          \"template\": \"${firstname}.${lastname}${uniqueCounter}\",\n          \"cloudMaxUniqueChecks\": \"50\",\n          \"cloudMaxSize\": \"20\",\n          \"cloudRequired\": \"true\"\n        },\n        \"isRequired\": false,\n        \"type\": \"string\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]"
										},
										{
											"id": "ae9bdb4f-2d70-46bf-b0bf-9b4adfafd9e5",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/bulk-update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														"bulk-update"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point updates a list of provisioning policies on the specified source in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "48d88230-c2af-4eab-8adc-419136609165",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/bulk-update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														"bulk-update"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point updates a list of provisioning policies on the specified source in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "a3e2d544-f6e6-4d21-ab31-53706ec868d0",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/bulk-update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														"bulk-update"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point updates a list of provisioning policies on the specified source in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "9db51935-8cb0-48c3-8a3a-5ace36dc6f03",
											"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/bulk-update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														"bulk-update"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point updates a list of provisioning policies on the specified source in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
										},
										{
											"id": "6be27108-2909-4c68-92e2-1a87aca516a9",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/bulk-update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														"bulk-update"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point updates a list of provisioning policies on the specified source in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "4b9bb1c2-e046-4ba6-b17e-931df4b0efb4",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://tenant.api.identitynow.com/oauth/token",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"value": "sp:scopes:default sp:scopes:all",
															"type": "string"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"usageType\": \"<string>\",\n    \"fields\": [\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      },\n      {\n        \"name\": \"<string>\",\n        \"transform\": \"<object>\",\n        \"attributes\": \"<object>\",\n        \"type\": \"<string>\",\n        \"isMultiValued\": false\n      }\n    ]\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/provisioning-policies/bulk-update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"provisioning-policies",
														"bulk-update"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This end-point updates a list of provisioning policies on the specified source in IdentityNow.\nA token with API, or ORG_ADMIN authority is required to call this API."
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "dc018e3f-d064-49ea-aa74-24b944072cef"
						},
						{
							"name": "schemas",
							"item": [
								{
									"name": "{schema Id}",
									"item": [
										{
											"name": "Get Source Schema by ID",
											"id": "e32c0038-c922-479b-9be9-e60e9e984e27",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas",
														":schemaId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "schemaId",
															"value": "<string>",
															"description": "(Required) The Schema id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Get the Source Schema by ID in IdentityNow.\n"
											},
											"response": [
												{
													"id": "1cb52998-02ae-4c24-a177-5b10520bc28d",
													"name": "The requested Schema was successfully retrieved.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Get the Source Schema by ID in IdentityNow.\n"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"2c9180835d191a86015d28455b4a2329\",\n  \"name\": \"account\",\n  \"nativeObjectType\": \"User\",\n  \"identityAttribute\": \"sAMAccountName\",\n  \"displayAttribute\": \"distinguishedName\",\n  \"hierarchyAttribute\": \"memberOf\",\n  \"includePermissions\": false,\n  \"features\": [\n    \"PROVISIONING\",\n    \"NO_PERMISSIONS_PROVISIONING\",\n    \"GROUPS_HAVE_MEMBERS\"\n  ],\n  \"configuration\": {\n    \"groupMemberAttribute\": \"member\"\n  },\n  \"attributes\": [\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"INT\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"non Duis nostrud Lorem\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    },\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"LONG\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"enim tempor\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    }\n  ],\n  \"created\": \"2019-12-24T22:32:58.104Z\",\n  \"modified\": \"2019-12-31T20:22:28.104Z\"\n}"
												},
												{
													"id": "bf05b4e9-5866-4603-abfc-c37eb2f9c048",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Get the Source Schema by ID in IdentityNow.\n"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "d6966bfd-a730-4d3a-b4cf-25b316430ad9",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Get the Source Schema by ID in IdentityNow.\n"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "a955f511-cd80-4ee2-925e-fce5fe8c4d0d",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Get the Source Schema by ID in IdentityNow.\n"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "b46d06cd-b25d-4e90-8d2a-f97a219b4440",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Get the Source Schema by ID in IdentityNow.\n"
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "edd5173e-470b-48ca-85b4-66d527b04eac",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Get the Source Schema by ID in IdentityNow.\n"
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "e6cc0ca4-367b-4b37-b9a7-f2fbf4503bd4",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "Get the Source Schema by ID in IdentityNow.\n"
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update Source Schema (Full)",
											"id": "9aec2ecd-ce10-4adf-af8e-c51c12f0d536",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas",
														":schemaId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "schemaId",
															"value": "<string>",
															"description": "(Required) The Schema id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.\n\n* id\n* name\n* created\n* modified\n\nAny attempt to modify these fields will result in an error response with a status code of 400.\n\n> `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.\n"
											},
											"response": [
												{
													"id": "e9a4210f-7714-4a72-ae24-4063fa85ee3e",
													"name": "The Schema was successfully replaced.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.\n\n* id\n* name\n* created\n* modified\n\nAny attempt to modify these fields will result in an error response with a status code of 400.\n\n> `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.\n"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"2c9180835d191a86015d28455b4a2329\",\n  \"name\": \"account\",\n  \"nativeObjectType\": \"User\",\n  \"identityAttribute\": \"sAMAccountName\",\n  \"displayAttribute\": \"distinguishedName\",\n  \"hierarchyAttribute\": \"memberOf\",\n  \"includePermissions\": false,\n  \"features\": [\n    \"PROVISIONING\",\n    \"NO_PERMISSIONS_PROVISIONING\",\n    \"GROUPS_HAVE_MEMBERS\"\n  ],\n  \"configuration\": {\n    \"groupMemberAttribute\": \"member\"\n  },\n  \"attributes\": [\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"INT\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"non Duis nostrud Lorem\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    },\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"LONG\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"enim tempor\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    }\n  ],\n  \"created\": \"2019-12-24T22:32:58.104Z\",\n  \"modified\": \"2019-12-31T20:22:28.104Z\"\n}"
												},
												{
													"id": "53c337b7-b66a-44d3-8748-b6f298f4b0ed",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.\n\n* id\n* name\n* created\n* modified\n\nAny attempt to modify these fields will result in an error response with a status code of 400.\n\n> `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.\n"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "92fa5339-9379-4ec9-a450-8fb419b8087e",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.\n\n* id\n* name\n* created\n* modified\n\nAny attempt to modify these fields will result in an error response with a status code of 400.\n\n> `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.\n"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "836f8d81-6df1-4fa1-ac8e-74e5dc37c670",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.\n\n* id\n* name\n* created\n* modified\n\nAny attempt to modify these fields will result in an error response with a status code of 400.\n\n> `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.\n"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "9707dc40-a09c-4e39-a548-68b519432cd9",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.\n\n* id\n* name\n* created\n* modified\n\nAny attempt to modify these fields will result in an error response with a status code of 400.\n\n> `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.\n"
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "338e6e3b-b76b-4c32-932b-8ebe5ed59388",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.\n\n* id\n* name\n* created\n* modified\n\nAny attempt to modify these fields will result in an error response with a status code of 400.\n\n> `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.\n"
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "6bd7200b-1633-4d3c-a130-4cdcf447c8c0",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.\n\n* id\n* name\n* created\n* modified\n\nAny attempt to modify these fields will result in an error response with a status code of 400.\n\n> `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.\n"
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update Source Schema (Partial)",
											"id": "fe0a516c-7af9-42ca-91ea-1528829cdca1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json-patch+json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[object Object],[object Object]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas",
														":schemaId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "schemaId",
															"value": "<string>",
															"description": "(Required) The Schema id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "This API can be used to selectively update an existing Schema using a JSONPatch payload. Some fields of the Schema cannot be updated. These fields are listed below.\n* id\n* name\n* created\n* modified"
											},
											"response": [
												{
													"id": "4fd6b012-6d56-47f3-8e54-f7d8029f687e",
													"name": "The Schema was successfully updated.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API can be used to selectively update an existing Schema using a JSONPatch payload. Some fields of the Schema cannot be updated. These fields are listed below.\n* id\n* name\n* created\n* modified"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"2c9180835d191a86015d28455b4a2329\",\n  \"name\": \"account\",\n  \"nativeObjectType\": \"User\",\n  \"identityAttribute\": \"sAMAccountName\",\n  \"displayAttribute\": \"distinguishedName\",\n  \"hierarchyAttribute\": \"memberOf\",\n  \"includePermissions\": false,\n  \"features\": [\n    \"PROVISIONING\",\n    \"NO_PERMISSIONS_PROVISIONING\",\n    \"GROUPS_HAVE_MEMBERS\"\n  ],\n  \"configuration\": {\n    \"groupMemberAttribute\": \"member\"\n  },\n  \"attributes\": [\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"INT\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"non Duis nostrud Lorem\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    },\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"LONG\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"enim tempor\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    }\n  ],\n  \"created\": \"2019-12-24T22:32:58.104Z\",\n  \"modified\": \"2019-12-31T20:22:28.104Z\"\n}"
												},
												{
													"id": "d808abf0-96f3-4681-85a9-ad817c40593f",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API can be used to selectively update an existing Schema using a JSONPatch payload. Some fields of the Schema cannot be updated. These fields are listed below.\n* id\n* name\n* created\n* modified"
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "30382174-8c4f-45c6-975a-f2973baff309",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API can be used to selectively update an existing Schema using a JSONPatch payload. Some fields of the Schema cannot be updated. These fields are listed below.\n* id\n* name\n* created\n* modified"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "9657545d-60d9-4827-b843-8f3fbdf0eb99",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API can be used to selectively update an existing Schema using a JSONPatch payload. Some fields of the Schema cannot be updated. These fields are listed below.\n* id\n* name\n* created\n* modified"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "33e09671-b05a-4001-a10e-c652ca05db50",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API can be used to selectively update an existing Schema using a JSONPatch payload. Some fields of the Schema cannot be updated. These fields are listed below.\n* id\n* name\n* created\n* modified"
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "3dfef945-c49b-4d67-8e68-d5329310034f",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API can be used to selectively update an existing Schema using a JSONPatch payload. Some fields of the Schema cannot be updated. These fields are listed below.\n* id\n* name\n* created\n* modified"
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "e7a802b3-1616-4b3e-80ce-6aba75ddfaf5",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json-patch+json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[object Object],[object Object]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														},
														"description": "This API can be used to selectively update an existing Schema using a JSONPatch payload. Some fields of the Schema cannot be updated. These fields are listed below.\n* id\n* name\n* created\n* modified"
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Source Schema by ID",
											"id": "b7d3e63e-456e-476a-8a75-f367fdc57724",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas",
														":schemaId"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "schemaId",
															"value": "<string>",
															"description": "(Required) The Schema id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												}
											},
											"response": [
												{
													"id": "9508835d-ec81-4028-b02a-fc55c1bae29b",
													"name": "The Schema was successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "e963b771-e08a-43bc-9b17-e5c9e520b651",
													"name": "Client Error - Returned if the request body is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
												},
												{
													"id": "9cba926f-ad48-4c68-b216-7e8989337bf7",
													"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {}\n}"
												},
												{
													"id": "525d0420-8728-4900-a406-6c794c61e346",
													"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
												},
												{
													"id": "06f3553c-0743-4039-89b2-e573290c1bb7",
													"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
												},
												{
													"id": "2abf10f1-aa14-4175-bf82-ee80c347b294",
													"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": {}\n}"
												},
												{
													"id": "7de921cc-e4a1-4037-a73e-2f2b92284e02",
													"name": "Internal Server Error - Returned if there is an unexpected error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sources/:sourceId/schemas/:schemaId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sources",
																":sourceId",
																"schemas",
																":schemaId"
															],
															"variable": [
																{
																	"key": "sourceId",
																	"value": "<string>",
																	"description": "(Required) The Source id."
																},
																{
																	"key": "schemaId",
																	"value": "<string>",
																	"description": "(Required) The Schema id."
																},
																{
																	"key": "tenant",
																	"value": "{{tenant}}",
																	"description": "This is the name of your tenant, typically your company's name."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
												}
											]
										}
									],
									"id": "34eb8761-f19f-4121-96d7-bb254d165594"
								},
								{
									"name": "List Schemas on a Source",
									"id": "f161c22e-1c11-4d27-b17c-8ff3ffe34336",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/schemas?include-types=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"schemas"
											],
											"query": [
												{
													"key": "include-types",
													"value": "<string>",
													"description": "If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized."
												}
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source ID."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Lists the Schemas that exist on the specified Source in IdentityNow.\n"
									},
									"response": [
										{
											"id": "57319544-69a7-4d32-8b1a-50de2d04c00c",
											"name": "The Schemas were successfully retrieved.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas?include-types=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"query": [
														{
															"key": "include-types",
															"value": "<string>",
															"description": "If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized."
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Lists the Schemas that exist on the specified Source in IdentityNow.\n"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"2c9180835d191a86015d28455b4a2329\",\n    \"name\": \"account\",\n    \"nativeObjectType\": \"User\",\n    \"identityAttribute\": \"sAMAccountName\",\n    \"displayAttribute\": \"distinguishedName\",\n    \"hierarchyAttribute\": \"memberOf\",\n    \"includePermissions\": false,\n    \"features\": [\n      \"PROVISIONING\",\n      \"NO_PERMISSIONS_PROVISIONING\",\n      \"GROUPS_HAVE_MEMBERS\"\n    ],\n    \"configuration\": {\n      \"groupMemberAttribute\": \"member\"\n    },\n    \"attributes\": [\n      {\n        \"name\": \"sAMAccountName\",\n        \"type\": \"INT\",\n        \"schema\": {\n          \"type\": \"CONNECTOR_SCHEMA\",\n          \"name\": \"group\"\n        },\n        \"description\": \"do Lorem aliquip\",\n        \"isMultiValued\": false,\n        \"isEntitlement\": false,\n        \"isGroup\": false\n      },\n      {\n        \"name\": \"sAMAccountName\",\n        \"type\": \"LONG\",\n        \"schema\": {\n          \"type\": \"CONNECTOR_SCHEMA\",\n          \"name\": \"group\"\n        },\n        \"description\": \"labore est do eiusmod\",\n        \"isMultiValued\": false,\n        \"isEntitlement\": false,\n        \"isGroup\": false\n      }\n    ],\n    \"created\": \"2019-12-24T22:32:58.104Z\",\n    \"modified\": \"2019-12-31T20:22:28.104Z\"\n  },\n  {\n    \"id\": \"2c9180835d191a86015d28455b4a2329\",\n    \"name\": \"account\",\n    \"nativeObjectType\": \"User\",\n    \"identityAttribute\": \"sAMAccountName\",\n    \"displayAttribute\": \"distinguishedName\",\n    \"hierarchyAttribute\": \"memberOf\",\n    \"includePermissions\": false,\n    \"features\": [\n      \"PROVISIONING\",\n      \"NO_PERMISSIONS_PROVISIONING\",\n      \"GROUPS_HAVE_MEMBERS\"\n    ],\n    \"configuration\": {\n      \"groupMemberAttribute\": \"member\"\n    },\n    \"attributes\": [\n      {\n        \"name\": \"sAMAccountName\",\n        \"type\": \"LONG\",\n        \"schema\": {\n          \"type\": \"CONNECTOR_SCHEMA\",\n          \"name\": \"group\"\n        },\n        \"description\": \"ut\",\n        \"isMultiValued\": false,\n        \"isEntitlement\": false,\n        \"isGroup\": false\n      },\n      {\n        \"name\": \"sAMAccountName\",\n        \"type\": \"STRING\",\n        \"schema\": {\n          \"type\": \"CONNECTOR_SCHEMA\",\n          \"name\": \"group\"\n        },\n        \"description\": \"in minim exercitation\",\n        \"isMultiValued\": false,\n        \"isEntitlement\": false,\n        \"isGroup\": false\n      }\n    ],\n    \"created\": \"2019-12-24T22:32:58.104Z\",\n    \"modified\": \"2019-12-31T20:22:28.104Z\"\n  }\n]"
										},
										{
											"id": "8ab8a8a7-a262-427b-9a31-e2765d4c615b",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas?include-types=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"query": [
														{
															"key": "include-types",
															"value": "<string>",
															"description": "If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized."
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Lists the Schemas that exist on the specified Source in IdentityNow.\n"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "a4773d85-2277-4401-886e-a49bb50e6320",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas?include-types=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"query": [
														{
															"key": "include-types",
															"value": "<string>",
															"description": "If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized."
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Lists the Schemas that exist on the specified Source in IdentityNow.\n"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "0529e34a-0f53-4b5e-9192-3d883a1c1074",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas?include-types=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"query": [
														{
															"key": "include-types",
															"value": "<string>",
															"description": "If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized."
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Lists the Schemas that exist on the specified Source in IdentityNow.\n"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "fd70906e-31e0-4465-b85b-e84ebb171bf4",
											"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas?include-types=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"query": [
														{
															"key": "include-types",
															"value": "<string>",
															"description": "If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized."
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Lists the Schemas that exist on the specified Source in IdentityNow.\n"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
										},
										{
											"id": "838e869b-b088-40a2-9358-1955b5c175a5",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas?include-types=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"query": [
														{
															"key": "include-types",
															"value": "<string>",
															"description": "If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized."
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Lists the Schemas that exist on the specified Source in IdentityNow.\n"
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "370686a6-d8c8-4a7a-b953-e39c3c4764e8",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas?include-types=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"query": [
														{
															"key": "include-types",
															"value": "<string>",
															"description": "If set to 'group', then the account schema is filtered and only group schemas are returned. Only a value of 'group' is recognized."
														}
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source ID."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Lists the Schemas that exist on the specified Source in IdentityNow.\n"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Schema on a Source",
									"id": "cf589504-b772-4b57-bdee-17710688aac2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"schemas"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Creates a new Schema on the specified Source in IdentityNow.\n"
									},
									"response": [
										{
											"id": "81cfcf8f-11de-4449-bce8-fc0f6c61610e",
											"name": "The Schema was successfully created on the specified Source.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Creates a new Schema on the specified Source in IdentityNow.\n"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"2c9180835d191a86015d28455b4a2329\",\n  \"name\": \"account\",\n  \"nativeObjectType\": \"User\",\n  \"identityAttribute\": \"sAMAccountName\",\n  \"displayAttribute\": \"distinguishedName\",\n  \"hierarchyAttribute\": \"memberOf\",\n  \"includePermissions\": false,\n  \"features\": [\n    \"PROVISIONING\",\n    \"NO_PERMISSIONS_PROVISIONING\",\n    \"GROUPS_HAVE_MEMBERS\"\n  ],\n  \"configuration\": {\n    \"groupMemberAttribute\": \"member\"\n  },\n  \"attributes\": [\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"INT\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"non Duis nostrud Lorem\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    },\n    {\n      \"name\": \"sAMAccountName\",\n      \"type\": \"LONG\",\n      \"schema\": {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      },\n      \"description\": \"enim tempor\",\n      \"isMultiValued\": false,\n      \"isEntitlement\": false,\n      \"isGroup\": false\n    }\n  ],\n  \"created\": \"2019-12-24T22:32:58.104Z\",\n  \"modified\": \"2019-12-31T20:22:28.104Z\"\n}"
										},
										{
											"id": "30c4d7ec-ad25-48b8-a9b2-bc403c5ab789",
											"name": "Client Error - Returned if the request body is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Creates a new Schema on the specified Source in IdentityNow.\n"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
										},
										{
											"id": "bed876d4-f897-404c-8c7c-b0c4dcd0248e",
											"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Creates a new Schema on the specified Source in IdentityNow.\n"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {}\n}"
										},
										{
											"id": "ab5dc5df-6035-44d8-94f8-862c37f6bc74",
											"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Creates a new Schema on the specified Source in IdentityNow.\n"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
										},
										{
											"id": "090a896a-59cc-417a-8c70-974ba0d17696",
											"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Creates a new Schema on the specified Source in IdentityNow.\n"
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": {}\n}"
										},
										{
											"id": "366c6067-c833-4334-a83b-60060cc696b9",
											"name": "Internal Server Error - Returned if there is an unexpected error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nativeObjectType\": \"<string>\",\n  \"identityAttribute\": \"<string>\",\n  \"displayAttribute\": \"<string>\",\n  \"hierarchyAttribute\": \"<string>\",\n  \"includePermissions\": \"<boolean>\",\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"configuration\": \"<object>\",\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"schema\": {\n        \"type\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"description\": \"<string>\",\n      \"isMultiValued\": \"<boolean>\",\n      \"isEntitlement\": \"<boolean>\"\n    }\n  ],\n  \"created\": \"<dateTime>\",\n  \"modified\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sources/:sourceId/schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sources",
														":sourceId",
														"schemas"
													],
													"variable": [
														{
															"key": "sourceId",
															"value": "<string>",
															"description": "(Required) The Source id."
														},
														{
															"key": "tenant",
															"value": "{{tenant}}",
															"description": "This is the name of your tenant, typically your company's name."
														}
													]
												},
												"description": "Creates a new Schema on the specified Source in IdentityNow.\n"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "57f6d1eb-b5ba-47ea-a81c-0d97f65f4436"
						},
						{
							"name": "This API fetches source health by source's id",
							"id": "4d79ee6f-3d11-4ab9-9dc7-98a4a8ffd323",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources/:sourceId/source-health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources",
										":sourceId",
										"source-health"
									],
									"variable": [
										{
											"key": "sourceId",
											"value": "<string>",
											"description": "(Required) The Source id."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This endpoint fetches source health by source's id"
							},
							"response": [
								{
									"id": "34beab26-1bcc-47c7-a946-20b2cf758c93",
									"name": "Fetched source health successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/source-health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"source-health"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint fetches source health by source's id"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808568c529c60168cca6f90c1324\",\n  \"type\": \"OpenLDAP - Direct\",\n  \"name\": \"Source1234\",\n  \"org\": \"denali-cjh\",\n  \"isAuthoritative\": false,\n  \"isCluster\": true,\n  \"hostname\": \"megapod-useast1-secret-hostname.sailpoint.com\",\n  \"pod\": \"megapod-useast1\",\n  \"iqServiceVersion\": \"iqVersion123\",\n  \"status\": \"SOURCE_STATE_UNCHECKED_SOURCE\"\n}"
								},
								{
									"id": "42dde3e7-445a-4575-8f44-2d3ead30bcc9",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/source-health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"source-health"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint fetches source health by source's id"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "b69581ac-040f-44f9-ac57-58b2624d386d",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/source-health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"source-health"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint fetches source health by source's id"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "7222285a-bd07-413b-9666-8960f56a5472",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/source-health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"source-health"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint fetches source health by source's id"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "632bf65b-9942-48ce-8563-ee8f4f3c4515",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/source-health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"source-health"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint fetches source health by source's id"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "bb335a33-642b-4519-863f-09e88628f9a6",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/source-health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"source-health"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint fetches source health by source's id"
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "28c8586d-c4f3-4fcb-bca7-0ef2269a34de",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/source-health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"source-health"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This endpoint fetches source health by source's id"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Upload connector file to source",
							"id": "67a55677-72d9-443e-b692-43d43daf6784",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"value": null
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sources/:sourceId/upload-connector-file",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources",
										":sourceId",
										"upload-connector-file"
									],
									"variable": [
										{
											"key": "sourceId",
											"value": "<string>",
											"description": "(Required) The Source id."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This uploads a supplemental source connector file (like jdbc driver jars) to a source's S3 bucket. This also sends ETS and Audit events.\nA token with ORG_ADMIN authority is required to call this API."
							},
							"response": [
								{
									"id": "12936d0e-170b-4ad4-a305-820aa4cd6dda",
									"name": "Uploaded the file successfully and sent all post-upload events",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/upload-connector-file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"upload-connector-file"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This uploads a supplemental source connector file (like jdbc driver jars) to a source's S3 bucket. This also sends ETS and Audit events.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c91808568c529c60168cca6f90c1324\",\n  \"description\": \"This is the corporate directory.\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"cluster\": {\n    \"type\": \"CLUSTER\",\n    \"name\": \"Corporate Cluster\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"ACCOUNT_CORRELATION_CONFIG\",\n    \"name\": \"Directory [source-62867] Account Correlation\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"manager\",\n    \"identityAttribute\": \"manager\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"account\"\n    },\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"group\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"PASSWORD_POLICY\",\n      \"name\": \"Corporate Password Policy\"\n    }\n  ],\n  \"features\": [\n    \"SYNC_PROVISIONING\",\n    \"MANAGER_LOOKUP\",\n    \"SEARCH\",\n    \"PROVISIONING\",\n    \"AUTHENTICATE\",\n    \"GROUP_PROVISIONING\",\n    \"PASSWORD\"\n  ],\n  \"type\": \"OpenLDAP - Direct\",\n  \"connector\": \"active-directory\",\n  \"connectorClass\": \"sailpoint.connector.LDAPConnector\",\n  \"connectorAttributes\": {\n    \"healthCheckTimeout\": 30,\n    \"authSearchAttributes\": [\n      \"cn\",\n      \"uid\",\n      \"mail\"\n    ]\n  },\n  \"deleteThreshold\": 10,\n  \"authoritative\": false,\n  \"managementWorkgroup\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"healthy\": true,\n  \"status\": \"SOURCE_STATE_HEALTHY\",\n  \"since\": \"2021-09-28T15:48:29.3801666300Z\",\n  \"connectorId\": \"active-directory\",\n  \"connectorName\": \"Active Directory\",\n  \"connectionType\": \"file\",\n  \"connectorImplementstionId\": \"delimited-file\"\n}"
								},
								{
									"id": "43ac55e4-ad10-4721-ae74-f021b58a36fe",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/upload-connector-file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"upload-connector-file"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This uploads a supplemental source connector file (like jdbc driver jars) to a source's S3 bucket. This also sends ETS and Audit events.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "c0b06ce6-55b1-4ce4-98bc-06bac9a9b4c6",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/upload-connector-file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"upload-connector-file"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This uploads a supplemental source connector file (like jdbc driver jars) to a source's S3 bucket. This also sends ETS and Audit events.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "a321d825-8247-47a2-a3a5-c27e09acbd89",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/upload-connector-file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"upload-connector-file"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This uploads a supplemental source connector file (like jdbc driver jars) to a source's S3 bucket. This also sends ETS and Audit events.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "23afc9a3-59c8-494c-bf84-82518229784a",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/upload-connector-file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"upload-connector-file"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This uploads a supplemental source connector file (like jdbc driver jars) to a source's S3 bucket. This also sends ETS and Audit events.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "de046730-26ac-4770-a72e-8405a254646d",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/sources/:sourceId/upload-connector-file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sources",
												":sourceId",
												"upload-connector-file"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "(Required) The Source id."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This uploads a supplemental source connector file (like jdbc driver jars) to a source's S3 bucket. This also sends ETS and Audit events.\nA token with ORG_ADMIN authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "d4adb4e9-3dcf-4bcf-aba9-fb8410994a9d"
				},
				{
					"name": "Lists all sources in IdentityNow.",
					"id": "777a4952-752f-498a-ac32-9a3907a33292",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sources?limit=50&offset=0&count=false&filters=<string>&sorters=<comma-separated>&for-subadmin=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sources"
							],
							"query": [
								{
									"key": "limit",
									"value": "50",
									"description": "Note that for this API the maximum value for limit is 50.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *co, eq, in, sw*\n\n**type**: *eq, in*\n\n**owner.id**: *eq, in*\n\n**features**: *ca, co*\n\n**created**: *eq*\n\n**modified**: *eq*\n\n**managementWorkgroup.id**: *eq*\n\n**description**: *eq*\n\n**authoritative**: *eq*\n\n**healthy**: *eq*\n\n**status**: *eq, in*\n\n**connectionType**: *eq*\n\n**connectorName**: *eq*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status**"
								},
								{
									"key": "for-subadmin",
									"value": "<string>",
									"description": "Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.\nSubadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned."
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This end-point lists all the sources in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API."
					},
					"response": [
						{
							"id": "e9067223-0cdf-4d5a-be7d-3241906e3495",
							"name": "List of Source objects",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources?limit=50&offset=0&count=false&filters=<string>&sorters=<comma-separated>&for-subadmin=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Note that for this API the maximum value for limit is 50.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *co, eq, in, sw*\n\n**type**: *eq, in*\n\n**owner.id**: *eq, in*\n\n**features**: *ca, co*\n\n**created**: *eq*\n\n**modified**: *eq*\n\n**managementWorkgroup.id**: *eq*\n\n**description**: *eq*\n\n**authoritative**: *eq*\n\n**healthy**: *eq*\n\n**status**: *eq, in*\n\n**connectionType**: *eq*\n\n**connectorName**: *eq*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status**"
										},
										{
											"key": "for-subadmin",
											"value": "<string>",
											"description": "Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.\nSubadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This end-point lists all the sources in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"2c91808568c529c60168cca6f90c1324\",\n    \"description\": \"This is the corporate directory.\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"cluster\": {\n      \"type\": \"CLUSTER\",\n      \"name\": \"Corporate Cluster\"\n    },\n    \"accountCorrelationConfig\": {\n      \"type\": \"ACCOUNT_CORRELATION_CONFIG\",\n      \"name\": \"Directory [source-62867] Account Correlation\"\n    },\n    \"accountCorrelationRule\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"managerCorrelationMapping\": {\n      \"accountAttribute\": \"manager\",\n      \"identityAttribute\": \"manager\"\n    },\n    \"managerCorrelationRule\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"beforeProvisioningRule\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"schemas\": [\n      {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"account\"\n      },\n      {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      }\n    ],\n    \"passwordPolicies\": [\n      {\n        \"type\": \"PASSWORD_POLICY\",\n        \"name\": \"Corporate Password Policy\"\n      }\n    ],\n    \"features\": [\n      \"SYNC_PROVISIONING\",\n      \"MANAGER_LOOKUP\",\n      \"SEARCH\",\n      \"PROVISIONING\",\n      \"AUTHENTICATE\",\n      \"GROUP_PROVISIONING\",\n      \"PASSWORD\"\n    ],\n    \"type\": \"OpenLDAP - Direct\",\n    \"connector\": \"active-directory\",\n    \"connectorClass\": \"sailpoint.connector.LDAPConnector\",\n    \"connectorAttributes\": {\n      \"healthCheckTimeout\": 30,\n      \"authSearchAttributes\": [\n        \"cn\",\n        \"uid\",\n        \"mail\"\n      ]\n    },\n    \"deleteThreshold\": 10,\n    \"authoritative\": false,\n    \"managementWorkgroup\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"healthy\": true,\n    \"status\": \"SOURCE_STATE_HEALTHY\",\n    \"since\": \"2021-09-28T15:48:29.3801666300Z\",\n    \"connectorId\": \"active-directory\",\n    \"connectorName\": \"Active Directory\",\n    \"connectionType\": \"file\",\n    \"connectorImplementstionId\": \"delimited-file\"\n  },\n  {\n    \"id\": \"2c91808568c529c60168cca6f90c1324\",\n    \"description\": \"This is the corporate directory.\",\n    \"owner\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"cluster\": {\n      \"type\": \"CLUSTER\",\n      \"name\": \"Corporate Cluster\"\n    },\n    \"accountCorrelationConfig\": {\n      \"type\": \"ACCOUNT_CORRELATION_CONFIG\",\n      \"name\": \"Directory [source-62867] Account Correlation\"\n    },\n    \"accountCorrelationRule\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"managerCorrelationMapping\": {\n      \"accountAttribute\": \"manager\",\n      \"identityAttribute\": \"manager\"\n    },\n    \"managerCorrelationRule\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"beforeProvisioningRule\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"schemas\": [\n      {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"account\"\n      },\n      {\n        \"type\": \"CONNECTOR_SCHEMA\",\n        \"name\": \"group\"\n      }\n    ],\n    \"passwordPolicies\": [\n      {\n        \"type\": \"PASSWORD_POLICY\",\n        \"name\": \"Corporate Password Policy\"\n      }\n    ],\n    \"features\": [\n      \"SYNC_PROVISIONING\",\n      \"MANAGER_LOOKUP\",\n      \"SEARCH\",\n      \"PROVISIONING\",\n      \"AUTHENTICATE\",\n      \"GROUP_PROVISIONING\",\n      \"PASSWORD\"\n    ],\n    \"type\": \"OpenLDAP - Direct\",\n    \"connector\": \"active-directory\",\n    \"connectorClass\": \"sailpoint.connector.LDAPConnector\",\n    \"connectorAttributes\": {\n      \"healthCheckTimeout\": 30,\n      \"authSearchAttributes\": [\n        \"cn\",\n        \"uid\",\n        \"mail\"\n      ]\n    },\n    \"deleteThreshold\": 10,\n    \"authoritative\": false,\n    \"managementWorkgroup\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"healthy\": true,\n    \"status\": \"SOURCE_STATE_HEALTHY\",\n    \"since\": \"2021-09-28T15:48:29.3801666300Z\",\n    \"connectorId\": \"active-directory\",\n    \"connectorName\": \"Active Directory\",\n    \"connectionType\": \"file\",\n    \"connectorImplementstionId\": \"delimited-file\"\n  }\n]"
						},
						{
							"id": "34ef3b54-5cba-4057-8a7b-aeda3bc1e493",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources?limit=50&offset=0&count=false&filters=<string>&sorters=<comma-separated>&for-subadmin=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Note that for this API the maximum value for limit is 50.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *co, eq, in, sw*\n\n**type**: *eq, in*\n\n**owner.id**: *eq, in*\n\n**features**: *ca, co*\n\n**created**: *eq*\n\n**modified**: *eq*\n\n**managementWorkgroup.id**: *eq*\n\n**description**: *eq*\n\n**authoritative**: *eq*\n\n**healthy**: *eq*\n\n**status**: *eq, in*\n\n**connectionType**: *eq*\n\n**connectorName**: *eq*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status**"
										},
										{
											"key": "for-subadmin",
											"value": "<string>",
											"description": "Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.\nSubadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This end-point lists all the sources in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "fe8a8738-ab63-4c5d-a3a3-600ab2d873ef",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources?limit=50&offset=0&count=false&filters=<string>&sorters=<comma-separated>&for-subadmin=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Note that for this API the maximum value for limit is 50.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *co, eq, in, sw*\n\n**type**: *eq, in*\n\n**owner.id**: *eq, in*\n\n**features**: *ca, co*\n\n**created**: *eq*\n\n**modified**: *eq*\n\n**managementWorkgroup.id**: *eq*\n\n**description**: *eq*\n\n**authoritative**: *eq*\n\n**healthy**: *eq*\n\n**status**: *eq, in*\n\n**connectionType**: *eq*\n\n**connectorName**: *eq*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status**"
										},
										{
											"key": "for-subadmin",
											"value": "<string>",
											"description": "Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.\nSubadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This end-point lists all the sources in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "aa296e3c-49e6-4847-a3d4-25125aa7b3b5",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources?limit=50&offset=0&count=false&filters=<string>&sorters=<comma-separated>&for-subadmin=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Note that for this API the maximum value for limit is 50.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *co, eq, in, sw*\n\n**type**: *eq, in*\n\n**owner.id**: *eq, in*\n\n**features**: *ca, co*\n\n**created**: *eq*\n\n**modified**: *eq*\n\n**managementWorkgroup.id**: *eq*\n\n**description**: *eq*\n\n**authoritative**: *eq*\n\n**healthy**: *eq*\n\n**status**: *eq, in*\n\n**connectionType**: *eq*\n\n**connectorName**: *eq*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status**"
										},
										{
											"key": "for-subadmin",
											"value": "<string>",
											"description": "Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.\nSubadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This end-point lists all the sources in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "3d93e430-effd-460c-8ee4-96e2dff7e5be",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources?limit=50&offset=0&count=false&filters=<string>&sorters=<comma-separated>&for-subadmin=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Note that for this API the maximum value for limit is 50.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *co, eq, in, sw*\n\n**type**: *eq, in*\n\n**owner.id**: *eq, in*\n\n**features**: *ca, co*\n\n**created**: *eq*\n\n**modified**: *eq*\n\n**managementWorkgroup.id**: *eq*\n\n**description**: *eq*\n\n**authoritative**: *eq*\n\n**healthy**: *eq*\n\n**status**: *eq, in*\n\n**connectionType**: *eq*\n\n**connectorName**: *eq*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status**"
										},
										{
											"key": "for-subadmin",
											"value": "<string>",
											"description": "Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.\nSubadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This end-point lists all the sources in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "95f6a081-0d4c-486f-912e-346b090c0160",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources?limit=50&offset=0&count=false&filters=<string>&sorters=<comma-separated>&for-subadmin=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Note that for this API the maximum value for limit is 50.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *co, eq, in, sw*\n\n**type**: *eq, in*\n\n**owner.id**: *eq, in*\n\n**features**: *ca, co*\n\n**created**: *eq*\n\n**modified**: *eq*\n\n**managementWorkgroup.id**: *eq*\n\n**description**: *eq*\n\n**authoritative**: *eq*\n\n**healthy**: *eq*\n\n**status**: *eq, in*\n\n**connectionType**: *eq*\n\n**connectorName**: *eq*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status**"
										},
										{
											"key": "for-subadmin",
											"value": "<string>",
											"description": "Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.\nSubadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This end-point lists all the sources in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "1a7d5323-188c-47ed-9ebb-a805ce5d0046",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sources?limit=50&offset=0&count=false&filters=<string>&sorters=<comma-separated>&for-subadmin=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Note that for this API the maximum value for limit is 50.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *co, eq, in, sw*\n\n**type**: *eq, in*\n\n**owner.id**: *eq, in*\n\n**features**: *ca, co*\n\n**created**: *eq*\n\n**modified**: *eq*\n\n**managementWorkgroup.id**: *eq*\n\n**description**: *eq*\n\n**authoritative**: *eq*\n\n**healthy**: *eq*\n\n**status**: *eq, in*\n\n**connectionType**: *eq*\n\n**connectorName**: *eq*"
										},
										{
											"key": "sorters",
											"value": "<comma-separated>",
											"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status**"
										},
										{
											"key": "for-subadmin",
											"value": "<string>",
											"description": "Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.\nSubadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This end-point lists all the sources in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a source in IdentityNow.",
					"id": "71c09f97-446c-4aca-a7c1-7d6e4b199030",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/sources?provisionAsCsv=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sources"
							],
							"query": [
								{
									"key": "provisionAsCsv",
									"value": "<boolean>",
									"description": "Configures the source as a DelimitedFile type of source."
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This creates a specific source with a full source JSON representation. Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
					},
					"response": [
						{
							"id": "c7be8991-b3ca-490a-bb75-c2925f89862e",
							"name": "Created Source object. Any passwords will only show the the encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based services, per IdentityNow security design.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sources?provisionAsCsv=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "provisionAsCsv",
											"value": "<boolean>",
											"description": "Configures the source as a DelimitedFile type of source."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a specific source with a full source JSON representation. Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"2c91808568c529c60168cca6f90c1324\",\n  \"description\": \"This is the corporate directory.\",\n  \"owner\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"cluster\": {\n    \"type\": \"CLUSTER\",\n    \"name\": \"Corporate Cluster\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"ACCOUNT_CORRELATION_CONFIG\",\n    \"name\": \"Directory [source-62867] Account Correlation\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"manager\",\n    \"identityAttribute\": \"manager\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"account\"\n    },\n    {\n      \"type\": \"CONNECTOR_SCHEMA\",\n      \"name\": \"group\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"PASSWORD_POLICY\",\n      \"name\": \"Corporate Password Policy\"\n    }\n  ],\n  \"features\": [\n    \"SYNC_PROVISIONING\",\n    \"MANAGER_LOOKUP\",\n    \"SEARCH\",\n    \"PROVISIONING\",\n    \"AUTHENTICATE\",\n    \"GROUP_PROVISIONING\",\n    \"PASSWORD\"\n  ],\n  \"type\": \"OpenLDAP - Direct\",\n  \"connector\": \"active-directory\",\n  \"connectorClass\": \"sailpoint.connector.LDAPConnector\",\n  \"connectorAttributes\": {\n    \"healthCheckTimeout\": 30,\n    \"authSearchAttributes\": [\n      \"cn\",\n      \"uid\",\n      \"mail\"\n    ]\n  },\n  \"deleteThreshold\": 10,\n  \"authoritative\": false,\n  \"managementWorkgroup\": {\n    \"type\": \"IDENTITY\",\n    \"id\": \"2c91808568c529c60168cca6f90c1313\",\n    \"name\": \"William Wilson\"\n  },\n  \"healthy\": true,\n  \"status\": \"SOURCE_STATE_HEALTHY\",\n  \"since\": \"2021-09-28T15:48:29.3801666300Z\",\n  \"connectorId\": \"active-directory\",\n  \"connectorName\": \"Active Directory\",\n  \"connectionType\": \"file\",\n  \"connectorImplementstionId\": \"delimited-file\"\n}"
						},
						{
							"id": "a1231d98-28d4-4ec0-946e-072321b24caf",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sources?provisionAsCsv=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "provisionAsCsv",
											"value": "<boolean>",
											"description": "Configures the source as a DelimitedFile type of source."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a specific source with a full source JSON representation. Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "0ad4266c-f16e-4ef0-9df7-149e006dba8e",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sources?provisionAsCsv=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "provisionAsCsv",
											"value": "<boolean>",
											"description": "Configures the source as a DelimitedFile type of source."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a specific source with a full source JSON representation. Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "45363287-4fa3-44e1-9d6c-eb4bf69c7313",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sources?provisionAsCsv=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "provisionAsCsv",
											"value": "<boolean>",
											"description": "Configures the source as a DelimitedFile type of source."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a specific source with a full source JSON representation. Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "2671bf37-488e-4abf-a47c-aa58571f44fb",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sources?provisionAsCsv=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "provisionAsCsv",
											"value": "<boolean>",
											"description": "Configures the source as a DelimitedFile type of source."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a specific source with a full source JSON representation. Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "a5d85a04-4e1c-4937-bac7-e0441539d500",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"owner\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"cluster\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationConfig\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"accountCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"managerCorrelationMapping\": {\n    \"accountAttribute\": \"<string>\",\n    \"identityAttribute\": \"<string>\"\n  },\n  \"managerCorrelationRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"beforeProvisioningRule\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"schemas\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"passwordPolicies\": [\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"connector\": \"<string>\",\n  \"connectorClass\": \"<string>\",\n  \"connectorAttributes\": \"<object>\",\n  \"deleteThreshold\": \"<integer>\",\n  \"authoritative\": \"<boolean>\",\n  \"managementWorkgroup\": {\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"healthy\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"since\": \"<string>\",\n  \"connectorId\": \"<string>\",\n  \"connectorName\": \"<string>\",\n  \"connectionType\": \"<string>\",\n  \"connectorImplementstionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sources?provisionAsCsv=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "provisionAsCsv",
											"value": "<boolean>",
											"description": "Configures the source as a DelimitedFile type of source."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This creates a specific source with a full source JSON representation. Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.\nA token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "576f24a1-be05-4e6d-8133-e3dcac4a113d"
		},
		{
			"name": "transforms",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Transform by ID",
							"id": "abcdd4e6-5863-405e-ba23-6ad98eac7a83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transforms/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the transform to retrieve"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API returns the transform specified by the given ID.\nA token with transform read authority is required to call this API."
							},
							"response": [
								{
									"id": "cf4075ab-1915-457a-b7ac-eb0c1f94cf06",
									"name": "Transform with the given ID",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to retrieve"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the transform specified by the given ID.\nA token with transform read authority is required to call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"Timestamp To Date\",\n  \"type\": \"dateFormat\",\n  \"attributes\": {\n    \"sourceName\": \"Workday\",\n    \"attributeName\": \"DEPARTMENT\",\n    \"accountSortAttribute\": \"created\",\n    \"accountSortDescending\": \"in\",\n    \"accountReturnFirstLink\": \"labore reprehenderit aute\",\n    \"accountFilter\": \"!(nativeIdentity.startsWith(\\\"*DELETED*\\\"))\",\n    \"accountPropertyFilter\": \"(groups.containsAll({'Admin'}) || location == 'Austin')\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"type\": \"accountAttribute\",\n      \"attributes\": {\n        \"attributeName\": \"first_name\",\n        \"sourceName\": \"Source\"\n      }\n    }\n  },\n  \"id\": \"2cd78adghjkja34jh2b1hkjhasuecd\",\n  \"internal\": false\n}"
								},
								{
									"id": "eac1b2ca-ec58-46ea-9b30-91b88342ea93",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to retrieve"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the transform specified by the given ID.\nA token with transform read authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "cb543f0a-c45e-4d18-82ff-202250289c8d",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to retrieve"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the transform specified by the given ID.\nA token with transform read authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "3fcc9e0b-50bd-4b8b-83a6-cd56f6cfcd6c",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to retrieve"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the transform specified by the given ID.\nA token with transform read authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "72c31e37-e936-43ec-8791-eab8b0f18b79",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to retrieve"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the transform specified by the given ID.\nA token with transform read authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "9e3d1621-6040-4ad3-8bc5-9a1b0411cffd",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to retrieve"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the transform specified by the given ID.\nA token with transform read authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "13f4580c-ddc7-49b9-a37c-b2ffac2bf85b",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to retrieve"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API returns the transform specified by the given ID.\nA token with transform read authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a transform",
							"id": "cd757822-508a-457c-9d94-4af50e186f05",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transforms/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the transform to update"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Replaces the transform specified by the given ID with the transform provided in the request body. Only the \"attributes\" field is mutable. Attempting to change other properties (ex. \"name\" and \"type\") will result in an error.\nA token with transform write authority is required to call this API."
							},
							"response": [
								{
									"id": "8086eaec-5165-4cf8-9583-90d2e9a71dac",
									"name": "Indicates the transform was successfully updated and returns its new representation.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Replaces the transform specified by the given ID with the transform provided in the request body. Only the \"attributes\" field is mutable. Attempting to change other properties (ex. \"name\" and \"type\") will result in an error.\nA token with transform write authority is required to call this API."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2cd78adghjkja34jh2b1hkjhasuecd\",\n  \"name\": \"Timestamp To Date\",\n  \"type\": \"dateFormat\",\n  \"attributes\": {\n    \"inputFormat\": \"MMM-dd-yyyy, HH:mm:ss.SSS\",\n    \"outputFormat\": \"yyyy/dd/MM\"\n  },\n  \"internal\": false\n}"
								},
								{
									"id": "201d4c6c-2ae4-4ec8-b323-ce7d3ea05162",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Replaces the transform specified by the given ID with the transform provided in the request body. Only the \"attributes\" field is mutable. Attempting to change other properties (ex. \"name\" and \"type\") will result in an error.\nA token with transform write authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "fac0a8cc-11ad-40cf-b734-ee500cb12070",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Replaces the transform specified by the given ID with the transform provided in the request body. Only the \"attributes\" field is mutable. Attempting to change other properties (ex. \"name\" and \"type\") will result in an error.\nA token with transform write authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "4d4ec4ff-d2bd-499e-a4d2-fe5319e3d70b",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Replaces the transform specified by the given ID with the transform provided in the request body. Only the \"attributes\" field is mutable. Attempting to change other properties (ex. \"name\" and \"type\") will result in an error.\nA token with transform write authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "b0abe7f0-09f1-4a13-9179-7e41b2aea89c",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Replaces the transform specified by the given ID with the transform provided in the request body. Only the \"attributes\" field is mutable. Attempting to change other properties (ex. \"name\" and \"type\") will result in an error.\nA token with transform write authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "02d6c5c2-5f05-44de-af7f-82c65df71b99",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Replaces the transform specified by the given ID with the transform provided in the request body. Only the \"attributes\" field is mutable. Attempting to change other properties (ex. \"name\" and \"type\") will result in an error.\nA token with transform write authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "b6cfa83c-f149-48f7-b4a1-794457963a4f",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to update"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Replaces the transform specified by the given ID with the transform provided in the request body. Only the \"attributes\" field is mutable. Attempting to change other properties (ex. \"name\" and \"type\") will result in an error.\nA token with transform write authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete a transform",
							"id": "ae52a68b-9abf-4635-a095-6d4a664f0384",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transforms/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the transform to delete"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.\nA token with transform delete authority is required to call this API."
							},
							"response": [
								{
									"id": "c140de8e-d7bc-4f51-9e3f-aef3474d5d01",
									"name": "No content - indicates the request was successful but there is no content to be returned in the response.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.\nA token with transform delete authority is required to call this API."
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "ac98e2c8-8898-46b9-904e-c21f357e9a1b",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.\nA token with transform delete authority is required to call this API."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "1e45e266-e0ac-4e9d-8c67-59872d03c354",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.\nA token with transform delete authority is required to call this API."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "1f538f16-ef86-4ef5-97b0-6166237b4e53",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.\nA token with transform delete authority is required to call this API."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "c39db19f-3b67-400c-a559-8a671e70aa7b",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.\nA token with transform delete authority is required to call this API."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "23cd358b-43c4-43eb-9cbc-25855f09f446",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.\nA token with transform delete authority is required to call this API."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "dc19ed2f-003d-450a-ac54-f00bbda63112",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://tenant.api.identitynow.com/oauth/token",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"value": "sp:scopes:default sp:scopes:all",
													"type": "string"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transforms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transforms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the transform to delete"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.\nA token with transform delete authority is required to call this API."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "945500fd-ed45-4ad0-a834-5512cd6646d6"
				},
				{
					"name": "List transforms",
					"id": "db52836f-f6e9-4475-97f5-61cfc1e82d05",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transforms?offset=0&limit=250&count=false&name=<string>&filters=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transforms"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Name of the transform to retrieve from the list."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**internal**: *eq*\n**name**: *eq*, *sw*"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Gets a list of all saved transform objects.\nA token with transforms-list read authority is required to call this API."
					},
					"response": [
						{
							"id": "1b3a04c3-16e6-4253-915c-7d847ce6701a",
							"name": "A list of transforms matching the given criteria.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transforms?offset=0&limit=250&count=false&name=<string>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Name of the transform to retrieve from the list."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**internal**: *eq*\n**name**: *eq*, *sw*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Gets a list of all saved transform objects.\nA token with transforms-list read authority is required to call this API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"2cd78adghjkja34jh2b1hkjhasuecd\",\n    \"name\": \"Timestamp To Date\",\n    \"type\": \"dateFormat\",\n    \"attributes\": {\n      \"inputFormat\": \"MMM-dd-yyyy, HH:mm:ss.SSS\",\n      \"outputFormat\": \"yyyy/dd/MM\"\n    },\n    \"internal\": false\n  },\n  {\n    \"id\": \"2lkas8dhj4bkuakja77giih7l4ashh\",\n    \"name\": \"PrefixSubstring\",\n    \"type\": \"substring\",\n    \"attributes\": {\n      \"begin\": 0,\n      \"end\": 3\n    },\n    \"internal\": true\n  }\n]"
						},
						{
							"id": "8ede71a6-9928-487c-b17d-74d3ea6ab53a",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transforms?offset=0&limit=250&count=false&name=<string>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Name of the transform to retrieve from the list."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**internal**: *eq*\n**name**: *eq*, *sw*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Gets a list of all saved transform objects.\nA token with transforms-list read authority is required to call this API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "132fbdca-7ff1-49d9-9266-c91f22ee6dab",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transforms?offset=0&limit=250&count=false&name=<string>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Name of the transform to retrieve from the list."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**internal**: *eq*\n**name**: *eq*, *sw*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Gets a list of all saved transform objects.\nA token with transforms-list read authority is required to call this API."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "74888162-c2f8-44d1-afc3-b7e017333ba6",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transforms?offset=0&limit=250&count=false&name=<string>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Name of the transform to retrieve from the list."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**internal**: *eq*\n**name**: *eq*, *sw*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Gets a list of all saved transform objects.\nA token with transforms-list read authority is required to call this API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "ec3fe7d9-d43f-420f-841b-f3a334625c59",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transforms?offset=0&limit=250&count=false&name=<string>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Name of the transform to retrieve from the list."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**internal**: *eq*\n**name**: *eq*, *sw*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Gets a list of all saved transform objects.\nA token with transforms-list read authority is required to call this API."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "ad870de9-0730-4c1d-8aa0-ed3d24b45964",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transforms?offset=0&limit=250&count=false&name=<string>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Name of the transform to retrieve from the list."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**internal**: *eq*\n**name**: *eq*, *sw*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Gets a list of all saved transform objects.\nA token with transforms-list read authority is required to call this API."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "e2a9c887-2bf7-4b77-a54b-7542f0fb98fa",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transforms?offset=0&limit=250&count=false&name=<string>&filters=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Name of the transform to retrieve from the list."
										},
										{
											"key": "filters",
											"value": "<string>",
											"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\nFiltering is supported for the following fields and operators:\n**internal**: *eq*\n**name**: *eq*, *sw*"
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Gets a list of all saved transform objects.\nA token with transforms-list read authority is required to call this API."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create transform",
					"id": "fc3d4b27-363d-4e5e-84a8-9324e24fdc01",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transforms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transforms"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "Creates a new transform object immediately. By default, the internal flag is set to false to indicate that this is a custom transform. Only SailPoint employees have the ability to create a transform with internal set to true. Newly created Transforms can be used in the Identity Profile mappings within the UI. A token with transform write authority is required to call this API."
					},
					"response": [
						{
							"id": "c7b90ed2-4b82-4207-a665-626ace5aebce",
							"name": "Indicates the transform was successfully created and returns its representation.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new transform object immediately. By default, the internal flag is set to false to indicate that this is a custom transform. Only SailPoint employees have the ability to create a transform with internal set to true. Newly created Transforms can be used in the Identity Profile mappings within the UI. A token with transform write authority is required to call this API."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"Timestamp To Date\",\n  \"type\": \"dateFormat\",\n  \"attributes\": {\n    \"sourceName\": \"Workday\",\n    \"attributeName\": \"DEPARTMENT\",\n    \"accountSortAttribute\": \"created\",\n    \"accountSortDescending\": \"in\",\n    \"accountReturnFirstLink\": \"labore reprehenderit aute\",\n    \"accountFilter\": \"!(nativeIdentity.startsWith(\\\"*DELETED*\\\"))\",\n    \"accountPropertyFilter\": \"(groups.containsAll({'Admin'}) || location == 'Austin')\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"type\": \"accountAttribute\",\n      \"attributes\": {\n        \"attributeName\": \"first_name\",\n        \"sourceName\": \"Source\"\n      }\n    }\n  },\n  \"id\": \"2cd78adghjkja34jh2b1hkjhasuecd\",\n  \"internal\": false\n}"
						},
						{
							"id": "aa15a3a4-7718-42e0-84a6-c006b667e125",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new transform object immediately. By default, the internal flag is set to false to indicate that this is a custom transform. Only SailPoint employees have the ability to create a transform with internal set to true. Newly created Transforms can be used in the Identity Profile mappings within the UI. A token with transform write authority is required to call this API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "11369864-8ec1-4efa-9c86-61f0eccd5180",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new transform object immediately. By default, the internal flag is set to false to indicate that this is a custom transform. Only SailPoint employees have the ability to create a transform with internal set to true. Newly created Transforms can be used in the Identity Profile mappings within the UI. A token with transform write authority is required to call this API."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "2182133a-6482-42d9-819c-f81733a46f99",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new transform object immediately. By default, the internal flag is set to false to indicate that this is a custom transform. Only SailPoint employees have the ability to create a transform with internal set to true. Newly created Transforms can be used in the Identity Profile mappings within the UI. A token with transform write authority is required to call this API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "8a9de211-c767-4bff-932e-dc12135c63f5",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new transform object immediately. By default, the internal flag is set to false to indicate that this is a custom transform. Only SailPoint employees have the ability to create a transform with internal set to true. Newly created Transforms can be used in the Identity Profile mappings within the UI. A token with transform write authority is required to call this API."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "d4cd5895-ec5f-437d-ad57-5fa238d517dc",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new transform object immediately. By default, the internal flag is set to false to indicate that this is a custom transform. Only SailPoint employees have the ability to create a transform with internal set to true. Newly created Transforms can be used in the Identity Profile mappings within the UI. A token with transform write authority is required to call this API."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "7dc6732b-d809-4a64-b7bc-e6ca7db6c118",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://tenant.api.identitynow.com/oauth/token",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "sp:scopes:default sp:scopes:all",
											"type": "string"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributes\": {\n    \"sourceName\": \"<string>\",\n    \"attributeName\": \"<string>\",\n    \"accountSortAttribute\": \"<string>\",\n    \"accountSortDescending\": \"<string>\",\n    \"accountReturnFirstLink\": \"<string>\",\n    \"accountFilter\": \"<string>\",\n    \"accountPropertyFilter\": \"<string>\",\n    \"requiresPeriodicRefresh\": false,\n    \"input\": {\n      \"Ut7\": -70029002,\n      \"consectetur_96c\": -63232760,\n      \"sed3\": 32331675\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transforms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transforms"
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "Creates a new transform object immediately. By default, the internal flag is set to false to indicate that this is a custom transform. Only SailPoint employees have the ability to create a transform with internal set to true. Newly created Transforms can be used in the Identity Profile mappings within the UI. A token with transform write authority is required to call this API."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "4901f406-9f25-4c3b-935e-49aa33b3b263"
		},
		{
			"name": "work-items",
			"item": [
				{
					"name": "completed",
					"item": [
						{
							"name": "Completed Work Items",
							"id": "5d0a705d-00eb-4330-8c85-d79165702f81",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/completed?ownerId=<string>&limit=250&offset=0&count=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"completed"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request."
										},
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of completed work items belonging to either the specified user(admin required), or the current user."
							},
							"response": [
								{
									"id": "1bde6c9d-43c4-4c71-8192-0d7f9920a56f",
									"name": "List of completed work items.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed?ownerId=<string>&limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request."
												},
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a collection of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"requesterDisplayName\": \"John Smith\",\n    \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"ownerName\": \"Jason Smith\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"description\": \"Create account on source 'AD'\",\n    \"state\": \"CANCELED\",\n    \"type\": \"DELEGATION\",\n    \"remediationItems\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"targetName\": \"john.smith\",\n      \"targetDisplayName\": \"emailAddress\",\n      \"applicationName\": \"Active Directory\",\n      \"attributeName\": \"phoneNumber\",\n      \"attributeOperation\": \"update\",\n      \"attributeValue\": \"512-555-1212\",\n      \"nativeIdentity\": \"jason.smith2\"\n    },\n    \"approvalItems\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"account\": \"john.smith\",\n      \"application\": \"Active Directory\",\n      \"attributeName\": \"emailAddress\",\n      \"attributeOperation\": \"update\",\n      \"attributeValue\": \"a@b.com\",\n      \"state\": \"REJECTED\"\n    },\n    \"name\": \"Account Create\",\n    \"completed\": \"2018-10-19T13:49:37.385Z\",\n    \"numItems\": 19,\n    \"form\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"name\": \"AccountSelection Form\",\n      \"title\": \"Account Selection for John.Doe\",\n      \"subtitle\": \"Please select from the following\",\n      \"targetUser\": \"Jane.Doe\",\n      \"sections\": {\n        \"name\": \"Field1\",\n        \"label\": \"Section 1\"\n      }\n    },\n    \"errors\": [\n      \"The work item ID that was specified was not found.\"\n    ]\n  },\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"requesterDisplayName\": \"John Smith\",\n    \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"ownerName\": \"Jason Smith\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"description\": \"Create account on source 'AD'\",\n    \"state\": \"RETURNED\",\n    \"type\": \"VIOLATIONREVIEW\",\n    \"remediationItems\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"targetName\": \"john.smith\",\n      \"targetDisplayName\": \"emailAddress\",\n      \"applicationName\": \"Active Directory\",\n      \"attributeName\": \"phoneNumber\",\n      \"attributeOperation\": \"update\",\n      \"attributeValue\": \"512-555-1212\",\n      \"nativeIdentity\": \"jason.smith2\"\n    },\n    \"approvalItems\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"account\": \"john.smith\",\n      \"application\": \"Active Directory\",\n      \"attributeName\": \"emailAddress\",\n      \"attributeOperation\": \"update\",\n      \"attributeValue\": \"a@b.com\",\n      \"state\": \"RETURNED\"\n    },\n    \"name\": \"Account Create\",\n    \"completed\": \"2018-10-19T13:49:37.385Z\",\n    \"numItems\": 19,\n    \"form\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"name\": \"AccountSelection Form\",\n      \"title\": \"Account Selection for John.Doe\",\n      \"subtitle\": \"Please select from the following\",\n      \"targetUser\": \"Jane.Doe\",\n      \"sections\": {\n        \"name\": \"Field1\",\n        \"label\": \"Section 1\"\n      }\n    },\n    \"errors\": [\n      \"The work item ID that was specified was not found.\"\n    ]\n  }\n]"
								},
								{
									"id": "243e5b22-9714-405d-8062-00e0595d4ff8",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed?ownerId=<string>&limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request."
												},
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a collection of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "6e55e15e-c63f-4987-990c-3ccb5dc7581a",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed?ownerId=<string>&limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request."
												},
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a collection of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "d63f28d7-99aa-48f7-9c7f-1b985cf804e5",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed?ownerId=<string>&limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request."
												},
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a collection of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "802b18dd-60e8-48b0-ab85-573079d4c23e",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed?ownerId=<string>&limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request."
												},
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a collection of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "9c046da3-65f2-4657-ab7c-aeb71040725f",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed?ownerId=<string>&limit=250&offset=0&count=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "The id of the owner of the work item list being requested.  Either an admin, or the owning/current user must make this request."
												},
												{
													"key": "limit",
													"value": "250",
													"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												},
												{
													"key": "count",
													"value": "false",
													"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a collection of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Count Completed Work Items",
							"id": "5e7c48b3-4559-4dcd-a1cf-81329a0e1416",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/completed/count?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"completed",
										"count"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a count of completed work items belonging to either the specified user(admin required), or the current user."
							},
							"response": [
								{
									"id": "eb9ae903-51c3-435e-9464-85c08ca08135",
									"name": "List of work items",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed/count?ownerId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed",
												"count"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "ID of the work item owner."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a count of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 29\n}"
								},
								{
									"id": "af230813-ff10-483d-87a1-4d732e037c6c",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed/count?ownerId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed",
												"count"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "ID of the work item owner."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a count of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "c0341770-c82f-4e61-ac45-3af0bfa97f26",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed/count?ownerId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed",
												"count"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "ID of the work item owner."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a count of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "2857f404-5599-4ed5-8484-35ecd19b2d3f",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed/count?ownerId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed",
												"count"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "ID of the work item owner."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a count of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "5b83c3a4-08ea-4153-9539-2e49fbc1c427",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed/count?ownerId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed",
												"count"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "ID of the work item owner."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a count of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "01fe663b-fb54-4f54-ba0f-24d8005b521d",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/completed/count?ownerId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												"completed",
												"count"
											],
											"query": [
												{
													"key": "ownerId",
													"value": "<string>",
													"description": "ID of the work item owner."
												}
											],
											"variable": [
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets a count of completed work items belonging to either the specified user(admin required), or the current user."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "eef25d35-4b72-47d9-898c-d79da9537e99"
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get a Work Item",
							"id": "e39aa28a-1916-49f9-a64a-3d73434cc8a3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) ID of the work item."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets the details of a Work Item belonging to either the specified user(admin required), or the current user."
							},
							"response": [
								{
									"id": "eaf98665-0c6a-4652-9450-1d95e047fded",
									"name": "The work item with the given ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the work item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets the details of a Work Item belonging to either the specified user(admin required), or the current user."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterDisplayName\": \"John Smith\",\n  \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"ownerName\": \"Jason Smith\",\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"description\": \"Create account on source 'AD'\",\n  \"state\": \"FINISHED\",\n  \"type\": \"TEST\",\n  \"remediationItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetName\": \"john.smith\",\n    \"targetDisplayName\": \"emailAddress\",\n    \"applicationName\": \"Active Directory\",\n    \"attributeName\": \"phoneNumber\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"512-555-1212\",\n    \"nativeIdentity\": \"jason.smith2\"\n  },\n  \"approvalItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"account\": \"john.smith\",\n    \"application\": \"Active Directory\",\n    \"attributeName\": \"emailAddress\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"a@b.com\",\n    \"state\": \"PENDING\"\n  },\n  \"name\": \"Account Create\",\n  \"completed\": \"2018-10-19T13:49:37.385Z\",\n  \"numItems\": 19,\n  \"form\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"AccountSelection Form\",\n    \"title\": \"Account Selection for John.Doe\",\n    \"subtitle\": \"Please select from the following\",\n    \"targetUser\": \"Jane.Doe\",\n    \"sections\": {\n      \"name\": \"Field1\",\n      \"label\": \"Section 1\"\n    }\n  },\n  \"errors\": [\n    \"The work item ID that was specified was not found.\"\n  ]\n}"
								},
								{
									"id": "bb81d5cc-0dfd-44a0-9af6-f4a49baf24ba",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the work item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets the details of a Work Item belonging to either the specified user(admin required), or the current user."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "6470bde1-d59e-45f5-83db-bb6d5c9aac96",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the work item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets the details of a Work Item belonging to either the specified user(admin required), or the current user."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "e74f70ef-d8c9-43a5-8e8c-0a414bafb0a2",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the work item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets the details of a Work Item belonging to either the specified user(admin required), or the current user."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "8318222d-3dfe-4cca-9083-35b9e83c298f",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the work item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets the details of a Work Item belonging to either the specified user(admin required), or the current user."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "2520f2df-a0ca-4011-a598-1f81b525bfc4",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) ID of the work item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This gets the details of a Work Item belonging to either the specified user(admin required), or the current user."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Complete a Work Item",
							"id": "5e49dcf9-917b-47f1-b095-d1f383d23db9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API completes a work item. Either an admin, or the owning/current user must make this request."
							},
							"response": [
								{
									"id": "38abab48-2da9-4538-af53-1c7602000764",
									"name": "A WorkItems object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API completes a work item. Either an admin, or the owning/current user must make this request."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterDisplayName\": \"John Smith\",\n  \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"ownerName\": \"Jason Smith\",\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"description\": \"Create account on source 'AD'\",\n  \"state\": \"FINISHED\",\n  \"type\": \"TEST\",\n  \"remediationItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetName\": \"john.smith\",\n    \"targetDisplayName\": \"emailAddress\",\n    \"applicationName\": \"Active Directory\",\n    \"attributeName\": \"phoneNumber\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"512-555-1212\",\n    \"nativeIdentity\": \"jason.smith2\"\n  },\n  \"approvalItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"account\": \"john.smith\",\n    \"application\": \"Active Directory\",\n    \"attributeName\": \"emailAddress\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"a@b.com\",\n    \"state\": \"PENDING\"\n  },\n  \"name\": \"Account Create\",\n  \"completed\": \"2018-10-19T13:49:37.385Z\",\n  \"numItems\": 19,\n  \"form\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"AccountSelection Form\",\n    \"title\": \"Account Selection for John.Doe\",\n    \"subtitle\": \"Please select from the following\",\n    \"targetUser\": \"Jane.Doe\",\n    \"sections\": {\n      \"name\": \"Field1\",\n      \"label\": \"Section 1\"\n    }\n  },\n  \"errors\": [\n    \"The work item ID that was specified was not found.\"\n  ]\n}"
								},
								{
									"id": "9e3ae5c2-fab5-4ba3-82c2-ab8c96924a10",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API completes a work item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "4de91f69-fa71-42d4-a90e-c636cd7a6087",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API completes a work item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "608babcb-e772-4b74-a92d-d11c3e7a1f48",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API completes a work item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "5c052286-056b-47f3-96ca-adcece84fb53",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API completes a work item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "c18ed0d4-90f3-48ee-9120-b9bffb49341d",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API completes a work item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "23535283-7be1-468e-b338-372298840426",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API completes a work item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Approve an Approval Item",
							"id": "bfd2f954-a974-4796-96c4-d3706e4f98e0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/:id/approve/:approvalItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										":id",
										"approve",
										":approvalItemId"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "approvalItemId",
											"value": "<string>",
											"description": "(Required) The ID of the approval item."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API approves an Approval Item. Either an admin, or the owning/current user must make this request."
							},
							"response": [
								{
									"id": "38031828-3698-4187-8ae6-29d301df6875",
									"name": "A work items details object.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/approve/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"approve",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API approves an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterDisplayName\": \"John Smith\",\n  \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"ownerName\": \"Jason Smith\",\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"description\": \"Create account on source 'AD'\",\n  \"state\": \"FINISHED\",\n  \"type\": \"TEST\",\n  \"remediationItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetName\": \"john.smith\",\n    \"targetDisplayName\": \"emailAddress\",\n    \"applicationName\": \"Active Directory\",\n    \"attributeName\": \"phoneNumber\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"512-555-1212\",\n    \"nativeIdentity\": \"jason.smith2\"\n  },\n  \"approvalItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"account\": \"john.smith\",\n    \"application\": \"Active Directory\",\n    \"attributeName\": \"emailAddress\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"a@b.com\",\n    \"state\": \"PENDING\"\n  },\n  \"name\": \"Account Create\",\n  \"completed\": \"2018-10-19T13:49:37.385Z\",\n  \"numItems\": 19,\n  \"form\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"AccountSelection Form\",\n    \"title\": \"Account Selection for John.Doe\",\n    \"subtitle\": \"Please select from the following\",\n    \"targetUser\": \"Jane.Doe\",\n    \"sections\": {\n      \"name\": \"Field1\",\n      \"label\": \"Section 1\"\n    }\n  },\n  \"errors\": [\n    \"The work item ID that was specified was not found.\"\n  ]\n}"
								},
								{
									"id": "84934637-197c-4ade-8aba-d8a86a99cfb6",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/approve/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"approve",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API approves an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "a5c55378-5218-43bc-975b-7ee7cd77966c",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/approve/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"approve",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API approves an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "cc8c4a01-b541-410f-b81a-9de2c29d599a",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/approve/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"approve",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API approves an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "480e574c-ffb3-4e28-bb49-6e8bd5e9a0bb",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/approve/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"approve",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API approves an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "f0b7306b-ba74-4c46-bef7-c35cafd873c9",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/approve/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"approve",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API approves an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "a77221ab-4eb1-4cf0-a7bc-a7d0ceb96188",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/approve/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"approve",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API approves an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Reject an Approval Item",
							"id": "d54e790c-850d-44cf-978c-2872ed7cdf32",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/:id/reject/:approvalItemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										":id",
										"reject",
										":approvalItemId"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "approvalItemId",
											"value": "<string>",
											"description": "(Required) The ID of the approval item."
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API rejects an Approval Item. Either an admin, or the owning/current user must make this request."
							},
							"response": [
								{
									"id": "cb7abc6f-6595-4236-b938-b8fb12257533",
									"name": "A work items details object.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/reject/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"reject",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API rejects an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterDisplayName\": \"John Smith\",\n  \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"ownerName\": \"Jason Smith\",\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"description\": \"Create account on source 'AD'\",\n  \"state\": \"FINISHED\",\n  \"type\": \"TEST\",\n  \"remediationItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetName\": \"john.smith\",\n    \"targetDisplayName\": \"emailAddress\",\n    \"applicationName\": \"Active Directory\",\n    \"attributeName\": \"phoneNumber\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"512-555-1212\",\n    \"nativeIdentity\": \"jason.smith2\"\n  },\n  \"approvalItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"account\": \"john.smith\",\n    \"application\": \"Active Directory\",\n    \"attributeName\": \"emailAddress\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"a@b.com\",\n    \"state\": \"PENDING\"\n  },\n  \"name\": \"Account Create\",\n  \"completed\": \"2018-10-19T13:49:37.385Z\",\n  \"numItems\": 19,\n  \"form\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"AccountSelection Form\",\n    \"title\": \"Account Selection for John.Doe\",\n    \"subtitle\": \"Please select from the following\",\n    \"targetUser\": \"Jane.Doe\",\n    \"sections\": {\n      \"name\": \"Field1\",\n      \"label\": \"Section 1\"\n    }\n  },\n  \"errors\": [\n    \"The work item ID that was specified was not found.\"\n  ]\n}"
								},
								{
									"id": "7ada1ade-b670-44b9-bd67-fdd56b137912",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/reject/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"reject",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API rejects an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "d0d42756-8d4b-4e40-86cb-30b39b7512e5",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/reject/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"reject",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API rejects an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "2cb24a62-10b3-4085-a3da-4986abfb676a",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/reject/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"reject",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API rejects an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "7a384c80-150a-423a-a6f6-ecd4ed324d6c",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/reject/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"reject",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API rejects an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "44b4620b-0444-4c3a-8d50-0ec0187974ff",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/reject/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"reject",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API rejects an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "fa6c9853-4fa5-4c0b-bb4f-c404d01ea9bd",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/reject/:approvalItemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"reject",
												":approvalItemId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "approvalItemId",
													"value": "<string>",
													"description": "(Required) The ID of the approval item."
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API rejects an Approval Item. Either an admin, or the owning/current user must make this request."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Submit Account Selections",
							"id": "efb21668-79bc-4648-9b8c-c4410732022d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"voluptate_c5\": false,\n  \"ut1c8\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/work-items/:id/submit-account-selection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										":id",
										"submit-account-selection"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API submits account selections. Either an admin, or the owning/current user must make this request."
							},
							"response": [
								{
									"id": "6a92d6c5-b1e6-4005-909f-b3bed1d567da",
									"name": "A work items details object.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"voluptate_c5\": false,\n  \"ut1c8\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/submit-account-selection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"submit-account-selection"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits account selections. Either an admin, or the owning/current user must make this request."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterDisplayName\": \"John Smith\",\n  \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"ownerName\": \"Jason Smith\",\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"description\": \"Create account on source 'AD'\",\n  \"state\": \"FINISHED\",\n  \"type\": \"TEST\",\n  \"remediationItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetName\": \"john.smith\",\n    \"targetDisplayName\": \"emailAddress\",\n    \"applicationName\": \"Active Directory\",\n    \"attributeName\": \"phoneNumber\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"512-555-1212\",\n    \"nativeIdentity\": \"jason.smith2\"\n  },\n  \"approvalItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"account\": \"john.smith\",\n    \"application\": \"Active Directory\",\n    \"attributeName\": \"emailAddress\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"a@b.com\",\n    \"state\": \"PENDING\"\n  },\n  \"name\": \"Account Create\",\n  \"completed\": \"2018-10-19T13:49:37.385Z\",\n  \"numItems\": 19,\n  \"form\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"AccountSelection Form\",\n    \"title\": \"Account Selection for John.Doe\",\n    \"subtitle\": \"Please select from the following\",\n    \"targetUser\": \"Jane.Doe\",\n    \"sections\": {\n      \"name\": \"Field1\",\n      \"label\": \"Section 1\"\n    }\n  },\n  \"errors\": [\n    \"The work item ID that was specified was not found.\"\n  ]\n}"
								},
								{
									"id": "6ed43721-6658-454d-9146-78be977186a0",
									"name": "Client Error - Returned if the request body is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"voluptate_c5\": false,\n  \"ut1c8\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/submit-account-selection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"submit-account-selection"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits account selections. Either an admin, or the owning/current user must make this request."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
								},
								{
									"id": "089a978c-24c5-4b4a-92fd-ea9142c3894f",
									"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"voluptate_c5\": false,\n  \"ut1c8\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/submit-account-selection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"submit-account-selection"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits account selections. Either an admin, or the owning/current user must make this request."
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {}\n}"
								},
								{
									"id": "28d19002-9a50-4f4a-a413-485f138bf6e6",
									"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"voluptate_c5\": false,\n  \"ut1c8\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/submit-account-selection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"submit-account-selection"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits account selections. Either an admin, or the owning/current user must make this request."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
								},
								{
									"id": "66977f06-93c5-48ce-adcc-96ab5af567ee",
									"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"voluptate_c5\": false,\n  \"ut1c8\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/submit-account-selection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"submit-account-selection"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits account selections. Either an admin, or the owning/current user must make this request."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
								},
								{
									"id": "4d4cc6c0-e4be-4262-8796-9e4e7546f6ed",
									"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"voluptate_c5\": false,\n  \"ut1c8\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/submit-account-selection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"submit-account-selection"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits account selections. Either an admin, or the owning/current user must make this request."
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": {}\n}"
								},
								{
									"id": "c979388a-73ab-4e98-a9c7-3e48f7a1420c",
									"name": "Internal Server Error - Returned if there is an unexpected error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"voluptate_c5\": false,\n  \"ut1c8\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/work-items/:id/submit-account-selection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"work-items",
												":id",
												"submit-account-selection"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The ID of the work item"
												},
												{
													"key": "tenant",
													"value": "{{tenant}}",
													"description": "This is the name of your tenant, typically your company's name."
												}
											]
										},
										"description": "This API submits account selections. Either an admin, or the owning/current user must make this request."
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "3a7362f6-afd3-47b7-98b8-f9be9b730e21"
				},
				{
					"name": "List Work Items",
					"id": "bc630dbd-0cc5-4dd5-801c-1ebf06d33628",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/work-items?limit=250&offset=0&count=false&ownerId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"work-items"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "ownerId",
									"value": "<string>",
									"description": "ID of the work item owner."
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a collection of work items belonging to either the specified user(admin required), or the current user."
					},
					"response": [
						{
							"id": "2aa7956a-7d5c-4fcb-87d4-b73d5173edba",
							"name": "List of work items",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items?limit=250&offset=0&count=false&ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"requesterDisplayName\": \"John Smith\",\n    \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"ownerName\": \"Jason Smith\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"description\": \"Create account on source 'AD'\",\n    \"state\": \"CANCELED\",\n    \"type\": \"DELEGATION\",\n    \"remediationItems\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"targetName\": \"john.smith\",\n      \"targetDisplayName\": \"emailAddress\",\n      \"applicationName\": \"Active Directory\",\n      \"attributeName\": \"phoneNumber\",\n      \"attributeOperation\": \"update\",\n      \"attributeValue\": \"512-555-1212\",\n      \"nativeIdentity\": \"jason.smith2\"\n    },\n    \"approvalItems\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"account\": \"john.smith\",\n      \"application\": \"Active Directory\",\n      \"attributeName\": \"emailAddress\",\n      \"attributeOperation\": \"update\",\n      \"attributeValue\": \"a@b.com\",\n      \"state\": \"REJECTED\"\n    },\n    \"name\": \"Account Create\",\n    \"completed\": \"2018-10-19T13:49:37.385Z\",\n    \"numItems\": 19,\n    \"form\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"name\": \"AccountSelection Form\",\n      \"title\": \"Account Selection for John.Doe\",\n      \"subtitle\": \"Please select from the following\",\n      \"targetUser\": \"Jane.Doe\",\n      \"sections\": {\n        \"name\": \"Field1\",\n        \"label\": \"Section 1\"\n      }\n    },\n    \"errors\": [\n      \"The work item ID that was specified was not found.\"\n    ]\n  },\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"requesterDisplayName\": \"John Smith\",\n    \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"ownerName\": \"Jason Smith\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"description\": \"Create account on source 'AD'\",\n    \"state\": \"RETURNED\",\n    \"type\": \"VIOLATIONREVIEW\",\n    \"remediationItems\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"targetName\": \"john.smith\",\n      \"targetDisplayName\": \"emailAddress\",\n      \"applicationName\": \"Active Directory\",\n      \"attributeName\": \"phoneNumber\",\n      \"attributeOperation\": \"update\",\n      \"attributeValue\": \"512-555-1212\",\n      \"nativeIdentity\": \"jason.smith2\"\n    },\n    \"approvalItems\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"account\": \"john.smith\",\n      \"application\": \"Active Directory\",\n      \"attributeName\": \"emailAddress\",\n      \"attributeOperation\": \"update\",\n      \"attributeValue\": \"a@b.com\",\n      \"state\": \"RETURNED\"\n    },\n    \"name\": \"Account Create\",\n    \"completed\": \"2018-10-19T13:49:37.385Z\",\n    \"numItems\": 19,\n    \"form\": {\n      \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n      \"name\": \"AccountSelection Form\",\n      \"title\": \"Account Selection for John.Doe\",\n      \"subtitle\": \"Please select from the following\",\n      \"targetUser\": \"Jane.Doe\",\n      \"sections\": {\n        \"name\": \"Field1\",\n        \"label\": \"Section 1\"\n      }\n    },\n    \"errors\": [\n      \"The work item ID that was specified was not found.\"\n    ]\n  }\n]"
						},
						{
							"id": "dd232830-cf47-4dd1-9408-adbdad4ea7c1",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items?limit=250&offset=0&count=false&ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "12348b08-eee1-44c7-952a-06ec4f559f8e",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items?limit=250&offset=0&count=false&ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "fedf329b-328c-4391-944a-12bdc336604a",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items?limit=250&offset=0&count=false&ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "a69cdac7-3c9a-4173-bfa7-ebdf0700ae50",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items?limit=250&offset=0&count=false&ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "ce15d5f8-166b-4bee-a8ac-9e6671fc4dfa",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items?limit=250&offset=0&count=false&ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items"
									],
									"query": [
										{
											"key": "limit",
											"value": "250",
											"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "count",
											"value": "false",
											"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
										},
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a collection of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Count Work Items",
					"id": "2774f601-d0ed-41c9-b13f-66126302331e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/work-items/count?ownerId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"work-items",
								"count"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "<string>",
									"description": "ID of the work item owner."
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a count of work items belonging to either the specified user(admin required), or the current user."
					},
					"response": [
						{
							"id": "5f7715f4-7e28-4158-bec2-77d79df87835",
							"name": "List of work items",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/count?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"count"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a count of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"count\": 29\n}"
						},
						{
							"id": "1813e133-ede2-4734-9850-5d979e399844",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/count?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"count"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a count of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "d2fdbbfd-a20a-44a8-83ca-41d835dddd33",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/count?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"count"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a count of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "4d3029e3-4542-4665-950e-d90780379410",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/count?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"count"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a count of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "87533ab6-90ac-48b2-a0a7-49edcbbafbdf",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/count?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"count"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a count of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "c062b74b-4429-469c-8c70-a66461897d99",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/count?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"count"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a count of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Work Items Summary",
					"id": "4dd8324d-6e3f-4b7c-8883-5c0a7749e48a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/work-items/summary?ownerId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"work-items",
								"summary"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "<string>",
									"description": "ID of the work item owner."
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This gets a summary of work items belonging to either the specified user(admin required), or the current user."
					},
					"response": [
						{
							"id": "83e91bea-b045-4e3c-a107-7082b383b333",
							"name": "List of work items",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/summary?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"summary"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a summary of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"open\": 29,\n  \"completed\": 1,\n  \"total\": 30\n}"
						},
						{
							"id": "e21ea6f0-ce1c-483b-abad-b31512cadff7",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/summary?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"summary"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a summary of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "d9803a9a-fba5-4a4c-af41-a62662bbe0f5",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/summary?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"summary"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a summary of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "36c472e9-ba64-49b0-a90c-9bc5a84218ed",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/summary?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"summary"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a summary of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "3abb7621-fb3c-46b0-a9d6-1bd68d440f7c",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/summary?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"summary"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a summary of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "51855cd6-7a3b-4c3b-8881-2678e5637a73",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/summary?ownerId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"summary"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "<string>",
											"description": "ID of the work item owner."
										}
									],
									"variable": [
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This gets a summary of work items belonging to either the specified user(admin required), or the current user."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Bulk approve Approval Items",
					"id": "7fd9d4a2-afa0-4c32-9a6c-f4f6d0c9b2a1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/work-items/bulk-approve/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"work-items",
								"bulk-approve",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the work item"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API bulk approves Approval Items. Either an admin, or the owning/current user must make this request."
					},
					"response": [
						{
							"id": "17cafb64-9f78-483c-ae09-06131425af6c",
							"name": "A work items details object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-approve/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-approve",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk approves Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterDisplayName\": \"John Smith\",\n  \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"ownerName\": \"Jason Smith\",\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"description\": \"Create account on source 'AD'\",\n  \"state\": \"FINISHED\",\n  \"type\": \"TEST\",\n  \"remediationItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetName\": \"john.smith\",\n    \"targetDisplayName\": \"emailAddress\",\n    \"applicationName\": \"Active Directory\",\n    \"attributeName\": \"phoneNumber\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"512-555-1212\",\n    \"nativeIdentity\": \"jason.smith2\"\n  },\n  \"approvalItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"account\": \"john.smith\",\n    \"application\": \"Active Directory\",\n    \"attributeName\": \"emailAddress\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"a@b.com\",\n    \"state\": \"PENDING\"\n  },\n  \"name\": \"Account Create\",\n  \"completed\": \"2018-10-19T13:49:37.385Z\",\n  \"numItems\": 19,\n  \"form\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"AccountSelection Form\",\n    \"title\": \"Account Selection for John.Doe\",\n    \"subtitle\": \"Please select from the following\",\n    \"targetUser\": \"Jane.Doe\",\n    \"sections\": {\n      \"name\": \"Field1\",\n      \"label\": \"Section 1\"\n    }\n  },\n  \"errors\": [\n    \"The work item ID that was specified was not found.\"\n  ]\n}"
						},
						{
							"id": "81352887-5b1d-4dfc-b812-b68587927043",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-approve/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-approve",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk approves Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "f08c9628-783a-4945-ad7b-3f48268051bf",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-approve/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-approve",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk approves Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "91e0ae43-b11b-4da9-a05b-a31f1430a0e2",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-approve/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-approve",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk approves Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "1eeb367f-0313-4345-bb2c-bc80d048b0d0",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-approve/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-approve",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk approves Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "0b302c68-2d3c-4730-af0b-8b3acde29a01",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-approve/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-approve",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk approves Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "ac7dd210-e93a-4125-98d1-7c6e9844c3e2",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-approve/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-approve",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk approves Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Bulk reject Approval Items",
					"id": "f17a02ff-533b-4044-8988-efecffc4bbd3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/work-items/bulk-reject/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"work-items",
								"bulk-reject",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) The ID of the work item"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API bulk rejects Approval Items. Either an admin, or the owning/current user must make this request."
					},
					"response": [
						{
							"id": "84ab528f-cc23-4605-a05b-af5c76347fa5",
							"name": "A work items details object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-reject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-reject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk rejects Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"requesterDisplayName\": \"John Smith\",\n  \"ownerId\": \"2c9180835d2e5168015d32f890ca1581\",\n  \"ownerName\": \"Jason Smith\",\n  \"created\": \"2017-07-11T18:45:37.098Z\",\n  \"modified\": \"2018-06-25T20:22:28.104Z\",\n  \"description\": \"Create account on source 'AD'\",\n  \"state\": \"FINISHED\",\n  \"type\": \"TEST\",\n  \"remediationItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetId\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"targetName\": \"john.smith\",\n    \"targetDisplayName\": \"emailAddress\",\n    \"applicationName\": \"Active Directory\",\n    \"attributeName\": \"phoneNumber\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"512-555-1212\",\n    \"nativeIdentity\": \"jason.smith2\"\n  },\n  \"approvalItems\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"account\": \"john.smith\",\n    \"application\": \"Active Directory\",\n    \"attributeName\": \"emailAddress\",\n    \"attributeOperation\": \"update\",\n    \"attributeValue\": \"a@b.com\",\n    \"state\": \"PENDING\"\n  },\n  \"name\": \"Account Create\",\n  \"completed\": \"2018-10-19T13:49:37.385Z\",\n  \"numItems\": 19,\n  \"form\": {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"AccountSelection Form\",\n    \"title\": \"Account Selection for John.Doe\",\n    \"subtitle\": \"Please select from the following\",\n    \"targetUser\": \"Jane.Doe\",\n    \"sections\": {\n      \"name\": \"Field1\",\n      \"label\": \"Section 1\"\n    }\n  },\n  \"errors\": [\n    \"The work item ID that was specified was not found.\"\n  ]\n}"
						},
						{
							"id": "5b082f27-150d-441e-946f-3b5954e7bdc6",
							"name": "Client Error - Returned if the request body is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-reject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-reject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk rejects Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
						},
						{
							"id": "e8aad6b7-aa01-453f-af2c-0c95d5ea872f",
							"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-reject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-reject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk rejects Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {}\n}"
						},
						{
							"id": "782bb46e-c085-4d75-8758-30c7be055576",
							"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-reject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-reject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk rejects Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
						},
						{
							"id": "67b0e287-6e83-48a4-8ca4-0a39b7143bf4",
							"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-reject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-reject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk rejects Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
						},
						{
							"id": "df2171af-4d14-4913-bd34-b197eb8ac0d4",
							"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-reject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-reject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk rejects Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": {}\n}"
						},
						{
							"id": "a8575be3-9747-4def-bae7-35475fa697de",
							"name": "Internal Server Error - Returned if there is an unexpected error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/work-items/bulk-reject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"work-items",
										"bulk-reject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the work item"
										},
										{
											"key": "tenant",
											"value": "{{tenant}}",
											"description": "This is the name of your tenant, typically your company's name."
										}
									]
								},
								"description": "This API bulk rejects Approval Items. Either an admin, or the owning/current user must make this request."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "2b4a8955-6034-44e1-8d8c-bf7caf0a3130"
		},
		{
			"name": "Access Request Status",
			"id": "43de4f92-fd1c-4780-8cb5-d6e3e0746fc8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/access-request-status?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&count=false&limit=250&offset=<integer>&filters=<string>&sorters=<comma-separated>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"access-request-status"
					],
					"query": [
						{
							"key": "requested-for",
							"value": "<string>",
							"description": "Filter the results by the identity for which the requests were made. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
						},
						{
							"key": "requested-by",
							"value": "<string>",
							"description": "Filter the results by the identity that made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
						},
						{
							"key": "regarding-identity",
							"value": "<string>",
							"description": "Filter the results by the specified identity which is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
						},
						{
							"key": "count",
							"value": "false",
							"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored."
						},
						{
							"key": "limit",
							"value": "250",
							"description": "Max number of results to return."
						},
						{
							"key": "offset",
							"value": "<integer>",
							"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified."
						},
						{
							"key": "filters",
							"value": "<string>",
							"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**accountActivityItemId**: *eq, in*"
						},
						{
							"key": "sorters",
							"value": "<comma-separated>",
							"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified, accountActivityItemId**"
						}
					],
					"variable": [
						{
							"key": "tenant",
							"value": "{{tenant}}",
							"description": "This is the name of your tenant, typically your company's name."
						}
					]
				},
				"description": "The Access Request Status API returns a list of access request statuses based on the specified query parameters.\nAny token with any authority can request their own status. A token with ORG_ADMIN authority is required to call this API to get a list of statuses for other users."
			},
			"response": [
				{
					"id": "f2a023f0-a874-4198-b8a3-b3677f07334c",
					"name": "List of requested item status.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-status?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&count=false&limit=250&offset=<integer>&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-status"
							],
							"query": [
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "Filter the results by the identity for which the requests were made. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "requested-by",
									"value": "<string>",
									"description": "Filter the results by the identity that made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "regarding-identity",
									"value": "<string>",
									"description": "Filter the results by the specified identity which is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return."
								},
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**accountActivityItemId**: *eq, in*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified, accountActivityItemId**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "The Access Request Status API returns a list of access request statuses based on the specified query parameters.\nAny token with any authority can request their own status. A token with ORG_ADMIN authority is required to call this API to get a list of statuses for other users."
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"name\": \"AccessProfile1\",\n    \"type\": \"ACCESS_PROFILE\",\n    \"cancelledRequestDetails\": {\n      \"comment\": \"Nisl quis ipsum quam quisque condimentum nunc ut dolor nunc.\",\n      \"owner\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"William Wilson\"\n      },\n      \"modified\": \"2019-12-20T09:17:12.192Z\"\n    },\n    \"errorMessages\": [\n      [\n        {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        }\n      ],\n      [\n        {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        }\n      ]\n    ],\n    \"state\": \"EXECUTING\",\n    \"approvalDetails\": [\n      {\n        \"forwarded\": true,\n        \"originalOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"currentOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"reviewedBy\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"modified\": \"2019-08-23T18:52:57.398Z\",\n        \"status\": \"PENDING\",\n        \"scheme\": \"APP_OWNER\",\n        \"errorMessages\": [\n          {\n            \"locale\": \"en-US\",\n            \"localeOrigin\": \"DEFAULT\",\n            \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n          },\n          {\n            \"locale\": \"en-US\",\n            \"localeOrigin\": \"DEFAULT\",\n            \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n          }\n        ],\n        \"comment\": \"pariatur fugiat cupidatat dolor sit\",\n        \"removeDate\": \"2020-07-11T00:00:00Z\"\n      },\n      {\n        \"forwarded\": true,\n        \"originalOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"currentOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"reviewedBy\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"modified\": \"2019-08-23T18:52:57.398Z\",\n        \"status\": \"PENDING\",\n        \"scheme\": \"ROLE_OWNER\",\n        \"errorMessages\": [\n          {\n            \"locale\": \"en-US\",\n            \"localeOrigin\": \"DEFAULT\",\n            \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n          },\n          {\n            \"locale\": \"en-US\",\n            \"localeOrigin\": \"DEFAULT\",\n            \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n          }\n        ],\n        \"comment\": \"elit velit quis\",\n        \"removeDate\": \"2020-07-11T00:00:00Z\"\n      }\n    ],\n    \"manualWorkItemDetails\": [\n      {\n        \"forwarded\": true,\n        \"originalOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"currentOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"modified\": \"2019-08-23T18:52:57.398Z\",\n        \"status\": \"PENDING\"\n      },\n      {\n        \"forwarded\": true,\n        \"originalOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"currentOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"modified\": \"2019-08-23T18:52:57.398Z\",\n        \"status\": \"PENDING\"\n      }\n    ],\n    \"accountActivityItemId\": \"2c9180926cbfbddd016cbfc7c3b10010\",\n    \"requestType\": \"GRANT_ACCESS\",\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\",\n    \"requester\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedFor\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requesterComment\": {\n      \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n      \"author\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"Adam Kennedy\"\n      },\n      \"created\": \"2017-07-11T18:45:37.098Z\"\n    },\n    \"sodViolationContext\": {\n      \"state\": \"SUCCESS\",\n      \"uuid\": \"f73d16e9-a038-46c5-b217-1246e15fdbdd\",\n      \"violationCheckResult\": {\n        \"message\": {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        \"clientMetadata\": {\n          \"requestedAppName\": \"test-app\",\n          \"requestedAppId\": \"2c91808f7892918f0178b78da4a305a1\"\n        },\n        \"violationContexts\": [\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          },\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ],\n        \"violatedPolicies\": [\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          },\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          }\n        ]\n      }\n    },\n    \"provisioningDetails\": {\n      \"orderedSubPhaseReferences\": \"manualWorkItemDetails\"\n    },\n    \"preApprovalTriggerDetails\": {\n      \"comment\": \"Access is Approved\",\n      \"reviewer\": \"John Doe\",\n      \"decision\": \"APPROVED\"\n    },\n    \"accessRequestPhases\": [\n      {\n        \"started\": \"2020-07-11T00:00:00Z\",\n        \"finished\": \"2020-07-12T00:00:00Z\",\n        \"name\": \"APPROVAL_PHASE\",\n        \"state\": \"COMPLETED\",\n        \"result\": \"SUCCESSFUL\",\n        \"phaseReference\": \"approvalDetails\"\n      },\n      {\n        \"started\": \"2020-07-11T00:00:00Z\",\n        \"finished\": \"2020-07-12T00:00:00Z\",\n        \"name\": \"APPROVAL_PHASE\",\n        \"state\": \"COMPLETED\",\n        \"result\": \"SUCCESSFUL\",\n        \"phaseReference\": \"approvalDetails\"\n      }\n    ],\n    \"description\": \"This is the Engineering role that engineers are granted.\",\n    \"removeDate\": \"2019-10-23T00:00:00.000Z\",\n    \"cancelable\": true,\n    \"accessRequestId\": \"urn:uuid:ed5a9a7e-0116-c5dc-34a6-cb0e8e931598\"\n  },\n  {\n    \"name\": \"AccessProfile1\",\n    \"type\": \"ACCESS_PROFILE\",\n    \"cancelledRequestDetails\": {\n      \"comment\": \"Nisl quis ipsum quam quisque condimentum nunc ut dolor nunc.\",\n      \"owner\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"William Wilson\"\n      },\n      \"modified\": \"2019-12-20T09:17:12.192Z\"\n    },\n    \"errorMessages\": [\n      [\n        {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        }\n      ],\n      [\n        {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        }\n      ]\n    ],\n    \"state\": \"EXECUTING\",\n    \"approvalDetails\": [\n      {\n        \"forwarded\": false,\n        \"originalOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"currentOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"reviewedBy\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"modified\": \"2019-08-23T18:52:57.398Z\",\n        \"status\": \"PENDING\",\n        \"scheme\": \"ACCESS_PROFILE_OWNER\",\n        \"errorMessages\": [\n          {\n            \"locale\": \"en-US\",\n            \"localeOrigin\": \"DEFAULT\",\n            \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n          },\n          {\n            \"locale\": \"en-US\",\n            \"localeOrigin\": \"DEFAULT\",\n            \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n          }\n        ],\n        \"comment\": \"dolore sunt amet\",\n        \"removeDate\": \"2020-07-11T00:00:00Z\"\n      },\n      {\n        \"forwarded\": false,\n        \"originalOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"currentOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"reviewedBy\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"modified\": \"2019-08-23T18:52:57.398Z\",\n        \"status\": \"PENDING\",\n        \"scheme\": \"ACCESS_PROFILE_OWNER\",\n        \"errorMessages\": [\n          {\n            \"locale\": \"en-US\",\n            \"localeOrigin\": \"DEFAULT\",\n            \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n          },\n          {\n            \"locale\": \"en-US\",\n            \"localeOrigin\": \"DEFAULT\",\n            \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n          }\n        ],\n        \"comment\": \"deserunt voluptate\",\n        \"removeDate\": \"2020-07-11T00:00:00Z\"\n      }\n    ],\n    \"manualWorkItemDetails\": [\n      {\n        \"forwarded\": true,\n        \"originalOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"currentOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"modified\": \"2019-08-23T18:52:57.398Z\",\n        \"status\": \"PENDING\"\n      },\n      {\n        \"forwarded\": true,\n        \"originalOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"currentOwner\": {\n          \"type\": \"IDENTITY\",\n          \"id\": \"2c91808568c529c60168cca6f90c1313\",\n          \"name\": \"William Wilson\"\n        },\n        \"modified\": \"2019-08-23T18:52:57.398Z\",\n        \"status\": \"PENDING\"\n      }\n    ],\n    \"accountActivityItemId\": \"2c9180926cbfbddd016cbfc7c3b10010\",\n    \"requestType\": \"GRANT_ACCESS\",\n    \"modified\": \"2019-08-23T18:52:59.162Z\",\n    \"created\": \"2019-08-23T18:40:35.772Z\",\n    \"requester\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requestedFor\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c91808568c529c60168cca6f90c1313\",\n      \"name\": \"William Wilson\"\n    },\n    \"requesterComment\": {\n      \"comment\": \"Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat\",\n      \"author\": {\n        \"type\": \"IDENTITY\",\n        \"id\": \"2c91808568c529c60168cca6f90c1313\",\n        \"name\": \"Adam Kennedy\"\n      },\n      \"created\": \"2017-07-11T18:45:37.098Z\"\n    },\n    \"sodViolationContext\": {\n      \"state\": \"SUCCESS\",\n      \"uuid\": \"f73d16e9-a038-46c5-b217-1246e15fdbdd\",\n      \"violationCheckResult\": {\n        \"message\": {\n          \"locale\": \"en-US\",\n          \"localeOrigin\": \"DEFAULT\",\n          \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n        },\n        \"clientMetadata\": {\n          \"requestedAppName\": \"test-app\",\n          \"requestedAppId\": \"2c91808f7892918f0178b78da4a305a1\"\n        },\n        \"violationContexts\": [\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          },\n          {\n            \"policy\": {\n              \"type\": \"IDENTITY\",\n              \"id\": \"2c91808568c529c60168cca6f90c1313\",\n              \"name\": \"William Wilson\"\n            },\n            \"conflictingAccessCriteria\": {\n              \"leftCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              },\n              \"rightCriteria\": {\n                \"criteriaList\": [\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  },\n                  {\n                    \"existing\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"type\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"id\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"name\": {\n                      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ],\n        \"violatedPolicies\": [\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          },\n          {\n            \"type\": \"IDENTITY\",\n            \"id\": \"2c91808568c529c60168cca6f90c1313\",\n            \"name\": \"William Wilson\"\n          }\n        ]\n      }\n    },\n    \"provisioningDetails\": {\n      \"orderedSubPhaseReferences\": \"manualWorkItemDetails\"\n    },\n    \"preApprovalTriggerDetails\": {\n      \"comment\": \"Access is Approved\",\n      \"reviewer\": \"John Doe\",\n      \"decision\": \"APPROVED\"\n    },\n    \"accessRequestPhases\": [\n      {\n        \"started\": \"2020-07-11T00:00:00Z\",\n        \"finished\": \"2020-07-12T00:00:00Z\",\n        \"name\": \"APPROVAL_PHASE\",\n        \"state\": \"COMPLETED\",\n        \"result\": \"SUCCESSFUL\",\n        \"phaseReference\": \"approvalDetails\"\n      },\n      {\n        \"started\": \"2020-07-11T00:00:00Z\",\n        \"finished\": \"2020-07-12T00:00:00Z\",\n        \"name\": \"APPROVAL_PHASE\",\n        \"state\": \"COMPLETED\",\n        \"result\": \"SUCCESSFUL\",\n        \"phaseReference\": \"approvalDetails\"\n      }\n    ],\n    \"description\": \"This is the Engineering role that engineers are granted.\",\n    \"removeDate\": \"2019-10-23T00:00:00.000Z\",\n    \"cancelable\": true,\n    \"accessRequestId\": \"urn:uuid:2dd3a01e-9d66-4c47-42a6-6ccfeaa304f1\"\n  }\n]"
				},
				{
					"id": "bd7caeb7-565a-487d-93e3-6cdcb20255bf",
					"name": "Client Error - Returned if the request body is invalid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-status?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&count=false&limit=250&offset=<integer>&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-status"
							],
							"query": [
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "Filter the results by the identity for which the requests were made. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "requested-by",
									"value": "<string>",
									"description": "Filter the results by the identity that made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "regarding-identity",
									"value": "<string>",
									"description": "Filter the results by the specified identity which is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return."
								},
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**accountActivityItemId**: *eq, in*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified, accountActivityItemId**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "The Access Request Status API returns a list of access request statuses based on the specified query parameters.\nAny token with any authority can request their own status. A token with ORG_ADMIN authority is required to call this API to get a list of statuses for other users."
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
				},
				{
					"id": "e98054b1-8ee4-4055-b0b8-ee1a4a5aae10",
					"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-status?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&count=false&limit=250&offset=<integer>&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-status"
							],
							"query": [
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "Filter the results by the identity for which the requests were made. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "requested-by",
									"value": "<string>",
									"description": "Filter the results by the identity that made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "regarding-identity",
									"value": "<string>",
									"description": "Filter the results by the specified identity which is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return."
								},
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**accountActivityItemId**: *eq, in*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified, accountActivityItemId**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "The Access Request Status API returns a list of access request statuses based on the specified query parameters.\nAny token with any authority can request their own status. A token with ORG_ADMIN authority is required to call this API to get a list of statuses for other users."
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": {}\n}"
				},
				{
					"id": "8b13a962-5d79-4e3a-a28f-db619f1bc735",
					"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-status?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&count=false&limit=250&offset=<integer>&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-status"
							],
							"query": [
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "Filter the results by the identity for which the requests were made. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "requested-by",
									"value": "<string>",
									"description": "Filter the results by the identity that made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "regarding-identity",
									"value": "<string>",
									"description": "Filter the results by the specified identity which is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return."
								},
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**accountActivityItemId**: *eq, in*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified, accountActivityItemId**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "The Access Request Status API returns a list of access request statuses based on the specified query parameters.\nAny token with any authority can request their own status. A token with ORG_ADMIN authority is required to call this API to get a list of statuses for other users."
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
				},
				{
					"id": "3028f950-b14d-4274-9a5c-48a1c72cc476",
					"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-status?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&count=false&limit=250&offset=<integer>&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-status"
							],
							"query": [
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "Filter the results by the identity for which the requests were made. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "requested-by",
									"value": "<string>",
									"description": "Filter the results by the identity that made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "regarding-identity",
									"value": "<string>",
									"description": "Filter the results by the specified identity which is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return."
								},
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**accountActivityItemId**: *eq, in*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified, accountActivityItemId**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "The Access Request Status API returns a list of access request statuses based on the specified query parameters.\nAny token with any authority can request their own status. A token with ORG_ADMIN authority is required to call this API to get a list of statuses for other users."
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": {}\n}"
				},
				{
					"id": "1b9deee9-90ae-480b-877d-5da6ec125dfd",
					"name": "Internal Server Error - Returned if there is an unexpected error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/access-request-status?requested-for=<string>&requested-by=<string>&regarding-identity=<string>&count=false&limit=250&offset=<integer>&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"access-request-status"
							],
							"query": [
								{
									"key": "requested-for",
									"value": "<string>",
									"description": "Filter the results by the identity for which the requests were made. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "requested-by",
									"value": "<string>",
									"description": "Filter the results by the identity that made the requests. *me* indicates the current user. Mutually exclusive with *regarding-identity*."
								},
								{
									"key": "regarding-identity",
									"value": "<string>",
									"description": "Filter the results by the specified identity which is either the requester or target of the requests. *me* indicates the current user. Mutually exclusive with *requested-for* and *requested-by*."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return."
								},
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results. Defaults to 0 if not specified."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**accountActivityItemId**: *eq, in*"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **created, modified, accountActivityItemId**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "The Access Request Status API returns a list of access request statuses based on the specified query parameters.\nAny token with any authority can request their own status. A token with ORG_ADMIN authority is required to call this API to get a list of statuses for other users."
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Set Lifecycle State",
			"id": "ca33d9a4-469d-4fd7-bfe9-73084d355b1c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "scope",
							"value": "sp:scopes:default sp:scopes:all",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "https://tenant.api.identitynow.com/oauth/token",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"lifecycleStateId\": \"<string>\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/identities/:identity-id/set-lifecycle-state",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"identities",
						":identity-id",
						"set-lifecycle-state"
					],
					"variable": [
						{
							"key": "identity-id",
							"value": "<string>",
							"description": "(Required) The ID of the identity to update"
						},
						{
							"key": "tenant",
							"value": "{{tenant}}",
							"description": "This is the name of your tenant, typically your company's name."
						}
					]
				},
				"description": "This endpoint will set/update an identity's lifecycle state to the one provided and updates the corresponding Identity Profile.\nA token with ORG_ADMIN or API authority is required to call this API."
			},
			"response": [
				{
					"id": "a1ee912d-55f3-4314-808a-e995527d11a2",
					"name": "The request was successfully accepted into the system.",
					"originalRequest": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"type": "any"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"type": "any"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"lifecycleStateId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identities/:identity-id/set-lifecycle-state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identities",
								":identity-id",
								"set-lifecycle-state"
							],
							"variable": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "(Required) The ID of the identity to update"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint will set/update an identity's lifecycle state to the one provided and updates the corresponding Identity Profile.\nA token with ORG_ADMIN or API authority is required to call this API."
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"accountActivityId\": \"2c9180837ab5b716017ab7c6c9ef1e20\"\n}"
				},
				{
					"id": "afaebee4-124b-43b8-83ec-bab605c5646f",
					"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
					"originalRequest": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"type": "any"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"type": "any"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"lifecycleStateId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identities/:identity-id/set-lifecycle-state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identities",
								":identity-id",
								"set-lifecycle-state"
							],
							"variable": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "(Required) The ID of the identity to update"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint will set/update an identity's lifecycle state to the one provided and updates the corresponding Identity Profile.\nA token with ORG_ADMIN or API authority is required to call this API."
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": {}\n}"
				},
				{
					"id": "b91162c0-abb1-42eb-ab1b-6b26c35e7a85",
					"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
					"originalRequest": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"type": "any"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"type": "any"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"lifecycleStateId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identities/:identity-id/set-lifecycle-state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identities",
								":identity-id",
								"set-lifecycle-state"
							],
							"variable": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "(Required) The ID of the identity to update"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint will set/update an identity's lifecycle state to the one provided and updates the corresponding Identity Profile.\nA token with ORG_ADMIN or API authority is required to call this API."
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
				},
				{
					"id": "1c5a99d6-aab7-4846-92d6-bb7e2127242d",
					"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
					"originalRequest": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"type": "any"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"type": "any"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"lifecycleStateId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identities/:identity-id/set-lifecycle-state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identities",
								":identity-id",
								"set-lifecycle-state"
							],
							"variable": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "(Required) The ID of the identity to update"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint will set/update an identity's lifecycle state to the one provided and updates the corresponding Identity Profile.\nA token with ORG_ADMIN or API authority is required to call this API."
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
				},
				{
					"id": "ee7a7f06-0456-44f7-815d-0dd4974d8dcd",
					"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
					"originalRequest": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"type": "any"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"type": "any"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"lifecycleStateId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identities/:identity-id/set-lifecycle-state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identities",
								":identity-id",
								"set-lifecycle-state"
							],
							"variable": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "(Required) The ID of the identity to update"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint will set/update an identity's lifecycle state to the one provided and updates the corresponding Identity Profile.\nA token with ORG_ADMIN or API authority is required to call this API."
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": {}\n}"
				},
				{
					"id": "e4e4933e-2ac8-4509-86e3-a8e38c0209c7",
					"name": "Internal Server Error - Returned if there is an unexpected error.",
					"originalRequest": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"type": "any"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://tenant.api.identitynow.com/oauth/token",
									"type": "string"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"value": "sp:scopes:default sp:scopes:all",
									"type": "string"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"type": "any"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"lifecycleStateId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identities/:identity-id/set-lifecycle-state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identities",
								":identity-id",
								"set-lifecycle-state"
							],
							"variable": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "(Required) The ID of the identity to update"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint will set/update an identity's lifecycle state to the one provided and updates the corresponding Identity Profile.\nA token with ORG_ADMIN or API authority is required to call this API."
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Get a list of public identities",
			"id": "03d0a824-5ab5-492b-b736-269efc86ecbd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/public-identities?limit=250&offset=0&count=false&filters=<string>&add-core-filters=false&sorters=<comma-separated>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public-identities"
					],
					"query": [
						{
							"key": "limit",
							"value": "250",
							"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
						},
						{
							"key": "offset",
							"value": "0",
							"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
						},
						{
							"key": "count",
							"value": "false",
							"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
						},
						{
							"key": "filters",
							"value": "<string>",
							"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**alias**: *eq, sw*\n\n**email**: *eq, sw*\n\n**firstname**: *eq, sw*\n\n**lastname**: *eq, sw*"
						},
						{
							"key": "add-core-filters",
							"value": "false",
							"description": "If *true*, only get identities which satisfy ALL the following criteria in addition to any criteria specified by *filters*:\n  - Should be either correlated or protected.\n  - Should not be \"spadmin\" or \"cloudadmin\".\n  - uid should not be null.\n  - lastname should not be null.\n  - email should not be null."
						},
						{
							"key": "sorters",
							"value": "<comma-separated>",
							"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
						}
					],
					"variable": [
						{
							"key": "tenant",
							"value": "{{tenant}}",
							"description": "This is the name of your tenant, typically your company's name."
						}
					]
				}
			},
			"response": [
				{
					"id": "529959c8-51e5-4e04-8167-c5dc09e2ca76",
					"name": "A list of public identity objects.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/public-identities?limit=250&offset=0&count=false&filters=<string>&add-core-filters=false&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-identities"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**alias**: *eq, sw*\n\n**email**: *eq, sw*\n\n**firstname**: *eq, sw*\n\n**lastname**: *eq, sw*"
								},
								{
									"key": "add-core-filters",
									"value": "false",
									"description": "If *true*, only get identities which satisfy ALL the following criteria in addition to any criteria specified by *filters*:\n  - Should be either correlated or protected.\n  - Should not be \"spadmin\" or \"cloudadmin\".\n  - uid should not be null.\n  - lastname should not be null.\n  - email should not be null."
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"2c9180857182305e0171993735622948\",\n    \"name\": \"Alison Ferguso\",\n    \"alias\": \"alison.ferguso\",\n    \"email\": \"alison.ferguso@acme-solar.com\",\n    \"status\": \"Active\",\n    \"manager\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c9180a46faadee4016fb4e018c20639\",\n      \"name\": \"Thomas Edison\"\n    },\n    \"attributes\": [\n      {\n        \"key\": \"phone\",\n        \"name\": \"Phone\",\n        \"value\": \"5125551234\"\n      },\n      {\n        \"key\": \"country\",\n        \"name\": \"Country\",\n        \"value\": \"US\"\n      }\n    ]\n  },\n  {\n    \"id\": \"2c9180a46faadee4016fb4e018c20639\",\n    \"name\": \"Thomas Edison\",\n    \"alias\": \"thomas.edison\",\n    \"email\": \"thomas.edison@acme-solar.com\",\n    \"status\": \"Active\",\n    \"manager\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"2c918086676d3e0601677611dbde220f\",\n      \"name\": \"Mister Manager\"\n    },\n    \"attributes\": [\n      {\n        \"key\": \"phone\",\n        \"name\": \"Phone\",\n        \"value\": \"5125554321\"\n      },\n      {\n        \"key\": \"country\",\n        \"name\": \"Country\",\n        \"value\": \"US\"\n      }\n    ]\n  }\n]"
				},
				{
					"id": "a4f48025-9b0d-462b-afbf-a5281f1c8498",
					"name": "Client Error - Returned if the request body is invalid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/public-identities?limit=250&offset=0&count=false&filters=<string>&add-core-filters=false&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-identities"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**alias**: *eq, sw*\n\n**email**: *eq, sw*\n\n**firstname**: *eq, sw*\n\n**lastname**: *eq, sw*"
								},
								{
									"key": "add-core-filters",
									"value": "false",
									"description": "If *true*, only get identities which satisfy ALL the following criteria in addition to any criteria specified by *filters*:\n  - Should be either correlated or protected.\n  - Should not be \"spadmin\" or \"cloudadmin\".\n  - uid should not be null.\n  - lastname should not be null.\n  - email should not be null."
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
				},
				{
					"id": "2e0a221d-bc34-4948-a517-909243b3dfc5",
					"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/public-identities?limit=250&offset=0&count=false&filters=<string>&add-core-filters=false&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-identities"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**alias**: *eq, sw*\n\n**email**: *eq, sw*\n\n**firstname**: *eq, sw*\n\n**lastname**: *eq, sw*"
								},
								{
									"key": "add-core-filters",
									"value": "false",
									"description": "If *true*, only get identities which satisfy ALL the following criteria in addition to any criteria specified by *filters*:\n  - Should be either correlated or protected.\n  - Should not be \"spadmin\" or \"cloudadmin\".\n  - uid should not be null.\n  - lastname should not be null.\n  - email should not be null."
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": {}\n}"
				},
				{
					"id": "09e5ea07-c020-41fe-982b-99cd07df3dcf",
					"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/public-identities?limit=250&offset=0&count=false&filters=<string>&add-core-filters=false&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-identities"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**alias**: *eq, sw*\n\n**email**: *eq, sw*\n\n**firstname**: *eq, sw*\n\n**lastname**: *eq, sw*"
								},
								{
									"key": "add-core-filters",
									"value": "false",
									"description": "If *true*, only get identities which satisfy ALL the following criteria in addition to any criteria specified by *filters*:\n  - Should be either correlated or protected.\n  - Should not be \"spadmin\" or \"cloudadmin\".\n  - uid should not be null.\n  - lastname should not be null.\n  - email should not be null."
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						}
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": {}\n}"
				},
				{
					"id": "a24c4716-7cfc-4457-ad3c-51e1d0db3910",
					"name": "Internal Server Error - Returned if there is an unexpected error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/public-identities?limit=250&offset=0&count=false&filters=<string>&add-core-filters=false&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public-identities"
							],
							"query": [
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**alias**: *eq, sw*\n\n**email**: *eq, sw*\n\n**firstname**: *eq, sw*\n\n**lastname**: *eq, sw*"
								},
								{
									"key": "add-core-filters",
									"value": "false",
									"description": "If *true*, only get identities which satisfy ALL the following criteria in addition to any criteria specified by *filters*:\n  - Should be either correlated or protected.\n  - Should not be \"spadmin\" or \"cloudadmin\".\n  - uid should not be null.\n  - lastname should not be null.\n  - email should not be null."
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Requestable Objects List",
			"id": "bc833602-6645-4e69-8451-6344eda212b8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/requestable-objects?identity-id=<string>&types=<string>,<string>&term=<string>&statuses=<string>,<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"requestable-objects"
					],
					"query": [
						{
							"key": "identity-id",
							"value": "<string>",
							"description": "If present, the value returns only requestable objects for the specified identity.\n * Admin users can call this with any identity ID value.\n * Non-admin users can only specify *me* or pass their own identity ID value.\n * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result."
						},
						{
							"key": "types",
							"value": "<string>,<string>",
							"description": "Filters the results to the specified type/types, where each type is one of ROLE or ACCESS_PROFILE. If absent, all types are returned. Support for additional types may be added in the future without notice."
						},
						{
							"key": "term",
							"value": "<string>",
							"description": "It allows searching requestable access items with a partial match on the name or description. If term is provided, then the *filter* query parameter will be ignored."
						},
						{
							"key": "statuses",
							"value": "<string>,<string>",
							"description": "Filters the result to the specified status/statuses, where each status is one of AVAILABLE, ASSIGNED, or PENDING. It is an error to specify this parameter without also specifying an *identity-id* parameter. Additional statuses may be added in the future without notice."
						},
						{
							"key": "limit",
							"value": "250",
							"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
						},
						{
							"key": "offset",
							"value": "0",
							"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
						},
						{
							"key": "count",
							"value": "false",
							"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
						},
						{
							"key": "filters",
							"value": "<string>",
							"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq, in, sw*\n"
						},
						{
							"key": "sorters",
							"value": "<comma-separated>",
							"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**\n"
						}
					],
					"variable": [
						{
							"key": "tenant",
							"value": "{{tenant}}",
							"description": "This is the name of your tenant, typically your company's name."
						}
					]
				},
				"description": "This endpoint returns a list of acccess items that that can be requested through the Access Request endpoints. Access items are marked with AVAILABLE, PENDING or ASSIGNED with respect to the identity provided using *identity-id* query param.\nAny authenticated token can call this endpoint to see their requestable access items. A token with ORG_ADMIN authority is required to call this endpoint to return a list of all of the requestable access items for the org or for another identity."
			},
			"response": [
				{
					"id": "853ec48a-1fcb-4fe2-afba-4e740bb2d7cc",
					"name": "List of requestable objects",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/requestable-objects?identity-id=<string>&types=<string>,<string>&term=<string>&statuses=<string>,<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requestable-objects"
							],
							"query": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "If present, the value returns only requestable objects for the specified identity.\n * Admin users can call this with any identity ID value.\n * Non-admin users can only specify *me* or pass their own identity ID value.\n * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result."
								},
								{
									"key": "types",
									"value": "<string>,<string>",
									"description": "Filters the results to the specified type/types, where each type is one of ROLE or ACCESS_PROFILE. If absent, all types are returned. Support for additional types may be added in the future without notice."
								},
								{
									"key": "term",
									"value": "<string>",
									"description": "It allows searching requestable access items with a partial match on the name or description. If term is provided, then the *filter* query parameter will be ignored."
								},
								{
									"key": "statuses",
									"value": "<string>,<string>",
									"description": "Filters the result to the specified status/statuses, where each status is one of AVAILABLE, ASSIGNED, or PENDING. It is an error to specify this parameter without also specifying an *identity-id* parameter. Additional statuses may be added in the future without notice."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq, in, sw*\n"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**\n"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns a list of acccess items that that can be requested through the Access Request endpoints. Access items are marked with AVAILABLE, PENDING or ASSIGNED with respect to the identity provided using *identity-id* query param.\nAny authenticated token can call this endpoint to see their requestable access items. A token with ORG_ADMIN authority is required to call this endpoint to return a list of all of the requestable access items for the org or for another identity."
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"Applied Research Access\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"description\": \"Access to research information, lab results, and schematics.\",\n    \"type\": \"ACCESS_PROFILE\",\n    \"requestStatus\": \"AVAILABLE\",\n    \"identityRequestId\": null,\n    \"ownerRef\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\",\n      \"name\": \"Alison Ferguso\",\n      \"email\": \"alison.ferguso@identitysoon.com\"\n    },\n    \"requestCommentsRequired\": false\n  },\n  {\n    \"id\": \"2c9180835d2e5168015d32f890ca1581\",\n    \"name\": \"Applied Research Access\",\n    \"created\": \"2017-07-11T18:45:37.098Z\",\n    \"modified\": \"2018-06-25T20:22:28.104Z\",\n    \"description\": \"Access to research information, lab results, and schematics.\",\n    \"type\": \"ACCESS_PROFILE\",\n    \"requestStatus\": \"PENDING\",\n    \"identityRequestId\": null,\n    \"ownerRef\": {\n      \"type\": \"IDENTITY\",\n      \"id\": \"5168015d32f890ca15812c9180835d2e\",\n      \"name\": \"Alison Ferguso\",\n      \"email\": \"alison.ferguso@identitysoon.com\"\n    },\n    \"requestCommentsRequired\": true\n  }\n]"
				},
				{
					"id": "5b7ca591-e93f-467a-953e-896e7741201d",
					"name": "Client Error - Returned if the request body is invalid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/requestable-objects?identity-id=<string>&types=<string>,<string>&term=<string>&statuses=<string>,<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requestable-objects"
							],
							"query": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "If present, the value returns only requestable objects for the specified identity.\n * Admin users can call this with any identity ID value.\n * Non-admin users can only specify *me* or pass their own identity ID value.\n * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result."
								},
								{
									"key": "types",
									"value": "<string>,<string>",
									"description": "Filters the results to the specified type/types, where each type is one of ROLE or ACCESS_PROFILE. If absent, all types are returned. Support for additional types may be added in the future without notice."
								},
								{
									"key": "term",
									"value": "<string>",
									"description": "It allows searching requestable access items with a partial match on the name or description. If term is provided, then the *filter* query parameter will be ignored."
								},
								{
									"key": "statuses",
									"value": "<string>,<string>",
									"description": "Filters the result to the specified status/statuses, where each status is one of AVAILABLE, ASSIGNED, or PENDING. It is an error to specify this parameter without also specifying an *identity-id* parameter. Additional statuses may be added in the future without notice."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq, in, sw*\n"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**\n"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns a list of acccess items that that can be requested through the Access Request endpoints. Access items are marked with AVAILABLE, PENDING or ASSIGNED with respect to the identity provided using *identity-id* query param.\nAny authenticated token can call this endpoint to see their requestable access items. A token with ORG_ADMIN authority is required to call this endpoint to return a list of all of the requestable access items for the org or for another identity."
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
				},
				{
					"id": "1c8a172b-7838-4553-a8af-6c6d7ef41ac2",
					"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/requestable-objects?identity-id=<string>&types=<string>,<string>&term=<string>&statuses=<string>,<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requestable-objects"
							],
							"query": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "If present, the value returns only requestable objects for the specified identity.\n * Admin users can call this with any identity ID value.\n * Non-admin users can only specify *me* or pass their own identity ID value.\n * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result."
								},
								{
									"key": "types",
									"value": "<string>,<string>",
									"description": "Filters the results to the specified type/types, where each type is one of ROLE or ACCESS_PROFILE. If absent, all types are returned. Support for additional types may be added in the future without notice."
								},
								{
									"key": "term",
									"value": "<string>",
									"description": "It allows searching requestable access items with a partial match on the name or description. If term is provided, then the *filter* query parameter will be ignored."
								},
								{
									"key": "statuses",
									"value": "<string>,<string>",
									"description": "Filters the result to the specified status/statuses, where each status is one of AVAILABLE, ASSIGNED, or PENDING. It is an error to specify this parameter without also specifying an *identity-id* parameter. Additional statuses may be added in the future without notice."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq, in, sw*\n"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**\n"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns a list of acccess items that that can be requested through the Access Request endpoints. Access items are marked with AVAILABLE, PENDING or ASSIGNED with respect to the identity provided using *identity-id* query param.\nAny authenticated token can call this endpoint to see their requestable access items. A token with ORG_ADMIN authority is required to call this endpoint to return a list of all of the requestable access items for the org or for another identity."
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": {}\n}"
				},
				{
					"id": "15188164-805a-414d-940a-a9e5217e7950",
					"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/requestable-objects?identity-id=<string>&types=<string>,<string>&term=<string>&statuses=<string>,<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requestable-objects"
							],
							"query": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "If present, the value returns only requestable objects for the specified identity.\n * Admin users can call this with any identity ID value.\n * Non-admin users can only specify *me* or pass their own identity ID value.\n * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result."
								},
								{
									"key": "types",
									"value": "<string>,<string>",
									"description": "Filters the results to the specified type/types, where each type is one of ROLE or ACCESS_PROFILE. If absent, all types are returned. Support for additional types may be added in the future without notice."
								},
								{
									"key": "term",
									"value": "<string>",
									"description": "It allows searching requestable access items with a partial match on the name or description. If term is provided, then the *filter* query parameter will be ignored."
								},
								{
									"key": "statuses",
									"value": "<string>,<string>",
									"description": "Filters the result to the specified status/statuses, where each status is one of AVAILABLE, ASSIGNED, or PENDING. It is an error to specify this parameter without also specifying an *identity-id* parameter. Additional statuses may be added in the future without notice."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq, in, sw*\n"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**\n"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns a list of acccess items that that can be requested through the Access Request endpoints. Access items are marked with AVAILABLE, PENDING or ASSIGNED with respect to the identity provided using *identity-id* query param.\nAny authenticated token can call this endpoint to see their requestable access items. A token with ORG_ADMIN authority is required to call this endpoint to return a list of all of the requestable access items for the org or for another identity."
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
				},
				{
					"id": "403dd95f-e300-428c-83af-6a8d00e28b09",
					"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/requestable-objects?identity-id=<string>&types=<string>,<string>&term=<string>&statuses=<string>,<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requestable-objects"
							],
							"query": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "If present, the value returns only requestable objects for the specified identity.\n * Admin users can call this with any identity ID value.\n * Non-admin users can only specify *me* or pass their own identity ID value.\n * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result."
								},
								{
									"key": "types",
									"value": "<string>,<string>",
									"description": "Filters the results to the specified type/types, where each type is one of ROLE or ACCESS_PROFILE. If absent, all types are returned. Support for additional types may be added in the future without notice."
								},
								{
									"key": "term",
									"value": "<string>",
									"description": "It allows searching requestable access items with a partial match on the name or description. If term is provided, then the *filter* query parameter will be ignored."
								},
								{
									"key": "statuses",
									"value": "<string>,<string>",
									"description": "Filters the result to the specified status/statuses, where each status is one of AVAILABLE, ASSIGNED, or PENDING. It is an error to specify this parameter without also specifying an *identity-id* parameter. Additional statuses may be added in the future without notice."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq, in, sw*\n"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**\n"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns a list of acccess items that that can be requested through the Access Request endpoints. Access items are marked with AVAILABLE, PENDING or ASSIGNED with respect to the identity provided using *identity-id* query param.\nAny authenticated token can call this endpoint to see their requestable access items. A token with ORG_ADMIN authority is required to call this endpoint to return a list of all of the requestable access items for the org or for another identity."
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": {}\n}"
				},
				{
					"id": "7421536a-b32f-472e-973e-17134e51a73e",
					"name": "Internal Server Error - Returned if there is an unexpected error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/requestable-objects?identity-id=<string>&types=<string>,<string>&term=<string>&statuses=<string>,<string>&limit=250&offset=0&count=false&filters=<string>&sorters=<comma-separated>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"requestable-objects"
							],
							"query": [
								{
									"key": "identity-id",
									"value": "<string>",
									"description": "If present, the value returns only requestable objects for the specified identity.\n * Admin users can call this with any identity ID value.\n * Non-admin users can only specify *me* or pass their own identity ID value.\n * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result."
								},
								{
									"key": "types",
									"value": "<string>,<string>",
									"description": "Filters the results to the specified type/types, where each type is one of ROLE or ACCESS_PROFILE. If absent, all types are returned. Support for additional types may be added in the future without notice."
								},
								{
									"key": "term",
									"value": "<string>",
									"description": "It allows searching requestable access items with a partial match on the name or description. If term is provided, then the *filter* query parameter will be ignored."
								},
								{
									"key": "statuses",
									"value": "<string>,<string>",
									"description": "Filters the result to the specified status/statuses, where each status is one of AVAILABLE, ASSIGNED, or PENDING. It is an error to specify this parameter without also specifying an *identity-id* parameter. Additional statuses may be added in the future without notice."
								},
								{
									"key": "limit",
									"value": "250",
									"description": "Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "count",
									"value": "false",
									"description": "If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information."
								},
								{
									"key": "filters",
									"value": "<string>",
									"description": "Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**id**: *eq, in*\n\n**name**: *eq, in, sw*\n"
								},
								{
									"key": "sorters",
									"value": "<comma-separated>",
									"description": "Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **name**\n"
								}
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This endpoint returns a list of acccess items that that can be requested through the Access Request endpoints. Access items are marked with AVAILABLE, PENDING or ASSIGNED with respect to the identity provided using *identity-id* query param.\nAny authenticated token can call this endpoint to see their requestable access items. A token with ORG_ADMIN authority is required to call this endpoint to return a list of all of the requestable access items for the org or for another identity."
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Query Password Info",
			"id": "0db15f26-77ab-4fda-b8f2-2b9338c0fa24",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userName\": \"<string>\",\n  \"sourceName\": \"<string>\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/query-password-info",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"query-password-info"
					],
					"variable": [
						{
							"key": "tenant",
							"value": "{{tenant}}",
							"description": "This is the name of your tenant, typically your company's name."
						}
					]
				},
				"description": "This API is used to query password related information. A token with API authority is required to call this API."
			},
			"response": [
				{
					"id": "d688c4da-69a6-43f0-9b04-08dd036d2433",
					"name": "Reference to the password info.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"<string>\",\n  \"sourceName\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query-password-info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query-password-info"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to query password related information. A token with API authority is required to call this API."
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"identityId\": \"2c918085744fec4301746f9a5bce4605\",\n  \"sourceId\": \"2c918083746f642c01746f990884012a\",\n  \"publicKeyId\": \"N2M1OTJiMGEtMDJlZS00ZWU3LTkyYTEtNjA5YmI5NWE3ZWVh\",\n  \"publicKey\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuGFkWi2J75TztpbaPKd36bJnIB3J8gZ6UcoS9oSDYsqBzPpTsfZXYaEf4Y4BKGgJIXmE/lwhwuj7mU1itdZ2qTSNFtnXA8Fn75c3UUkk+h+wdZbkuSmqlsJo3R1OnJkwkJggcAy9Jvk9jlcrNLWorpQ1w9raUvxtvfgkSdq153KxotenQ1HciSyZ0nA/Kw0UaucLnho8xdRowZs11afXGXA9IT9H6D8T6zUdtSxm0nAyH+mluma5LdTfaM50W3l/L8q56Vrqmx2pZIiwdx/0+g3Y++jV70zom0ZBkC1MmSoLMrQYG5OICNjr72f78B2PaGXfarQHqARLjKpMVt9YIQIDAQAB\",\n  \"accounts\": [\n    {\n      \"accountId\": \"CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com\",\n      \"accountName\": \"Abby.Smith\"\n    },\n    {\n      \"accountId\": \"CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com\",\n      \"accountName\": \"Abby.Smith\"\n    }\n  ],\n  \"policies\": [\n    \"passwordRepeatedChar is 3\",\n    \"passwordMinAlpha is 1\",\n    \"passwordMinLength is 5\",\n    \"passwordMinNumeric is 1\"\n  ]\n}"
				},
				{
					"id": "6a2db58b-0cb5-4dfa-80a4-1ea1ac89bebb",
					"name": "Client Error - Returned if the request body is invalid.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"<string>\",\n  \"sourceName\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query-password-info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query-password-info"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to query password related information. A token with API authority is required to call this API."
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
				},
				{
					"id": "4aadc649-1ca0-428b-b7ee-be4baa6633f5",
					"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"<string>\",\n  \"sourceName\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query-password-info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query-password-info"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to query password related information. A token with API authority is required to call this API."
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": {}\n}"
				},
				{
					"id": "7fc53922-37ed-4939-b580-5fb48c6cbf85",
					"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"<string>\",\n  \"sourceName\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query-password-info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query-password-info"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to query password related information. A token with API authority is required to call this API."
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
				},
				{
					"id": "681ce8f5-899b-41a3-8ee8-f54e0dab191b",
					"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"<string>\",\n  \"sourceName\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query-password-info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query-password-info"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to query password related information. A token with API authority is required to call this API."
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": {}\n}"
				},
				{
					"id": "e4b93ce2-29b9-445f-8046-ccff36f1f6c1",
					"name": "Internal Server Error - Returned if there is an unexpected error.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"<string>\",\n  \"sourceName\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query-password-info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query-password-info"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to query password related information. A token with API authority is required to call this API."
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Set Identity's Password",
			"id": "cf641d95-ff84-4d2a-ae98-9dd53957ec63",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"identityId\": \"<string>\",\n  \"encryptedPassword\": \"<string>\",\n  \"publicKeyId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"sourceId\": \"<string>\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/set-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"set-password"
					],
					"variable": [
						{
							"key": "tenant",
							"value": "{{tenant}}",
							"description": "This is the name of your tenant, typically your company's name."
						}
					]
				},
				"description": "This API is used to set a password for an identity. The password can only be set by the actual identity owner or by a trusted API client application."
			},
			"response": [
				{
					"id": "c5c74a60-6898-49af-9a8d-bdbe2bea58ec",
					"name": "Reference to the password change.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identityId\": \"<string>\",\n  \"encryptedPassword\": \"<string>\",\n  \"publicKeyId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"sourceId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/set-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"set-password"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to set a password for an identity. The password can only be set by the actual identity owner or by a trusted API client application."
					},
					"status": "Accepted",
					"code": 202,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"requestId\": \"089899f13a8f4da7824996191587bab9\",\n  \"state\": \"IN_PROGRESS\"\n}"
				},
				{
					"id": "adb4c032-1d32-45c9-8b8d-13e9a07c0569",
					"name": "Client Error - Returned if the request body is invalid.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identityId\": \"<string>\",\n  \"encryptedPassword\": \"<string>\",\n  \"publicKeyId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"sourceId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/set-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"set-password"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to set a password for an identity. The password can only be set by the actual identity owner or by a trusted API client application."
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
				},
				{
					"id": "af08c768-cdb8-4d4e-9cb7-743cb12f073c",
					"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identityId\": \"<string>\",\n  \"encryptedPassword\": \"<string>\",\n  \"publicKeyId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"sourceId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/set-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"set-password"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to set a password for an identity. The password can only be set by the actual identity owner or by a trusted API client application."
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": {}\n}"
				},
				{
					"id": "2dbe8f81-079c-4bd3-b6ba-40219d9a7e3f",
					"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identityId\": \"<string>\",\n  \"encryptedPassword\": \"<string>\",\n  \"publicKeyId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"sourceId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/set-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"set-password"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to set a password for an identity. The password can only be set by the actual identity owner or by a trusted API client application."
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
				},
				{
					"id": "63df82b1-6fa6-4c41-99ce-b1ae5dd16952",
					"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identityId\": \"<string>\",\n  \"encryptedPassword\": \"<string>\",\n  \"publicKeyId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"sourceId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/set-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"set-password"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to set a password for an identity. The password can only be set by the actual identity owner or by a trusted API client application."
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": {}\n}"
				},
				{
					"id": "afac0312-55d9-4aeb-99ca-3a9c0f31140a",
					"name": "Internal Server Error - Returned if there is an unexpected error.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identityId\": \"<string>\",\n  \"encryptedPassword\": \"<string>\",\n  \"publicKeyId\": \"<string>\",\n  \"accountId\": \"<string>\",\n  \"sourceId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/set-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"set-password"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API is used to set a password for an identity. The password can only be set by the actual identity owner or by a trusted API client application."
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Get Password Change Request Status",
			"id": "1a25fc6e-189b-46ec-891d-c837e6c6e3ac",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/password-change-status/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"password-change-status",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<string>",
							"description": "(Required) Password change request ID"
						},
						{
							"key": "tenant",
							"value": "{{tenant}}",
							"description": "This is the name of your tenant, typically your company's name."
						}
					]
				},
				"description": "This API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."
			},
			"response": [
				{
					"id": "615f918a-284e-4ad7-be03-4b8d6e71c32a",
					"name": "Status of the password change request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/password-change-status/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"password-change-status",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Password change request ID"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"requestId\": \"089899f13a8f4da7824996191587bab9\",\n  \"state\": \"IN_PROGRESS\",\n  \"errors\": [\n    \"The password change payload is invalid\"\n  ],\n  \"sourceIds\": [\n    \"2c918083746f642c01746f990884012a\"\n  ]\n}"
				},
				{
					"id": "6a9b81a2-f40b-420e-a209-35acdc3246ea",
					"name": "Client Error - Returned if the request body is invalid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/password-change-status/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"password-change-status",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Password change request ID"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"400.1 Bad Request Content\",\n  \"trackingId\": \"e7eab60924f64aa284175b9fa3309599\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ],\n  \"causes\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    },\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The request was syntactically correct but its content is semantically invalid.\"\n    }\n  ]\n}"
				},
				{
					"id": "014dabfc-efb5-4b5f-a145-9bb508cf681b",
					"name": "Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/password-change-status/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"password-change-status",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Password change request ID"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": {}\n}"
				},
				{
					"id": "945ff7e2-8e9b-45a5-9fa9-95f6db00b4e2",
					"name": "Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/password-change-status/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"password-change-status",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Password change request ID"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"403 Forbidden\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server understood the request but refuses to authorize it.\"\n    }\n  ]\n}"
				},
				{
					"id": "3b099d68-2963-40ac-b948-48620f5a8dc5",
					"name": "Not Found - returned if the request URL refers to a resource or object that does not exist",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/password-change-status/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"password-change-status",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Password change request ID"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"404 Not found\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"The server did not find a current representation for the target resource.\"\n    }\n  ]\n}"
				},
				{
					"id": "dfea1750-a1ea-4d51-b7d6-56038478e354",
					"name": "Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/password-change-status/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"password-change-status",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Password change request ID"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."
					},
					"status": "Too Many Requests",
					"code": 429,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": {}\n}"
				},
				{
					"id": "3034c68c-1f89-4f0e-9571-e3322fcee192",
					"name": "Internal Server Error - Returned if there is an unexpected error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/password-change-status/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"password-change-status",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Password change request ID"
								},
								{
									"key": "tenant",
									"value": "{{tenant}}",
									"description": "This is the name of your tenant, typically your company's name."
								}
							]
						},
						"description": "This API returns the status of a password change request. A token with identity owner or trusted API client application authority is required to call this API."
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"detailCode\": \"500.0 Internal Fault\",\n  \"trackingId\": \"b21b1f7ce4da4d639f2c62a57171b427\",\n  \"messages\": [\n    {\n      \"locale\": \"en-US\",\n      \"localeOrigin\": \"DEFAULT\",\n      \"text\": \"An internal fault occurred.\"\n    }\n  ]\n}"
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "scope",
				"value": "sp:scopes:default sp:scopes:all",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://tenant.api.identitynow.com/oauth/token",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "client_credentials",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "0bfe2bb7-bc8b-48f1-8a4a-f4b1eb69ea0a",
			"key": "tenant",
			"value": "sailpoint",
			"type": "any",
			"description": "This is the name of your tenant, typically your company's name."
		},
		{
			"id": "4bd2842e-efc5-4aba-9134-b137719947cd",
			"key": "baseUrl",
			"value": "https://{{tenant}}.api.identitynow.com/v3",
			"type": "string"
		}
	]
}